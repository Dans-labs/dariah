import React from 'react'

import DocMd from 'DocMd.jsx'
import DocPdf from 'DocPdf.jsx'
import DocHtml from 'DocHtml.jsx'
import NotFound from 'NotFound.jsx'

/**
 * @module Doc
 */

/**
 * The document types that can be handled by the Doc component.
 * `md` stands for MarkDown.
 */
const docType = {
  md: DocMd,
  pdf: DocPdf,
  html: DocHtml,
}

/**
 * **purely functional** {@link external:Component|Component}
 *
 * Displays a document. Depending of the type of document, a specialized
 * Doc class will be invoked.
 *
 * @class
 * @param {Object} params The parameters generated by the
 * {@link external:Routing|route} that rendered this component
 * @param {Object} route The
 * {@link external:Routing|route} that rendered this component
 * @returns {Fragment}
 */
const Doc = ({ location: { pathname: docPath } }) => {
  const [docDir, docFile] = /^(.*)\/([^/]+)$/g.exec(docPath).slice(1)
  const [docName, docExt] = /^(.*)\.([^.]+)$/g.exec(docFile).slice(1)
  const { [docExt]: DocClass } = docType
  return DocClass == null ? (
    <NotFound params={{splat: `document ${docPath}`}} />
  ) : (
    <DocClass docDir={docDir} docName={docName} docExt={docExt} tag={docName} />
  )
}

export default Doc
