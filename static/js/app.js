(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/main.jsx';var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactDom=require('react-dom');var _reactRouter=require('react-router');var _Provider=require('Provider.jsx');var _Provider2=_interopRequireDefault(_Provider);var _App=require('App.jsx');var _App2=_interopRequireDefault(_App);var _ContribsFiltered=require('ContribsFiltered.jsx');var _ContribsFiltered2=_interopRequireDefault(_ContribsFiltered);var _ContribsMy=require('ContribsMy.jsx');var _ContribsMy2=_interopRequireDefault(_ContribsMy);var _ContribItemPre=require('ContribItemPre.jsx');var _ContribItemPre2=_interopRequireDefault(_ContribItemPre);var _Doc=require('Doc.jsx');var _Doc2=_interopRequireDefault(_Doc);var _NotFound=require('NotFound.jsx');var _NotFound2=_interopRequireDefault(_NotFound);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}(0,_reactDom.render)(_react2.default.createElement(_Provider2.default,{__source:{fileName:_jsxFileName,lineNumber:62}},_react2.default.createElement(_reactRouter.Router,{history:_reactRouter.browserHistory,__source:{fileName:_jsxFileName,lineNumber:63}},_react2.default.createElement(_reactRouter.Redirect,{from:'/about',to:'/docs/about.md',__source:{fileName:_jsxFileName,lineNumber:64}}),_react2.default.createElement(_reactRouter.Redirect,{from:'/docs/about',to:'/docs/about.md',__source:{fileName:_jsxFileName,lineNumber:65}}),_react2.default.createElement(_reactRouter.Redirect,{from:'/about.md',to:'/docs/about.md',__source:{fileName:_jsxFileName,lineNumber:66}}),_react2.default.createElement(_reactRouter.Redirect,{from:'/login',to:'/docs/about.md',__source:{fileName:_jsxFileName,lineNumber:67}}),_react2.default.createElement(_reactRouter.Redirect,{from:'/logout',to:'/docs/about.md',__source:{fileName:_jsxFileName,lineNumber:68}}),_react2.default.createElement(_reactRouter.Redirect,{from:'/slogout',to:'/docs/about.md',__source:{fileName:_jsxFileName,lineNumber:69}}),_react2.default.createElement(_reactRouter.Route,{path:'/',component:_App2.default,__source:{fileName:_jsxFileName,lineNumber:70}},_react2.default.createElement(_reactRouter.IndexRoute,{component:_App2.default,__source:{fileName:_jsxFileName,lineNumber:71}}),_react2.default.createElement(_reactRouter.IndexRedirect,{to:'/docs/about.md',__source:{fileName:_jsxFileName,lineNumber:72}}),_react2.default.createElement(_reactRouter.Route,{path:'contrib',component:_ContribsFiltered2.default,__source:{fileName:_jsxFileName,lineNumber:73}}),_react2.default.createElement(_reactRouter.Route,{path:'mycontrib',component:_ContribsMy2.default,__source:{fileName:_jsxFileName,lineNumber:74}},_react2.default.createElement(_reactRouter.Route,{path:':contribId',component:_ContribItemPre2.default,ownOnly:true,__source:{fileName:_jsxFileName,lineNumber:75}})),_react2.default.createElement(_reactRouter.Route,{path:'docs/:docFile',component:_Doc2.default,__source:{fileName:_jsxFileName,lineNumber:77}}),_react2.default.createElement(_reactRouter.Route,{path:'tech/docs/gen/:docFile',component:_Doc2.default,__source:{fileName:_jsxFileName,lineNumber:78}}),_react2.default.createElement(_reactRouter.Route,{path:'tech/docs/:docFile',component:_Doc2.default,__source:{fileName:_jsxFileName,lineNumber:79}})),_react2.default.createElement(_reactRouter.Route,{path:'*',component:_NotFound2.default,__source:{fileName:_jsxFileName,lineNumber:81}}))),document.getElementById('body'));

},{"App.jsx":5,"ContribItemPre.jsx":7,"ContribsFiltered.jsx":23,"ContribsMy.jsx":24,"Doc.jsx":11,"NotFound.jsx":18,"Provider.jsx":4,"react":"react","react-dom":"react-dom","react-router":"react-router"}],2:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _jsxFileName="/Users/dirk/github/dariah/client/src/js/app/object/CheckboxI.jsx";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _react=require("react");var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return call&&(typeof call==="object"||typeof call==="function")?call:self}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var indeterminate=function indeterminate(states){return!states.allTrue&&!states.allFalse};var CheckboxI=function(_Component){_inherits(CheckboxI,_Component);function CheckboxI(){_classCallCheck(this,CheckboxI);return _possibleConstructorReturn(this,(CheckboxI.__proto__||Object.getPrototypeOf(CheckboxI)).apply(this,arguments))}_createClass(CheckboxI,[{key:"componentDidUpdate",value:function componentDidUpdate(){var states=this.props.states;this.dom.indeterminate=indeterminate(states)}},{key:"onCheck",value:function onCheck(updFilter,filterId,states){var _this2=this;return function(event){return updFilter(filterId,_this2.dom.indeterminate||!states.allTrue)}}},{key:"setIndeterminate",value:function setIndeterminate(domElem){var states=this.props.states;if(domElem){this.dom=domElem;domElem.indeterminate=indeterminate(states)}}},{key:"render",value:function render(){var _props=this.props,states=_props.states,filterId=_props.filterId,updFilter=_props.updFilter;return _react2.default.createElement("input",{ref:this.setIndeterminate.bind(this),type:"checkbox",onChange:this.onCheck(updFilter,filterId,states).bind(this),checked:states.allTrue,__source:{fileName:_jsxFileName,lineNumber:48}})}}]);return CheckboxI}(_react.Component);exports.default=CheckboxI;

},{"react":"react"}],3:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i['return'])_i['return']()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr)){return arr}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i)}else{throw new TypeError('Invalid attempt to destructure non-iterable instance')}}}();var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _MARKER_COLOR,_COUNTRY_STYLE,_jsxFileName='/Users/dirk/github/dariah/client/src/js/app/object/EUMap.jsx';var _react=require('react');var _react2=_interopRequireDefault(_react);var _ByValue=require('ByValue.jsx');var _ByValue2=_interopRequireDefault(_ByValue);var _leaflet=require('leaflet');var _leaflet2=_interopRequireDefault(_leaflet);var _europeGeo=require('europe.geo.js');var _hoc=require('hoc.js');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i]}return arr2}else{return Array.from(arr)}}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i]}return target}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}var mapOptions={HEIGHT:250,MAX_RADIUS:25,LEVEL_OFF:10,ZOOM_INIT:3,MAP_CENTER:[52,12],MAP_BOUNDS:[[30,-20],[70,40]],MARKER_COLOR:(_MARKER_COLOR={},_defineProperty(_MARKER_COLOR,true,{color:'#008800',fillColor:'#00cc00'}),_defineProperty(_MARKER_COLOR,false,{color:'#888844',fillColor:'#bbbb66'}),_MARKER_COLOR),MARKER_SHAPE:{weight:1,fill:true,fillOpacity:0.8},COUNTRY_STYLE:(_COUNTRY_STYLE={},_defineProperty(_COUNTRY_STYLE,true,{color:'#884422',weight:2,fill:true,fillColor:'#aa7766',fillOpacity:1}),_defineProperty(_COUNTRY_STYLE,false,{color:'#777777',weight:1,fill:true,fillColor:'#bbbbbb',fillOpacity:1}),_COUNTRY_STYLE)};var computeRadius=function computeRadius(i,filteredAmountOthers,amounts){var amount=amounts?amounts.has(i)?amounts.get(i):0:0;if(amount==0){return 0}var proportional=mapOptions.MAX_RADIUS*amount/filteredAmountOthers;if(filteredAmountOthers<mapOptions.LEVEL_OFF){return proportional}return mapOptions.LEVEL_OFF*Math.sqrt(proportional)};var EUMap=function(_Component){_inherits(EUMap,_Component);function EUMap(props){_classCallCheck(this,EUMap);var _this=_possibleConstructorReturn(this,(EUMap.__proto__||Object.getPrototypeOf(EUMap)).call(this,props));_this.features=new Map;return _this}_createClass(EUMap,[{key:'setMap',value:function setMap(dom){if(dom){this.dom=dom}}},{key:'render',value:function render(){var _props=this.props,countriesMap=_props.countriesMap,byValueProps=_objectWithoutProperties(_props,['countriesMap']);return _react2.default.createElement('div',{__source:{fileName:_jsxFileName,lineNumber:131}},_react2.default.createElement('div',{ref:this.setMap.bind(this),style:{height:mapOptions.HEIGHT},__source:{fileName:_jsxFileName,lineNumber:132}}),_react2.default.createElement(_ByValue2.default,_extends({},byValueProps,{__source:{fileName:_jsxFileName,lineNumber:136}})))}},{key:'componentDidMount',value:function componentDidMount(){var _this2=this;var _props2=this.props,filterSettings=_props2.filterSettings,filteredAmountOthers=_props2.filteredAmountOthers,amounts=_props2.amounts,countriesMap=_props2.countriesMap;this.map=_leaflet2.default.map(this.dom,{attributionControl:false,center:mapOptions.MAP_CENTER,zoom:mapOptions.ZOOM_INIT,maxBounds:mapOptions.MAP_BOUNDS});this.idFromIso=new Map([].concat(_toConsumableArray(countriesMap.values())).map(function(d){return[d.iso,d._id]}));_leaflet2.default.geoJSON(_europeGeo.countryBorders,{style:function style(feature){return mapOptions.COUNTRY_STYLE[_this2.inDariah(feature)]},onEachFeature:function onEachFeature(feature){if(_this2.inDariah(feature)){var fprops=feature.properties;var iso2=fprops.iso2;var i=_this2.idFromIso.get(iso2);var isOn=filterSettings.get(i);var marker=_leaflet2.default.circleMarker([fprops.lat,fprops.lng],_extends({},mapOptions.MARKER_COLOR[isOn],{radius:computeRadius(i,filteredAmountOthers,amounts)},mapOptions.MARKER_SHAPE,{pane:'markerPane'})).addTo(_this2.map);_this2.features.set(fprops.iso2,marker)}}}).addTo(this.map)}},{key:'inDariah',value:function inDariah(feature){return this.idFromIso.has(feature.properties.iso2)}},{key:'componentDidUpdate',value:function componentDidUpdate(){var _props3=this.props,filterSettings=_props3.filterSettings,filteredAmountOthers=_props3.filteredAmountOthers,amounts=_props3.amounts;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=this.features[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var _step$value=_slicedToArray(_step.value,2),iso2=_step$value[0],marker=_step$value[1];var i=this.idFromIso.get(iso2);var isOn=filterSettings.get(i);marker.setRadius(computeRadius(i,filteredAmountOthers,amounts));marker.setStyle(mapOptions.MARKER_COLOR[isOn])}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}}}]);return EUMap}(_react.Component);exports.default=(0,_hoc.withContext)(EUMap);

},{"ByValue.jsx":6,"europe.geo.js":"europe.geo.js","hoc.js":"hoc.js","leaflet":"leaflet","react":"react"}],4:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _store=require('store.js');var _store2=_interopRequireDefault(_store);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var Provider=function(_Component){_inherits(Provider,_Component);function Provider(){_classCallCheck(this,Provider);return _possibleConstructorReturn(this,(Provider.__proto__||Object.getPrototypeOf(Provider)).apply(this,arguments))}_createClass(Provider,[{key:'getChildContext',value:function getChildContext(){var globals={store:new _store2.default,notification:{component:null},userInfo:new Map,usersMap:new Map,countriesMap:new Map,editStatus:{}};return{globals:globals}}},{key:'render',value:function render(){return _react.Children.only(this.props.children)}}]);return Provider}(_react.Component);Provider.childContextTypes={globals:_react.PropTypes.object.isRequired};exports.default=Provider;

},{"react":"react","store.js":"store.js"}],5:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/pure/App.jsx';var _react=require('react');var _react2=_interopRequireDefault(_react);var _Login=require('Login.jsx');var _Login2=_interopRequireDefault(_Login);var _NavLink=require('NavLink.jsx');var _NavLink2=_interopRequireDefault(_NavLink);var _Notification=require('Notification.jsx');var _Notification2=_interopRequireDefault(_Notification);var _ui=require('ui.js');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var App=function App(_ref){var children=_ref.children;return _react2.default.createElement('div',{__source:{fileName:_jsxFileName,lineNumber:31}},_react2.default.createElement(_Notification2.default,{__source:{fileName:_jsxFileName,lineNumber:32}}),_react2.default.createElement('p',{className:'nav',style:{paddingRight:'5em'},__source:{fileName:_jsxFileName,lineNumber:33}},_react2.default.createElement('img',{style:{marginBottom:'-1em',marginTop:'-1em',height:'3em'},src:'/static/images/inkind_logo_small.png',title:'information about this site',__source:{fileName:_jsxFileName,lineNumber:34}}),_react2.default.createElement(_Login2.default,{__source:{fileName:_jsxFileName,lineNumber:42}})),_react2.default.createElement('div',{className:'nav',style:(0,_ui.columnStyle)('left'),__source:{fileName:_jsxFileName,lineNumber:44}},_react2.default.createElement('ul',{className:'nav',style:{height:'60%'},__source:{fileName:_jsxFileName,lineNumber:45}},_react2.default.createElement('li',{__source:{fileName:_jsxFileName,lineNumber:46}},_react2.default.createElement(_NavLink2.default,{to:'/contrib',__source:{fileName:_jsxFileName,lineNumber:46}},'Contributions')),_react2.default.createElement('li',{__source:{fileName:_jsxFileName,lineNumber:47}},_react2.default.createElement(_NavLink2.default,{to:'/mycontrib',__source:{fileName:_jsxFileName,lineNumber:47}},'My work')),_react2.default.createElement('li',{__source:{fileName:_jsxFileName,lineNumber:48}},_react2.default.createElement(_NavLink2.default,{to:'/docs/about.md',__source:{fileName:_jsxFileName,lineNumber:48}},'About'))),_react2.default.createElement('ul',{className:'nav',style:{height:'30%',verticalAlign:'bottom'},__source:{fileName:_jsxFileName,lineNumber:50}},_react2.default.createElement('li',{__source:{fileName:_jsxFileName,lineNumber:51}},_react2.default.createElement('a',{href:'/api/file/tech/docs/gen/index.html',target:'_blank',__source:{fileName:_jsxFileName,lineNumber:51}},'tech doc')),_react2.default.createElement('li',{__source:{fileName:_jsxFileName,lineNumber:52}},_react2.default.createElement(_NavLink2.default,{to:'/tech/docs/design.pdf',__source:{fileName:_jsxFileName,lineNumber:52}},'diagrams')),_react2.default.createElement('li',{__source:{fileName:_jsxFileName,lineNumber:53}},_react2.default.createElement(_NavLink2.default,{to:'/tech/docs/deploy.md',__source:{fileName:_jsxFileName,lineNumber:53}},'deploy')))),_react2.default.createElement('div',{style:(0,_ui.columnStyle)('right'),__source:{fileName:_jsxFileName,lineNumber:56}},children))};exports.default=App;

},{"Login.jsx":27,"NavLink.jsx":17,"Notification.jsx":28,"react":"react","ui.js":"ui.js"}],6:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i['return'])_i['return']()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr)){return arr}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i)}else{throw new TypeError('Invalid attempt to destructure non-iterable instance')}}}();var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/pure/ByValue.jsx';var _react=require('react');var _react2=_interopRequireDefault(_react);var _Facet=require('Facet.jsx');var _Facet2=_interopRequireDefault(_Facet);var _CheckboxI=require('CheckboxI.jsx');var _CheckboxI2=_interopRequireDefault(_CheckboxI);var _Stats=require('Stats.jsx');var _Stats2=_interopRequireDefault(_Stats);var _Alternatives=require('Alternatives.jsx');var _Alternatives2=_interopRequireDefault(_Alternatives);var _filtering=require('filtering.js');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var ByValue=function ByValue(_ref){var filterId=_ref.filterId,filterField=_ref.filterField,filterLabel=_ref.filterLabel,fieldValues=_ref.fieldValues,filterSettings=_ref.filterSettings,filteredAmount=_ref.filteredAmount,filteredAmountOthers=_ref.filteredAmountOthers,amounts=_ref.amounts,maxCols=_ref.maxCols,updFilter=_ref.updFilter,expanded=_ref.expanded;var rows=(0,_filtering.placeFacets)(fieldValues,maxCols);var statStyle={align:'right'};var labelStyle={marginTop:'0.05em',marginBottom:'0.05em',fontSize:'small',fontWeight:'bold'};var widgetStyle={marginTop:'0.3em',marginBottom:'0.1em',border:'1px solid #aaaaaa',borderRadius:'6px'};return _react2.default.createElement('div',{style:widgetStyle,__source:{fileName:_jsxFileName,lineNumber:65}},rows===null?_react2.default.createElement('p',{__source:{fileName:_jsxFileName,lineNumber:66}},' -no facets '):_react2.default.createElement(_Alternatives2.default,{tag:filterField,controlPlacement:function controlPlacement(control){return _react2.default.createElement('p',{style:labelStyle,__source:{fileName:_jsxFileName,lineNumber:69}},_react2.default.createElement(_CheckboxI2.default,{filterId:filterId,states:(0,_filtering.testAllChecks)(filterSettings),updFilter:updFilter,__source:{fileName:_jsxFileName,lineNumber:70}}),' ',filterLabel,' ',_react2.default.createElement(_Stats2.default,{subTotal:filteredAmount,total:filteredAmountOthers,__source:{fileName:_jsxFileName,lineNumber:75}}),' ',control)},controls:[function(handler){return _react2.default.createElement('a',{className:'fa fa-chevron-down',href:'#',onClick:handler,__source:{fileName:_jsxFileName,lineNumber:80}})},function(handler){return _react2.default.createElement('a',{className:'fa fa-chevron-right',href:'#',onClick:handler,__source:{fileName:_jsxFileName,lineNumber:81}})}],initial:expanded?0:1,alternatives:[_react2.default.createElement('table',{__source:{fileName:_jsxFileName,lineNumber:85}},_react2.default.createElement('tbody',{__source:{fileName:_jsxFileName,lineNumber:86}},rows.map(function(row,i){return _react2.default.createElement('tr',{key:i,__source:{fileName:_jsxFileName,lineNumber:88}},row.map(function(f,j){if(f===null){return _react2.default.createElement('td',{key:j,__source:{fileName:_jsxFileName,lineNumber:91}})}var _f=_slicedToArray(f,2),valueId=_f[0],valueRep=_f[1];return[_react2.default.createElement('td',{key:j,style:j>0?{paddingLeft:'0.5em'}:{},className:'facet',__source:{fileName:_jsxFileName,lineNumber:95}},_react2.default.createElement(_Facet2.default,{key:valueId,filterId:filterId,valueId:valueId,valueRep:valueRep,checked:filterSettings.get(valueId),updFilter:updFilter,__source:{fileName:_jsxFileName,lineNumber:100}})),_react2.default.createElement('td',{style:{textAlign:'right',paddingLeft:'0.5em'},__source:{fileName:_jsxFileName,lineNumber:109}},_react2.default.createElement(_Stats2.default,{subTotal:amounts.get(valueId),__source:{fileName:_jsxFileName,lineNumber:112}}))]}))}))),_react2.default.createElement('div',{__source:{fileName:_jsxFileName,lineNumber:119}})],__source:{fileName:_jsxFileName,lineNumber:67}}))};exports.default=ByValue;

},{"Alternatives.jsx":20,"CheckboxI.jsx":2,"Facet.jsx":14,"Stats.jsx":19,"filtering.js":"filtering.js","react":"react"}],7:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/pure/ContribItemPre.jsx';var _react=require('react');var _react2=_interopRequireDefault(_react);var _ContribItem=require('ContribItem.jsx');var _ContribItem2=_interopRequireDefault(_ContribItem);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var ContribItemPre=function ContribItemPre(_ref){var params=_ref.params,route=_ref.route;var cId=params.contribId;var own=route.ownOnly;return _react2.default.createElement(_ContribItem2.default,{tag:'contrib_'+cId,contribId:cId,ownOnly:own,__source:{fileName:_jsxFileName,lineNumber:23}})};exports.default=ContribItemPre;

},{"ContribItem.jsx":22,"react":"react"}],8:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _jsxFileName="/Users/dirk/github/dariah/client/src/js/app/pure/ContribNew.jsx";var _react=require("react");var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var ContribNew=function ContribNew(_ref){var insertRow=_ref.insertRow;return _react2.default.createElement("a",{className:"button fa fa-plus",href:"#",title:"New contribution",onClick:insertRow,__source:{fileName:_jsxFileName,lineNumber:18}}," new ...")};exports.default=ContribNew;

},{"react":"react"}],9:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/pure/ContribTitle.jsx';var _react=require('react');var _react2=_interopRequireDefault(_react);var _Alternatives=require('Alternatives.jsx');var _Alternatives2=_interopRequireDefault(_Alternatives);var _ContribItem=require('ContribItem.jsx');var _ContribItem2=_interopRequireDefault(_ContribItem);var _NavLink=require('NavLink.jsx');var _NavLink2=_interopRequireDefault(_NavLink);var _hoc=require('hoc.js');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var ContribTitle=function ContribTitle(_ref){var row=_ref.row,inplace=_ref.inplace,editStatus=_ref.editStatus;var rowId=row._id;var rowTitle=row.title;return _react2.default.createElement('tr',{id:rowId,__source:{fileName:_jsxFileName,lineNumber:23}},_react2.default.createElement('td',{__source:{fileName:_jsxFileName,lineNumber:24}},inplace?_react2.default.createElement(_Alternatives2.default,{tag:'contrib_'+rowId,controlPlacement:function controlPlacement(control){return _react2.default.createElement('p',{__source:{fileName:_jsxFileName,lineNumber:28}},control,_react2.default.createElement('span',{ref:function ref(prog){editStatus[rowId]=_extends({},editStatus[rowId],{prog:prog})},__source:{fileName:_jsxFileName,lineNumber:30}}),' ',_react2.default.createElement('span',{ref:function ref(title){editStatus[rowId]=_extends({},editStatus[rowId],{title:title})},__source:{fileName:_jsxFileName,lineNumber:31}},rowTitle[0]))},controls:[function(handler){return _react2.default.createElement('a',{className:'fa fa-chevron-down',href:'#',onClick:handler,__source:{fileName:_jsxFileName,lineNumber:37}})},function(handler){return _react2.default.createElement('a',{className:'fa fa-chevron-right',href:'#',onClick:handler,__source:{fileName:_jsxFileName,lineNumber:38}})}],alternatives:[_react2.default.createElement(_ContribItem2.default,{tag:'contrib_'+rowId,contribId:rowId,__source:{fileName:_jsxFileName,lineNumber:41}}),''],initial:1,__source:{fileName:_jsxFileName,lineNumber:26}}):_react2.default.createElement(_NavLink2.default,{className:'nav',to:'/mycontrib/'+rowId,__source:{fileName:_jsxFileName,lineNumber:47}},_react2.default.createElement('span',{ref:function ref(prog){editStatus[rowId]=_extends({},editStatus[rowId],{prog:prog})},__source:{fileName:_jsxFileName,lineNumber:48}}),' ',_react2.default.createElement('span',{ref:function ref(title){editStatus[rowId]=_extends({},editStatus[rowId],{title:title})},__source:{fileName:_jsxFileName,lineNumber:49}},rowTitle[0]))))};exports.default=(0,_hoc.withContext)(ContribTitle);

},{"Alternatives.jsx":20,"ContribItem.jsx":22,"NavLink.jsx":17,"hoc.js":"hoc.js","react":"react"}],10:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/pure/Contribs.jsx';var _react=require('react');var _react2=_interopRequireDefault(_react);var _ContribTitle=require('ContribTitle.jsx');var _ContribTitle2=_interopRequireDefault(_ContribTitle);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var Contribs=function Contribs(_ref){var filteredData=_ref.filteredData,inplace=_ref.inplace;return _react2.default.createElement('div',{style:{height:'100%',overflow:'auto'},__source:{fileName:_jsxFileName,lineNumber:15}},_react2.default.createElement('table',{__source:{fileName:_jsxFileName,lineNumber:16}},_react2.default.createElement('tbody',{__source:{fileName:_jsxFileName,lineNumber:17}},filteredData.map(function(item){return _react2.default.createElement(_ContribTitle2.default,{key:item._id,row:item,inplace:inplace,__source:{fileName:_jsxFileName,lineNumber:19}})}))))};exports.default=Contribs;

},{"ContribTitle.jsx":9,"react":"react"}],11:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/pure/Doc.jsx';var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i['return'])_i['return']()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr)){return arr}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i)}else{throw new TypeError('Invalid attempt to destructure non-iterable instance')}}}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _DocMd=require('DocMd.jsx');var _DocMd2=_interopRequireDefault(_DocMd);var _DocPdf=require('DocPdf.jsx');var _DocPdf2=_interopRequireDefault(_DocPdf);var _DocHtml=require('DocHtml.jsx');var _DocHtml2=_interopRequireDefault(_DocHtml);var _NotFound=require('NotFound.jsx');var _NotFound2=_interopRequireDefault(_NotFound);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var docType={md:_DocMd2.default,pdf:_DocPdf2.default,html:_DocHtml2.default};var Doc=function Doc(_ref){var params=_ref.params,route=_ref.route,location=_ref.location;var docPath=location.pathname;var _$exec=/^(.*)\/([^/]+)$/g.exec(docPath),_$exec2=_slicedToArray(_$exec,3),x=_$exec2[0],docDir=_$exec2[1],docFile=_$exec2[2];var _$exec3=/^(.*)\.([^.]+)$/g.exec(docFile),_$exec4=_slicedToArray(_$exec3,3),y=_$exec4[0],docName=_$exec4[1],docExt=_$exec4[2];var DocClass=docType[docExt];return DocClass==null?_react2.default.createElement(_NotFound2.default,{params:{splat:'document '+docPath},__source:{fileName:_jsxFileName,lineNumber:41}}):_react2.default.createElement(DocClass,{docDir:docDir,docName:docName,docExt:docExt,tag:docName,__source:{fileName:_jsxFileName,lineNumber:43}})};exports.default=Doc;

},{"DocHtml.jsx":12,"DocMd.jsx":25,"DocPdf.jsx":13,"NotFound.jsx":18,"react":"react"}],12:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _jsxFileName="/Users/dirk/github/dariah/client/src/js/app/pure/DocHtml.jsx";var _react=require("react");var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var DocHtml=function DocHtml(_ref){var docDir=_ref.docDir,docName=_ref.docName,docExt=_ref.docExt;var src="/api/file"+docDir+"/"+docName+"."+docExt;return _react2.default.createElement("iframe",{height:"100%",width:"100%",src:src,__source:{fileName:_jsxFileName,lineNumber:17}})};exports.default=DocHtml;

},{"react":"react"}],13:[function(require,module,exports){
"use strict";Object.defineProperty(exports,"__esModule",{value:true});var _jsxFileName="/Users/dirk/github/dariah/client/src/js/app/pure/DocPdf.jsx";var _react=require("react");var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var DocPdf=function DocPdf(_ref){var docDir=_ref.docDir,docName=_ref.docName,docExt=_ref.docExt;var href="/api/file"+docDir+"/"+docName+"."+docExt;var iOS=/iPad|iPhone|iPod/.test(navigator.userAgent)&&!window.MSStream;return iOS?_react2.default.createElement("p",{__source:{fileName:_jsxFileName,lineNumber:22}},_react2.default.createElement("a",{target:"_blank",href:href,__source:{fileName:_jsxFileName,lineNumber:23}},docName)," (open pdf in a new tab)"):_react2.default.createElement("object",{height:"100%",width:"100%",data:href,type:"application/pdf",__source:{fileName:_jsxFileName,lineNumber:26}},"alt : ",_react2.default.createElement("a",{target:"_blank",href:href,__source:{fileName:_jsxFileName,lineNumber:30}},docName)," (open pdf in a new tab)")};exports.default=DocPdf;

},{"react":"react"}],14:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/pure/Facet.jsx';var _react=require('react');var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var styles={rep:{fontSize:'x-small'},box:{fontSize:'medium',lineHeight:0.5,margin:0,padding:0}};var Facet=function Facet(_ref){var filterId=_ref.filterId,valueId=_ref.valueId,valueRep=_ref.valueRep,checked=_ref.checked,updFilter=_ref.updFilter;return _react2.default.createElement('span',{__source:{fileName:_jsxFileName,lineNumber:25}},_react2.default.createElement('input',{type:'checkbox',onChange:function onChange(event){return updFilter(filterId,[valueId,event.target.checked])},checked:checked,style:styles.box,__source:{fileName:_jsxFileName,lineNumber:26}}),_react2.default.createElement('span',{style:styles.rep,__source:{fileName:_jsxFileName,lineNumber:32}},' '+valueRep))};exports.default=Facet;

},{"react":"react"}],15:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});exports.filterList=undefined;var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/pure/Filters.jsx';var _react=require('react');var _react2=_interopRequireDefault(_react);var _FullText=require('FullText.jsx');var _FullText2=_interopRequireDefault(_FullText);var _ByValue=require('ByValue.jsx');var _ByValue2=_interopRequireDefault(_ByValue);var _EUMap=require('EUMap.jsx');var _EUMap2=_interopRequireDefault(_EUMap);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var filterList=exports.filterList=[{kind:_FullText2.default,name:'FullText',field:'title',label:'title',maxCols:null,expanded:null},{kind:_EUMap2.default,name:'EUMap',field:'country',label:'country',maxCols:3,expanded:true},{kind:_ByValue2.default,name:'ByValue',field:'vcc',label:'vcc',maxCols:2,expanded:true},{kind:_ByValue2.default,name:'ByValue',field:'year',label:'year',maxCols:3,expanded:false},{kind:_ByValue2.default,name:'ByValue',field:'typeContribution',label:'type',maxCols:2,expanded:true},{kind:_ByValue2.default,name:'ByValue',field:'tadirahActivities',label:'research activity',maxCols:2,expanded:false},{kind:_ByValue2.default,name:'ByValue',field:'tadirahObjects',label:'research object',maxCols:2,expanded:false},{kind:_ByValue2.default,name:'ByValue',field:'tadirahTechniques',label:'research technique',maxCols:1,expanded:false},{kind:_ByValue2.default,name:'ByValue',field:'disciplines',label:'discipline',maxCols:2,expanded:false},{kind:_ByValue2.default,name:'ByValue',field:'keywords',label:'keyword',maxCols:1,expanded:false}];var styles={backgroundColor:'#ffffee'};var Filters=function Filters(_ref){var fields=_ref.fields,filterSettings=_ref.filterSettings,fieldValues=_ref.fieldValues,filteredAmount=_ref.filteredAmount,filteredAmountOthers=_ref.filteredAmountOthers,amounts=_ref.amounts,updFilter=_ref.updFilter;return _react2.default.createElement('div',{style:styles,__source:{fileName:_jsxFileName,lineNumber:83}},filterList.filter(function(x){return fields[x.field]}).map(function(filter,filterId){var Fclass=filter.kind;return _react2.default.createElement(Fclass,{key:filterId,filterId:filterId,filterField:filter.field,filterLabel:filter.label,maxCols:filter.maxCols,filterSettings:filterSettings.get(filterId),fieldValues:fieldValues.get(filter.field),filteredAmount:filteredAmount,filteredAmountOthers:filteredAmountOthers.get(filterId),amounts:amounts.get(filterId),updFilter:updFilter,expanded:filter.expanded,__source:{fileName:_jsxFileName,lineNumber:87}})}))};exports.default=Filters;

},{"ByValue.jsx":6,"EUMap.jsx":3,"FullText.jsx":16,"react":"react"}],16:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/pure/FullText.jsx';var _react=require('react');var _react2=_interopRequireDefault(_react);var _Stats=require('Stats.jsx');var _Stats2=_interopRequireDefault(_Stats);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var onType=function onType(updFilter,filterId){return function(event){return updFilter(filterId,event.target.value)}};var FullText=function FullText(_ref){var filterId=_ref.filterId,filterField=_ref.filterField,filterLabel=_ref.filterLabel,filterSettings=_ref.filterSettings,filteredAmount=_ref.filteredAmount,filteredAmountOthers=_ref.filteredAmountOthers,updFilter=_ref.updFilter;return _react2.default.createElement('div',{__source:{fileName:_jsxFileName,lineNumber:31}},_react2.default.createElement('p',{__source:{fileName:_jsxFileName,lineNumber:32}},_react2.default.createElement('input',{type:'text',placeholder:'search in '+filterLabel,value:filterSettings,onChange:onType(updFilter,filterId),__source:{fileName:_jsxFileName,lineNumber:32}}),' ',_react2.default.createElement(_Stats2.default,{subTotal:filteredAmount,total:filteredAmountOthers,__source:{fileName:_jsxFileName,lineNumber:38}})))};exports.default=FullText;

},{"Stats.jsx":19,"react":"react"}],17:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/pure/NavLink.jsx';var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactRouter=require('react-router');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var NavLink=function NavLink(props){return _react2.default.createElement(_reactRouter.Link,_extends({},props,{activeClassName:'active',__source:{fileName:_jsxFileName,lineNumber:13}}))};exports.default=NavLink;

},{"react":"react","react-router":"react-router"}],18:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/pure/NotFound.jsx';var _react=require('react');var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var NotFound=function NotFound(_ref){var params=_ref.params;return _react2.default.createElement('h1',{__source:{fileName:_jsxFileName,lineNumber:14}},'404: ',_react2.default.createElement('code',{__source:{fileName:_jsxFileName,lineNumber:14}},params.splat),' not found on this site.')};exports.default=NotFound;

},{"react":"react"}],19:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/pure/Stats.jsx';var _react=require('react');var _react2=_interopRequireDefault(_react);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}var style={color:'#0000dd',fontSize:'x-small',fontWeight:'normal'};var Stats=function Stats(_ref){var subTotal=_ref.subTotal,total=_ref.total;return _react2.default.createElement('span',{style:style,__source:{fileName:_jsxFileName,lineNumber:21}},subTotal==null?'':''+subTotal,total==null||subTotal==null?'':' of ',_react2.default.createElement('strong',{__source:{fileName:_jsxFileName,lineNumber:24}},total==null?'':''+total))};exports.default=Stats;

},{"react":"react"}],20:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/state/Alternatives.jsx';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _hoc=require('hoc.js');var _localstorage=require('localstorage.js');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var initAlt=function initAlt(_ref){var tag=_ref.tag;return{alt:(0,_localstorage.lsGet)(tag)}};var Alternatives=function(_Component){_inherits(Alternatives,_Component);function Alternatives(){_classCallCheck(this,Alternatives);return _possibleConstructorReturn(this,(Alternatives.__proto__||Object.getPrototypeOf(Alternatives)).apply(this,arguments))}_createClass(Alternatives,[{key:'next',value:function next(event){event.preventDefault();var _props=this.props,tag=_props.tag,alternatives=_props.alternatives,initial=_props.initial;var oldAlt=this.state.alt==null?initial==null?0:initial:this.state.alt;var newAlt=(oldAlt+1)%alternatives.length;(0,_localstorage.lsSet)(tag,newAlt);this.setState({alt:newAlt})}},{key:'render',value:function render(){var _props2=this.props,controlPlacement=_props2.controlPlacement,controls=_props2.controls,alternatives=_props2.alternatives,initial=_props2.initial;var stateAlt=this.state.alt;var alt=stateAlt==null?initial==null?0:initial:stateAlt;return _react2.default.createElement('div',{__source:{fileName:_jsxFileName,lineNumber:70}},controlPlacement(controls[alt](this.next.bind(this))),alternatives[alt])}}]);return Alternatives}(_react.Component);exports.default=(0,_hoc.withContext)((0,_hoc.saveState)(Alternatives,'Alternatives',initAlt));

},{"hoc.js":"hoc.js","localstorage.js":"localstorage.js","react":"react"}],21:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i['return'])_i['return']()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr)){return arr}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i)}else{throw new TypeError('Invalid attempt to destructure non-iterable instance')}}}();var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/state/ContribField.jsx';var _typeof=typeof Symbol==='function'&&typeof Symbol.iterator==='symbol'?function(obj){return typeof obj}:function(obj){return obj&&typeof Symbol==='function'&&obj.constructor===Symbol&&obj!==Symbol.prototype?'symbol':typeof obj};var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _RelSelect=require('RelSelect.jsx');var _RelSelect2=_interopRequireDefault(_RelSelect);var _Alternatives=require('Alternatives.jsx');var _Alternatives2=_interopRequireDefault(_Alternatives);var _data=require('data.js');var _hoc=require('hoc.js');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i]}return target}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i]}return arr2}else{return Array.from(arr)}}var sizes={url:50,email:30,range:6,datetime:25,text:50,_max:50};var trimDate=function trimDate(text){return{full:text,text:text.replace(/\.[0-9]+/,'')}};var condense=function condense(text){return{full:text,text:text.length>20?text.slice(0,8)+'...'+text.slice(-8):text}};var readonlyMakeFragment=function readonlyMakeFragment(obj){return{url:obj.urlFragment.bind(obj),email:obj.emailFragment.bind(obj),markdown:obj.markdownFragment.bind(obj),_default:obj.defaultFragment.bind(obj)}};var editMakeFragment=function editMakeFragment(obj){return{rel:obj.relEditFragment.bind(obj),textarea:obj.textareaEditFragment.bind(obj),_default:obj.defaultEditFragment.bind(obj)}};var normalizeValues=function normalizeValues(_ref){var initValues=_ref.initValues;var savedValues=initValues==null?[]:initValues;var curValues=[].concat(_toConsumableArray(savedValues));return{curValues:curValues,savedValues:savedValues,reasons:{},saving:{},changed:false,valid:true,relValues:null}};var userAsString=function userAsString(valRaw,usersMap){var valId=valRaw._id;var valRep=void 0;var valShort=void 0;if(!usersMap.has(valId)){valRep='UNKNOWN';valShort='??'}else{var userData=usersMap.get(valId);var fname=userData.firstName||'';var lname=userData.lastName||'';var email=userData.email||'';var eppn=userData.eppn||'';var authority=userData.authority||'';var mayLogin=userData.mayLogin?'yes':'no';var linkText=[fname,lname].filter(function(x){return x}).join(' ');if(linkText==''){linkText=email}var namePart=linkText&&email?'['+linkText+'](mailto:'+email+')':linkText+email;var eppnPart=eppn?' eppn='+eppn+' ':'';var authorityPart=authority?' authenticated by='+authority+' ':'';var mayLoginPart=mayLogin?' active='+mayLogin+' ':'';valRep=[namePart,eppnPart,authorityPart,mayLoginPart].filter(function(x){return x}).join('; ');valShort=[fname,lname,eppn].filter(function(x){return x}).slice(0,2).join(' ')}return{text:valShort,full:valRep}};var countryAsString=function countryAsString(valRaw,countriesMap){var valId=valRaw._id;var valRep=void 0;var valShort=void 0;if(!countriesMap.has(valId)){valRep='UNKNOWN';valShort='??'}else{var countryData=countriesMap.get(valId);valShort=countryData.name;valRep=countryData.iso+': '+countryData.name}return{text:valShort,full:valRep}};var validate=function validate(val,valType,validation){var vstatus=true;var reason='';if(validation.nonEmpty&&(val==null||val=='')){reason='field may not be empty';vstatus=false}if(validation.min!=null||validation.max!=null){if(isNaN(val)){reason='value must be a number';vstatus=false}else{var valn=parseInt(val);if(!(validation.min<=valn)){reason='value must be at least '+validation.min;vstatus=false}if(!(validation.max>=val)){reason='value must be at most '+validation.max;vstatus=false}}}if(valType=='datetime'){var times=void 0;try{times=Date.parse(val)}catch(error){reason='not a valid date/time - '+error;vstatus=false}if(isNaN(times)){reason='not a valid date/time';vstatus=false}}return{vstatus:vstatus,reason:reason}};var ContribField=function(_Component){_inherits(ContribField,_Component);function ContribField(){_classCallCheck(this,ContribField);return _possibleConstructorReturn(this,(ContribField.__proto__||Object.getPrototypeOf(ContribField)).apply(this,arguments))}_createClass(ContribField,[{key:'setValToState',value:function setValToState(i,newVal,_id,doSave){var reasons=this.state.reasons;var newReasons=void 0;var newValues=[].concat(_toConsumableArray(this.state.curValues));if(newVal==null){newValues=newValues.filter(function(x,j){return j!=i});newReasons=reasons}else{var _props=this.props,valType=_props.valType,validation=_props.validation;var _validate=validate(newVal,valType,validation),vstatus=_validate.vstatus,reason=_validate.reason;var sendVal=_id==null?newVal:{_id:_id,value:newVal};var refI=i==-1?newValues.length:i;if(i==-1){newValues.push(sendVal)}else{newValues[i]=sendVal}newReasons=_extends({},this.state.reasons,_defineProperty({},refI,reason))}var _checkForSave=this.checkForSave({newValues:newValues,newReasons:newReasons}),valid=_checkForSave.valid,changed=_checkForSave.changed;if(!doSave||!valid||!changed){this.setState(_extends({},this.state,{curValues:newValues,reasons:newReasons,saving:{},valid:valid,changed:changed}))}else{this.toDb(newValues)}}},{key:'changeVal',value:function changeVal(i,event){event.preventDefault();this.setValToState(i,event.target.value,null,false)}},{key:'keyUp',value:function keyUp(i,event){if(event.keyCode===13){event.target.blur();this.setValToState(i,event.target.value,null,true)}}},{key:'changeRelVal',value:function changeRelVal(i,_id,value){this.setValToState(i,value,_id,true)}},{key:'removeVal',value:function removeVal(i,_id,event){event.preventDefault();this.setValToState(i,null,null,true)}},{key:'checkForSave',value:function checkForSave(info){var newValues=info.newValues,newReasons=info.newReasons;var _props2=this.props,rowId=_props2.rowId,name=_props2.name,valType=_props2.valType,validation=_props2.validation,multiple=_props2.multiple,allowNew=_props2.allowNew,updEdit=_props2.updEdit;var savedValues=this.state.savedValues;var valid=Object.keys(newReasons).every(function(i){return!newReasons[i]});var changed=false;if(newValues.length!=savedValues.length){changed=true}else{for(var i in newValues){var cv=newValues[i];var sv=savedValues[i];if(sv==null){changed=true}else if((typeof cv==='undefined'?'undefined':_typeof(cv))=='object'){var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=Object.keys(cv)[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var k=_step.value;if(cv[k]!=sv[k]){changed=true;break}}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}}else{if(cv!=sv){changed=true}}if(changed){break}}}updEdit(name,changed,valid,newValues);return{valid:valid,changed:changed}}},{key:'saveField',value:function saveField(){var _state=this.state,valid=_state.valid,changed=_state.changed,saving=_state.saving;if(valid&&changed&&!saving.status){this.toDb()}}},{key:'saved',value:function saved(data){var _props3=this.props,name=_props3.name,updMod=_props3.updMod,updEdit=_props3.updEdit;if(data==null){this.setState(_extends({},this.state,{saving:{status:'error'}}))}else{var newValues=data[name],modValues=_objectWithoutProperties(data,[name]);this.setState(_extends({},this.state,{saving:{status:'saved'},savedValues:newValues,curValues:newValues,changed:false,valid:true}));updMod(modValues);updEdit(name,false,true,newValues)}}},{key:'toDb',value:function toDb(newValues){var curValues=this.state.curValues;var _props4=this.props,name=_props4.name,rowId=_props4.rowId,valType=_props4.valType;var sendValues=newValues==null?curValues:newValues;this.setState(_extends({},this.state,{reasons:{},saving:{status:'saving'}}));(0,_data.getData)([{type:'db',path:'/item_contrib?action=update',branch:'save '+name,callback:this.saved.bind(this),data:{_id:rowId,name:name,values:sendValues}}],this,this.props.notification.component)}},{key:'fullfillSave',value:function fullfillSave(){var _props5=this.props,editable=_props5.editable,saveConcern=_props5.saveConcern;var name=this.props.name;if(editable&&saveConcern){this.saveField()}}},{key:'valueAsString',value:function valueAsString(valRaw){var _props6=this.props,valType=_props6.valType,convert=_props6.convert,usersMap=_props6.usersMap,countriesMap=_props6.countriesMap;switch(valType){case'rel':{switch(convert){case'user':{return userAsString(valRaw,usersMap)}case'country':{return countryAsString(valRaw,countriesMap)}default:{return condense(valRaw.value)}}}case'datetime':{return trimDate(valRaw)}default:{return{text:valRaw,full:valRaw}}}}},{key:'urlFragment',value:function urlFragment(i,classNames,valText){var text=valText.text,full=valText.full;return _react2.default.createElement('a',{key:i,target:'_blank',href:full,className:classNames.join(' '),__source:{fileName:_jsxFileName,lineNumber:330}},text)}},{key:'emailFragment',value:function emailFragment(i,classNames,valText){var text=valText.text,full=valText.full;return _react2.default.createElement('a',{key:i,target:'_blank',href:'mailto:'+full,className:classNames.join(' '),__source:{fileName:_jsxFileName,lineNumber:334}},full)}},{key:'markdownFragment',value:function markdownFragment(i,classNames,valText){var text=valText.text,full=valText.full;return _react2.default.createElement('span',{key:i,className:classNames.join(' '),__source:{fileName:_jsxFileName,lineNumber:338}},full)}},{key:'defaultFragment',value:function defaultFragment(i,classNames,valText){var text=valText.text,full=valText.full;return _react2.default.createElement('span',{key:i,className:classNames.join(' '),title:full,__source:{fileName:_jsxFileName,lineNumber:342}},text)}},{key:'relOptions',value:function relOptions(){var relValues=this.state.relValues;return relValues.map(function(rv){return[rv._id,condense(rv.value)]})}},{key:'userOptions',value:function userOptions(){var _this2=this;var usersMap=this.props.usersMap;return[].concat(_toConsumableArray(usersMap.values())).map(function(rv){return[rv._id,_this2.valueAsString(rv)]})}},{key:'countryOptions',value:function countryOptions(){var _this3=this;var countriesMap=this.props.countriesMap;return[].concat(_toConsumableArray(countriesMap.values())).map(function(rv){return[rv._id,_this3.valueAsString(rv)]})}},{key:'relSelect',value:function relSelect(i,_id,classNames,extraClasses,valText){var text=valText.text,full=valText.full;var _props7=this.props,convert=_props7.convert,allowNew=_props7.allowNew,name=_props7.name,rowId=_props7.rowId;var valid=this.state.valid;var valueList=convert=='user'?this.userOptions():convert=='country'?this.countryOptions():this.relOptions();return _react2.default.createElement(_RelSelect2.default,{tag:'relselect_'+rowId+'_'+name+'_'+i,key:i,isNew:i==-1,allowNew:allowNew,valid:valid,valueList:valueList,initVal:_id,initText:text,initFull:full,onChange:this.changeRelVal.bind(this,i),classNames:classNames,extraClasses:extraClasses,__source:{fileName:_jsxFileName,lineNumber:363}})}},{key:'relEditFragment',value:function relEditFragment(i,_id,classNames,extraClasses,valText){var text=valText.text,full=valText.full;var multiple=this.props.multiple;return!multiple&&i==0?this.relSelect(i,_id,classNames,extraClasses,valText):_react2.default.createElement('span',{key:i,className:classNames.join(' '),title:full,__source:{fileName:_jsxFileName,lineNumber:384}},text,_react2.default.createElement('span',{className:'xtag fa fa-close',onClick:this.removeVal.bind(this,i,_id),__source:{fileName:_jsxFileName,lineNumber:385}}))}},{key:'textareaEditFragment',value:function textareaEditFragment(i,_id,classNames,extraClasses,valText){var cols=arguments.length>5&&arguments[5]!==undefined?arguments[5]:100;var rows=arguments.length>6&&arguments[6]!==undefined?arguments[6]:10;var text=valText.text,full=valText.full;this.saveLater=true;return _react2.default.createElement('textarea',{key:i,className:classNames.concat(extraClasses).join(' '),value:full,onChange:this.changeVal.bind(this,i),cols:cols,rows:rows,wrap:'soft',__source:{fileName:_jsxFileName,lineNumber:396}})}},{key:'defaultEditFragment',value:function defaultEditFragment(i,_id,classNames,extraClasses,valText){var size=arguments.length>5&&arguments[5]!==undefined?arguments[5]:50;var text=valText.text,full=valText.full;this.saveLater=true;return _react2.default.createElement('input',{key:i,type:'text',className:classNames.concat(extraClasses).join(' '),value:full,onChange:this.changeVal.bind(this,i),onKeyUp:this.keyUp.bind(this,i),size:size,__source:{fileName:_jsxFileName,lineNumber:410}})}},{key:'progIcon',value:function progIcon(){var editable=this.props.editable;var progIcon=void 0;if(editable){var _state2=this.state,saving=_state2.saving,changed=_state2.changed,valid=_state2.valid;var cs=saving.status;if(cs=='saving'){progIcon='fa-spinner fa-spin'}else if(cs=='saved'){progIcon='fa-check saved'}else if(cs=='error'){progIcon='fa-exclamation error'}else if(!valid){progIcon='fa-close invalid'}else if(changed){progIcon='fa-pencil changed'}else{progIcon='fa-pencil'}progIcon+=' fa progress'}else{progIcon='fa fa-lock progress'}return _react2.default.createElement('span',{key:name,className:progIcon,__source:{fileName:_jsxFileName,lineNumber:437}})}},{key:'valuesAsReadonly',value:function valuesAsReadonly(){var _this4=this;var curValues=this.state.curValues;var name=this.props.name;if(curValues.length==0){return _react2.default.createElement('span',{className:'absent',__source:{fileName:_jsxFileName,lineNumber:443}},'no value')}var _props8=this.props,valType=_props8.valType,multiple=_props8.multiple,appearance=_props8.appearance;var methods=readonlyMakeFragment(this);var makeFragment=methods[valType]||methods._default;var cutoff=appearance.cutoff;var alt2=[];var alt1=[];alt1.push(' ');var processValues=appearance.reverse?[].concat(_toConsumableArray(curValues)).reverse():curValues;processValues.forEach(function(v,i){var destAlt=!cutoff||i<=cutoff-1?alt1:alt2;var valText=_this4.valueAsString(v);var classNames=['value',valType];var fragment=makeFragment(i,classNames,valText);if(multiple||i==0){destAlt.push(fragment)}if(multiple){destAlt.push(' ')}});return this.knead(alt1,alt2)}},{key:'valuesAsControls',value:function valuesAsControls(){var _this5=this;var _state3=this.state,curValues=_state3.curValues,reasons=_state3.reasons;var savedValues=this.state.savedValues;var _props9=this.props,name=_props9.name,valType=_props9.valType,multiple=_props9.multiple,validation=_props9.validation,allowNew=_props9.allowNew,appearance=_props9.appearance;var methods=editMakeFragment(this);var makeFragment=methods[valType]||methods._default;var cutoff=appearance.cutoff;var alt2=[];var alt1=[];var enumCurValues=curValues.map(function(v,i){return[i,v]});var processValues=appearance.reverse?enumCurValues.reverse():enumCurValues;var classNames=['value',valType];var size=sizes[valType]||sizes._max;var destAlt=alt1;var extraClasses=[];processValues.forEach(function(ev,j){var _ev=_slicedToArray(ev,2),i=_ev[0],v=_ev[1];destAlt=!cutoff||j<=cutoff-1?alt1:alt2;var valText=_this5.valueAsString(v);var _id=v._id;extraClasses=[];var reason=reasons[i]||'';if(reason!=''){extraClasses.push('invalid')}var fragment=makeFragment(i,_id,classNames,extraClasses,valText,size);if(multiple||j==0){destAlt.push(fragment);if(reason!=''){destAlt.push(' ');destAlt.push(_react2.default.createElement('span',{key:'r_'+i,className:'reason',__source:{fileName:_jsxFileName,lineNumber:493}},reason))}}});if(multiple||curValues.length==0){destAlt.push(' ');if(valType=='rel'){destAlt.push(this.relSelect(-1,null,classNames,extraClasses,{text:null,full:null}))}else{destAlt.push(makeFragment(-1,null,classNames,extraClasses,{text:'no',full:'no value'},size))}}return this.knead(alt1,alt2)}},{key:'knead',value:function knead(alt1,alt2){var _props10=this.props,rowId=_props10.rowId,name=_props10.name;if(alt2.length==0){return alt1}return _react2.default.createElement(_Alternatives2.default,{tag:'field_'+rowId+'_'+name,controlPlacement:function controlPlacement(control){return _react2.default.createElement('span',{__source:{fileName:_jsxFileName,lineNumber:516}},alt1,' ',control)},controls:[function(handler){return _react2.default.createElement('a',{href:'#',onClick:handler,__source:{fileName:_jsxFileName,lineNumber:518}},'more')},function(handler){return _react2.default.createElement('a',{href:'#',onClick:handler,__source:{fileName:_jsxFileName,lineNumber:519}},'less')}],alternatives:['',alt2],initial:0,__source:{fileName:_jsxFileName,lineNumber:515}})}},{key:'render',value:function render(){var relValues=this.state.relValues;var _props11=this.props,name=_props11.name,label=_props11.label,editable=_props11.editable,valType=_props11.valType,convert=_props11.convert;var curValues=this.state.curValues;if(editable&&relValues==null&&valType=='rel'&&convert!='user'&&convert!='country'){return null}var classNames=editable?'editable':'readonly';var prog=this.progIcon();var values=editable?this.valuesAsControls():this.valuesAsReadonly();var onClick=editable&&this.saveLater?{onClick:this.saveField.bind(this)}:{};return _react2.default.createElement('tr',{__source:{fileName:_jsxFileName,lineNumber:542}},_react2.default.createElement('td',_extends({className:'label'},onClick,{__source:{fileName:_jsxFileName,lineNumber:543}}),label),_react2.default.createElement('td',_extends({className:'label'},onClick,{__source:{fileName:_jsxFileName,lineNumber:544}}),prog),_react2.default.createElement('td',{__source:{fileName:_jsxFileName,lineNumber:545}},_react2.default.createElement('div',{className:classNames,__source:{fileName:_jsxFileName,lineNumber:545}},values)))}},{key:'fetchValues',value:function fetchValues(){var rowId=this.props.rowId;var relValues=this.state.relValues;var _props12=this.props,valType=_props12.valType,getValues=_props12.getValues,convert=_props12.convert,usersMap=_props12.usersMap,countriesMap=_props12.countriesMap;if(valType=='rel'&&convert!='user'&&convert!='country'&&relValues==null){(0,_data.getData)([{type:'db',path:getValues,branch:'relValues'}],this,this.props.notification.component)}}},{key:'componentDidMount',value:function componentDidMount(){this.fetchValues();this.fullfillSave()}},{key:'componentDidUpdate',value:function componentDidUpdate(){this.fetchValues();this.fullfillSave()}}]);return ContribField}(_react.Component);exports.default=(0,_hoc.withContext)((0,_hoc.saveState)(ContribField,'ContribField',normalizeValues));

},{"Alternatives.jsx":20,"RelSelect.jsx":29,"data.js":"data.js","hoc.js":"hoc.js","react":"react"}],22:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/state/ContribItem.jsx';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _ContribField=require('ContribField.jsx');var _ContribField2=_interopRequireDefault(_ContribField);var _data=require('data.js');var _hoc=require('hoc.js');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i]}return target}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var ContribItem=function(_Component){_inherits(ContribItem,_Component);function ContribItem(){_classCallCheck(this,ContribItem);return _possibleConstructorReturn(this,(ContribItem.__proto__||Object.getPrototypeOf(ContribItem)).apply(this,arguments))}_createClass(ContribItem,[{key:'updMod',value:function updMod(modifiedFieldData){var newEditing={};for(var n in modifiedFieldData){newEditing[n]=false}var newState=_extends({},this.state,{fieldData:_extends({},this.state.fieldData,{fields:_extends({},this.state.fieldData.fields,modifiedFieldData)})});this.setState(newState)}},{key:'progIcon',value:function progIcon(noChange,allValid){var _props=this.props,editStatus=_props.editStatus,contribId=_props.contribId;var classes=['savei'];classes.push(allValid?'valid':'invalid');classes.push(noChange?'clean':'dirty');if(!allValid){classes.push('fa fa-close invalid')}else if(!noChange){classes.push('fa fa-pencil changed')}editStatus[contribId].prog.className=classes.join(' ')}},{key:'updEdit',value:function updEdit(name,changed,valid,newVals){var _props2=this.props,editStatus=_props2.editStatus,contribId=_props2.contribId;var _state=this.state,saveConcern=_state.saveConcern,fieldData=_state.fieldData;if(name=='title'&&changed){editStatus[contribId].title.innerHTML=newVals[0]}var newState=_extends({},this.state,{changed:_extends({},this.state.changed,_defineProperty({},name,changed)),valid:_extends({},this.state.valid,_defineProperty({},name,valid))});var _saveStatus=this.saveStatus(newState),noChange=_saveStatus.noChange,allValid=_saveStatus.allValid,canSave=_saveStatus.canSave;this.progIcon(noChange,allValid);if(!canSave){newState.saveConcern=false}this.setState(newState)}},{key:'saveAll',value:function saveAll(){var _saveStatus2=this.saveStatus(),canSave=_saveStatus2.canSave;if(canSave){this.setState(_extends({},this.state,{saveConcern:true}))}}},{key:'parseFields',value:function parseFields(){var fieldData=this.state.fieldData;var row=fieldData.row,fields=fieldData.fields,fieldSpecs=fieldData.fieldSpecs,fieldOrder=fieldData.fieldOrder,perm=fieldData.perm;var frags=[];var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=fieldOrder[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var name=_step.value;var _fieldSpecs$name=fieldSpecs[name],label=_fieldSpecs$name.label,specs=_objectWithoutProperties(_fieldSpecs$name,['label']);if(fields[name]==null){continue}var editable=!!perm.update[name];var rowId=row._id;frags.push(_react2.default.createElement(_ContribField2.default,_extends({key:name,tag:'field_'+rowId+'_'+name,initValues:row[name],rowId:rowId,editable:editable,name:name,label:label,saveConcern:this.state.saveConcern,updMod:this.updMod.bind(this),updEdit:this.updEdit.bind(this)},specs,{__source:{fileName:_jsxFileName,lineNumber:89}})))}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}return frags}},{key:'saveStatus',value:function saveStatus(newState){var _ref=newState==null?this.state:newState,fieldData=_ref.fieldData,changed=_ref.changed,valid=_ref.valid;var noChange=Object.keys(changed).every(function(n){return!changed[n]});var allValid=Object.keys(valid).every(function(n){return valid[n]});var canSave=!Object.keys(changed).every(function(n){return!changed[n]||!valid[n]});return{noChange:noChange,allValid:allValid,canSave:canSave}}},{key:'render',value:function render(){var _state2=this.state,fieldData=_state2.fieldData,changed=_state2.changed,valid=_state2.valid;if(fieldData==null||fieldData.row==null){return _react2.default.createElement('div',{__source:{fileName:_jsxFileName,lineNumber:118}})}var _saveStatus3=this.saveStatus(),noChange=_saveStatus3.noChange,allValid=_saveStatus3.allValid,canSave=_saveStatus3.canSave;var allValidClass=allValid?'valid':'invalid';var noChangeClass=noChange?'clean':'dirty';var elemText=noChange?'all saved':allValid?'save changes':'make corrections';return _react2.default.createElement('div',{className:'item',__source:{fileName:_jsxFileName,lineNumber:125}},_react2.default.createElement('p',{__source:{fileName:_jsxFileName,lineNumber:126}},canSave?_react2.default.createElement('a',{className:'save '+noChangeClass+' '+allValidClass,href:'#',onClick:this.saveAll.bind(this),__source:{fileName:_jsxFileName,lineNumber:128}},elemText):_react2.default.createElement('span',{className:'save '+noChangeClass+' '+allValidClass,__source:{fileName:_jsxFileName,lineNumber:134}},elemText)),_react2.default.createElement('table',{__source:{fileName:_jsxFileName,lineNumber:137}},_react2.default.createElement('tbody',{__source:{fileName:_jsxFileName,lineNumber:138}},this.parseFields())))}},{key:'fetchRow',value:function fetchRow(){var fieldData=this.state.fieldData;var _props3=this.props,contribId=_props3.contribId,ownOnly=_props3.ownOnly;if(fieldData==null){(0,_data.getData)([{type:'db',path:'/item_contrib?id='+contribId+(ownOnly?'&own=true':''),branch:'fieldData'}],this,this.props.notification.component)}}},{key:'componentDidMount',value:function componentDidMount(){this.fetchRow()}},{key:'componentDidUpdate',value:function componentDidUpdate(){this.fetchRow()}}]);return ContribItem}(_react.Component);exports.default=(0,_hoc.withContext)((0,_hoc.saveState)(ContribItem,'ContribItem',{fieldData:null,changed:{},valid:{},saveConcern:false}));

},{"ContribField.jsx":21,"data.js":"data.js","hoc.js":"hoc.js","react":"react"}],23:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/state/ContribsFiltered.jsx';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _FilterCompute=require('FilterCompute.jsx');var _FilterCompute2=_interopRequireDefault(_FilterCompute);var _Filters=require('Filters.jsx');var _filtering=require('filtering.js');var _data=require('data.js');var _hoc=require('hoc.js');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var ContribsFiltered=function(_Component){_inherits(ContribsFiltered,_Component);function ContribsFiltered(){_classCallCheck(this,ContribsFiltered);return _possibleConstructorReturn(this,(ContribsFiltered.__proto__||Object.getPrototypeOf(ContribsFiltered)).apply(this,arguments))}_createClass(ContribsFiltered,[{key:'render',value:function render(){var _state=this.state,contribData=_state.contribData,countries=_state.countries,users=_state.users;var _props=this.props,usersMap=_props.usersMap,countriesMap=_props.countriesMap;if(contribData==null||countries==null||users==null){return _react2.default.createElement('div',{__source:{fileName:_jsxFileName,lineNumber:53}})}var contribs=contribData.contribs,fields=contribData.fields;var _compileFiltering=(0,_filtering.compileFiltering)(contribs,fields,_Filters.filterList),fieldValues=_compileFiltering.fieldValues,filterInit=_compileFiltering.filterInit;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=users[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var x=_step.value;usersMap.set(x._id,x)}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=countries[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var _x=_step2.value;countriesMap.set(_x._id,_x)}}catch(err){_didIteratorError2=true;_iteratorError2=err}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return()}}finally{if(_didIteratorError2){throw _iteratorError2}}}return _react2.default.createElement(_FilterCompute2.default,{contribs:contribs,fields:fields,fieldValues:fieldValues,filterInit:filterInit,__source:{fileName:_jsxFileName,lineNumber:59}})}},{key:'componentDidMount',value:function componentDidMount(){var _state2=this.state,contribData=_state2.contribData,countries=_state2.countries,users=_state2.users;if(contribData==null||countries==null||users==null){(0,_data.getData)([{type:'db',path:'/list_contrib',branch:'contribData'},{type:'db',path:'/member_country',branch:'countries'},{type:'db',path:'/users',branch:'users'}],this,this.props.notification.component)}}}]);return ContribsFiltered}(_react.Component);exports.default=(0,_hoc.withContext)((0,_hoc.saveState)(ContribsFiltered,'ContribsFiltered',{contribs:null,countries:null,users:null}));

},{"FilterCompute.jsx":26,"Filters.jsx":15,"data.js":"data.js","filtering.js":"filtering.js","hoc.js":"hoc.js","react":"react"}],24:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/state/ContribsMy.jsx';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _Contribs=require('Contribs.jsx');var _Contribs2=_interopRequireDefault(_Contribs);var _ContribNew=require('ContribNew.jsx');var _ContribNew2=_interopRequireDefault(_ContribNew);var _ContribItemPre=require('ContribItemPre.jsx');var _ContribItemPre2=_interopRequireDefault(_ContribItemPre);var _data=require('data.js');var _hoc=require('hoc.js');var _ui=require('ui.js');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var ContribsMy=function(_Component){_inherits(ContribsMy,_Component);function ContribsMy(){_classCallCheck(this,ContribsMy);return _possibleConstructorReturn(this,(ContribsMy.__proto__||Object.getPrototypeOf(ContribsMy)).apply(this,arguments))}_createClass(ContribsMy,[{key:'inserted',value:function inserted(data){this.setState(_extends({},this.state,{inserted:data}));if(data!=null){var router=this.props.router;router.push('/mycontrib/'+data)}}},{key:'insertRow',value:function insertRow(event){event.preventDefault();(0,_data.getData)([{type:'db',path:'/item_contrib?action=insert',branch:'insert',callback:this.inserted.bind(this)},{type:'db',path:'/my_contribs',branch:'contribData'}],this,this.props.notification.component)}},{key:'render',value:function render(){var _state=this.state,contribData=_state.contribData,countries=_state.countries,users=_state.users;var _props=this.props,usersMap=_props.usersMap,countriesMap=_props.countriesMap,children=_props.children;if(contribData==null||countries==null||users==null){return _react2.default.createElement('div',{__source:{fileName:_jsxFileName,lineNumber:66}})}var contribs=contribData.contribs,fields=contribData.fields,perm=contribData.perm;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=users[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var x=_step.value;usersMap.set(x._id,x)}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=countries[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var _x=_step2.value;countriesMap.set(_x._id,_x)}}catch(err){_didIteratorError2=true;_iteratorError2=err}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return){_iterator2.return()}}finally{if(_didIteratorError2){throw _iteratorError2}}}return _react2.default.createElement('div',{__source:{fileName:_jsxFileName,lineNumber:72}},_react2.default.createElement('div',{style:(0,_ui.columnStyle)('rightLeft'),__source:{fileName:_jsxFileName,lineNumber:73}},_react2.default.createElement('p',{style:{fontWeight:'bold',backgroundColor:'#eeeeff'},__source:{fileName:_jsxFileName,lineNumber:74}},contribs.length,' contributions',' ',perm!=null&&perm.insert?_react2.default.createElement(_ContribNew2.default,{insertRow:this.insertRow.bind(this),__source:{fileName:_jsxFileName,lineNumber:79}}):null),_react2.default.createElement(_Contribs2.default,{filteredData:contribs,inplace:false,__source:{fileName:_jsxFileName,lineNumber:82}})),_react2.default.createElement('div',{style:(0,_ui.columnStyle)('rightRight'),__source:{fileName:_jsxFileName,lineNumber:84}},children))}},{key:'componentDidMount',value:function componentDidMount(){var _state2=this.state,contribData=_state2.contribData,countries=_state2.countries,users=_state2.users,inserted=_state2.inserted;if(contribData==null||countries==null||users==null){(0,_data.getData)([{type:'db',path:'/my_contribs',branch:'contribData'},{type:'db',path:'/member_country',branch:'countries'},{type:'db',path:'/users',branch:'users'}],this,this.props.notification.component)}else if(inserted){this.setState(_extends({},this.state,{inserted:null}));(0,_data.getData)([{type:'db',path:'/my_contribs',branch:'contribData'}],this,this.props.notification.component)}}}]);return ContribsMy}(_react.Component);exports.default=(0,_hoc.withContext)((0,_hoc.saveState)(ContribsMy,'ContribsMy',{contribs:null,countries:null,users:null,inserted:null}));

},{"ContribItemPre.jsx":7,"ContribNew.jsx":8,"Contribs.jsx":10,"data.js":"data.js","hoc.js":"hoc.js","react":"react","ui.js":"ui.js"}],25:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/state/DocMd.jsx';var _react=require('react');var _react2=_interopRequireDefault(_react);var _reactMarkdown=require('react-markdown');var _reactMarkdown2=_interopRequireDefault(_reactMarkdown);var _reactRouter=require('react-router');var _Alternatives=require('Alternatives.jsx');var _Alternatives2=_interopRequireDefault(_Alternatives);var _data=require('data.js');var _hoc=require('hoc.js');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var RouterLink=function RouterLink(_ref){var children=_ref.children,href=_ref.href;return href.match(/^(https?:)?\/\//)?_react2.default.createElement('a',{href:href,__source:{fileName:_jsxFileName,lineNumber:26}},children):_react2.default.createElement(_reactRouter.Link,{to:href,__source:{fileName:_jsxFileName,lineNumber:27}},children)};var DocMd=function(_Component){_inherits(DocMd,_Component);function DocMd(){_classCallCheck(this,DocMd);return _possibleConstructorReturn(this,(DocMd.__proto__||Object.getPrototypeOf(DocMd)).apply(this,arguments))}_createClass(DocMd,[{key:'render',value:function render(){var docName=this.props.docName;var text=this.state.md;if(text==null){return _react2.default.createElement('div',{__source:{fileName:_jsxFileName,lineNumber:50}})}return _react2.default.createElement('div',{style:{paddingLeft:'0.5em'},__source:{fileName:_jsxFileName,lineNumber:53}},_react2.default.createElement(_Alternatives2.default,{tag:docName,controlPlacement:function controlPlacement(control){return _react2.default.createElement('p',{style:{float:'right'},__source:{fileName:_jsxFileName,lineNumber:56}},control)},controls:[function(handler){return _react2.default.createElement('a',{ref:'toSrc',className:'control fa fa-hand-o-down',href:'#',onClick:handler,title:'markdown source',__source:{fileName:_jsxFileName,lineNumber:59}})},function(handler){return _react2.default.createElement('a',{ref:'toFrm',className:'control fa fa-file-code-o',href:'#',onClick:handler,title:'formatted',__source:{fileName:_jsxFileName,lineNumber:60}})}],alternatives:[_react2.default.createElement('div',{__source:{fileName:_jsxFileName,lineNumber:63}},_react2.default.createElement(_reactMarkdown2.default,{source:text,renderers:{Link:RouterLink},__source:{fileName:_jsxFileName,lineNumber:64}})),_react2.default.createElement('div',{__source:{fileName:_jsxFileName,lineNumber:69}},_react2.default.createElement('pre',{style:{fontSize:'large',color:'#0000aa',whiteSpace:'pre-wrap'},__source:{fileName:_jsxFileName,lineNumber:70}},text))],__source:{fileName:_jsxFileName,lineNumber:54}}))}},{key:'fetchText',value:function fetchText(){var _props=this.props,docDir=_props.docDir,docName=_props.docName,docExt=_props.docExt;if(this.state.md==null){(0,_data.getData)([{type:'json',path:docDir+'/'+docName+'.'+docExt,branch:'md'}],this,this.props.notification.component)}}},{key:'componentDidMount',value:function componentDidMount(){this.fetchText()}},{key:'componentDidUpdate',value:function componentDidUpdate(){this.fetchText()}}]);return DocMd}(_react.Component);exports.default=(0,_hoc.withContext)((0,_hoc.saveState)(DocMd,'DocMd',{md:null}));

},{"Alternatives.jsx":20,"data.js":"data.js","hoc.js":"hoc.js","react":"react","react-markdown":"react-markdown","react-router":"react-router"}],26:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/state/FilterCompute.jsx';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _Contribs=require('Contribs.jsx');var _Contribs2=_interopRequireDefault(_Contribs);var _Filters=require('Filters.jsx');var _Filters2=_interopRequireDefault(_Filters);var _filtering=require('filtering.js');var _ui=require('ui.js');var _hoc=require('hoc.js');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var FilterCompute=function(_Component){_inherits(FilterCompute,_Component);function FilterCompute(){_classCallCheck(this,FilterCompute);return _possibleConstructorReturn(this,(FilterCompute.__proto__||Object.getPrototypeOf(FilterCompute)).apply(this,arguments))}_createClass(FilterCompute,[{key:'updFilter',value:function updFilter(filterId,data){var filterSettings=this.state.filterSettings;if(typeof data=='string'){(0,_filtering.setf)(filterId,'',data)}if(typeof data=='boolean'){(0,_filtering.setf)(filterId,'',data)}else{(0,_filtering.setf)(filterId,data[0],data[1])}this.setState(_extends({},this.state,{filterSettings:(0,_filtering.newFilterSettings)(filterSettings,filterId,data)}))}},{key:'render',value:function render(){var filterSettings=this.state.filterSettings;var _props=this.props,contribs=_props.contribs,fields=_props.fields,fieldValues=_props.fieldValues;var _computeFiltering=(0,_filtering.computeFiltering)(contribs,fields,_Filters.filterList,fieldValues,filterSettings),filteredData=_computeFiltering.filteredData,filteredAmountOthers=_computeFiltering.filteredAmountOthers,amounts=_computeFiltering.amounts;return _react2.default.createElement('div',{__source:{fileName:_jsxFileName,lineNumber:63}},_react2.default.createElement('div',{style:(0,_ui.columnStyle)('rightLeft'),__source:{fileName:_jsxFileName,lineNumber:64}},_react2.default.createElement('p',{style:{fontWeight:'bold',backgroundColor:'#eeeeff'},__source:{fileName:_jsxFileName,lineNumber:65}},'Showing ',filteredData.length,' of ',contribs.length),_react2.default.createElement(_Filters2.default,{fields:fields,fieldValues:fieldValues,filteredAmount:filteredData.length,filteredAmountOthers:filteredAmountOthers,amounts:amounts,filterSettings:filterSettings,updFilter:this.updFilter.bind(this),__source:{fileName:_jsxFileName,lineNumber:68}})),_react2.default.createElement('div',{style:(0,_ui.columnStyle)('rightRight'),__source:{fileName:_jsxFileName,lineNumber:78}},_react2.default.createElement(_Contribs2.default,{filteredData:filteredData,inplace:true,__source:{fileName:_jsxFileName,lineNumber:79}})))}}]);return FilterCompute}(_react.Component);exports.default=(0,_hoc.withContext)((0,_hoc.saveState)(FilterCompute,'FilterCompute',function(_ref){var filterInit=_ref.filterInit;return{filterSettings:filterInit}}));

},{"Contribs.jsx":10,"Filters.jsx":15,"filtering.js":"filtering.js","hoc.js":"hoc.js","react":"react","ui.js":"ui.js"}],27:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/state/Login.jsx';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _hoc=require('hoc.js');var _data=require('data.js');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var Login=function(_Component){_inherits(Login,_Component);function Login(){_classCallCheck(this,Login);return _possibleConstructorReturn(this,(Login.__proto__||Object.getPrototypeOf(Login)).apply(this,arguments))}_createClass(Login,[{key:'render',value:function render(){var user=this.state.user;var userInfo=this.props.userInfo;userInfo.clear();var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=Object.keys(user)[Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var k=_step.value;userInfo.set(k,user[k])}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}return _react2.default.createElement('span',{style:{float:'right',fontSize:'small'},__source:{fileName:_jsxFileName,lineNumber:38}},user.eppn&&Object.keys(user).length>0?_react2.default.createElement('span',{style:{color:'#333333'},__source:{fileName:_jsxFileName,lineNumber:40}},_react2.default.createElement('strong',{className:'fa fa-user',title:user.eppn,__source:{fileName:_jsxFileName,lineNumber:41}},user.eppn.split('@')[0]),_react2.default.createElement('span',{className:'fa fa-hashtag',__source:{fileName:_jsxFileName,lineNumber:42}}),user.authority,' ',_react2.default.createElement('em',{__source:{fileName:_jsxFileName,lineNumber:43}},user.groupDesc||'not authenticated'),_react2.default.createElement('a',{href:'/logout',className:'control fa fa-user-times',__source:{fileName:_jsxFileName,lineNumber:44}},' logout'),_react2.default.createElement('a',{href:'/slogout',className:'control fa fa-users',__source:{fileName:_jsxFileName,lineNumber:45}},' quit ')):_react2.default.createElement('a',{href:'/login',className:'control fa fa-user-plus',__source:{fileName:_jsxFileName,lineNumber:48}},' login'))}},{key:'componentDidMount',value:function componentDidMount(){(0,_data.getData)([{type:'db',path:'/who/ami',branch:'user'}],this,this.props.notification.component)}}]);return Login}(_react.Component);exports.default=(0,_hoc.withContext)((0,_hoc.saveState)(Login,'Login',{user:{}}));

},{"data.js":"data.js","hoc.js":"hoc.js","react":"react"}],28:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/state/Notification.jsx';var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i['return'])_i['return']()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr)){return arr}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i)}else{throw new TypeError('Invalid attempt to destructure non-iterable instance')}}}();var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _hoc=require('hoc.js');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i]}return arr2}else{return Array.from(arr)}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var msgStyle={info:{color:'#222222'},error:{color:'#dd0000',fontWeight:'bold'},warning:{color:'#dd8800',fontWeight:'bold'},good:{color:'#00aa00',fontWeight:'bold'},special:{color:'#000000',fontWeight:'bold'},line:{paddingTop:0,paddingBottom:0,marginTop:0,marginBottom:0},trash:{paddingTop:2,paddingBottom:0,marginTop:0,marginBottom:0,fontSize:'larger',float:'left'},dismiss:{paddingTop:2,paddingBottom:0,marginTop:0,marginBottom:0,fontStyle:'italic',fontSize:'smaller',float:'right'},box:{position:'fixed',top:40,right:10,width:200,height:100,overflow:'auto',paddingLeft:10,paddingRight:10,zIndex:2000,opacity:0.9,verticalAlign:'middle',cursor:'pointer',backgroundColor:'#eeeeee',border:'2px solid #aaaaaa',borderRadius:8,fontSize:'small'},spinner:{position:'fixed',top:'0.05em',right:'1em',width:'5em',height:'2em',textAlign:'right',paddingLeft:0,paddingRight:0,zIndex:2000,opacity:0.9,verticalAlign:'middle',cursor:'pointer',fontSize:'medium'},dot:{fontSize:'small'}};var empty=[];var Notification=function(_Component){_inherits(Notification,_Component);function Notification(props){_classCallCheck(this,Notification);var _this=_possibleConstructorReturn(this,(Notification.__proto__||Object.getPrototypeOf(Notification)).call(this,props));props.notification.component=_this;_this.msgs=[];_this.visible=false;_this.dom={};return _this}_createClass(Notification,[{key:'notify',value:function notify(msg){this.msgs.push(msg);this.setState({msgs:[].concat(_toConsumableArray(this.msgs))})}},{key:'clear',value:function clear(){this.msgs=[];this.setState({msgs:[]})}},{key:'computeProgress',value:function computeProgress(){var lastMsg=this.msgs.length-1;var lastNote=-1;var lastKind='info';var busy=0;this.msgs.forEach(function(msg,i){if(msg.kind=='error'){lastNote=i,lastKind='error'}else if(msg.kind=='warning'){if(lastKind!='error'){lastNote=i,lastKind='warning'}}busy+=msg.busy||0});if(busy<0){console.warn('SHOULD NOT HAPPEN: negative value for busy '+busy);busy=0}var visible=this.visible||lastNote>-1;return[lastMsg,lastNote,lastKind,busy,visible]}},{key:'refDom',value:function refDom(label,dom){if(dom){this.dom[label]=dom}}},{key:'render',value:function render(){var _this2=this;var _computeProgress=this.computeProgress();var _computeProgress2=_slicedToArray(_computeProgress,5);this.lastMsg=_computeProgress2[0];this.lastNote=_computeProgress2[1];this.lastKind=_computeProgress2[2];this.busy=_computeProgress2[3];this.visible=_computeProgress2[4];var busyBlocks=new Array(this.busy).fill(1);return _react2.default.createElement('div',{__source:{fileName:_jsxFileName,lineNumber:166}},_react2.default.createElement('p',{style:msgStyle.spinner,__source:{fileName:_jsxFileName,lineNumber:167}},_react2.default.createElement('a',{title:'show/hide notifications and progress messages',href:'#',className:this.lastNote>-1?'spin-'+this.lastKind:'spin-ok',onClick:function onClick(e){e.preventDefault();_this2.setView(!_this2.visible)},__source:{fileName:_jsxFileName,lineNumber:168}},busyBlocks.map(function(b,i){return _react2.default.createElement('span',{key:i,style:msgStyle.dot,className:'fa fa-circle',__source:{fileName:_jsxFileName,lineNumber:174}})}),_react2.default.createElement('span',{className:'fa fa-'+(this.busy==0?'circle-o':'spinner fa-spin'),__source:{fileName:_jsxFileName,lineNumber:175}}))),_react2.default.createElement('div',{ref:this.refDom.bind(this,'notbox'),style:msgStyle.box,onClick:function onClick(e){e.preventDefault();_this2.setView(false)},__source:{fileName:_jsxFileName,lineNumber:178}},(this.msgs||empty).map(function(msg,index){return _react2.default.createElement('p',{key:index,ref:_this2.refDom.bind(_this2,'m'+index),style:_extends({},msgStyle.line,msgStyle[msg.kind]),__source:{fileName:_jsxFileName,lineNumber:185}},msg.text)}),_react2.default.createElement('p',{style:msgStyle.dismiss,__source:{fileName:_jsxFileName,lineNumber:192}},'(click panel to hide)'),_react2.default.createElement('p',{style:msgStyle.trash,__source:{fileName:_jsxFileName,lineNumber:195}},_react2.default.createElement('a',{href:'#',title:'clear messages',className:'control fa fa-trash',onClick:function onClick(e){e.preventDefault();_this2.clear()},__source:{fileName:_jsxFileName,lineNumber:196}}))))}},{key:'componentDidMount',value:function componentDidMount(){this.setView()}},{key:'componentDidUpdate',value:function componentDidUpdate(){this.setView()}},{key:'setView',value:function setView(on){if(on!=null){this.visible=on}this.dom.notbox.style.display=this.visible?'block':'none';this.setScroll()}},{key:'setScroll',value:function setScroll(){if(this.visible){if(this.lastNote>-1){this.dom['m'+this.lastNote].scrollIntoView()}else{if(this.lastMsg>-1){this.dom['m'+this.lastMsg].scrollIntoView()}}}}}]);return Notification}(_react.Component);exports.default=(0,_hoc.withContext)((0,_hoc.saveState)(Notification,'Notification',{msgs:null}));

},{"hoc.js":"hoc.js","react":"react"}],29:[function(require,module,exports){
'use strict';Object.defineProperty(exports,'__esModule',{value:true});var _slicedToArray=function(){function sliceIterator(arr,i){var _arr=[];var _n=true;var _d=false;var _e=undefined;try{for(var _i=arr[Symbol.iterator](),_s;!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break}}catch(err){_d=true;_e=err}finally{try{if(!_n&&_i['return'])_i['return']()}finally{if(_d)throw _e}}return _arr}return function(arr,i){if(Array.isArray(arr)){return arr}else if(Symbol.iterator in Object(arr)){return sliceIterator(arr,i)}else{throw new TypeError('Invalid attempt to destructure non-iterable instance')}}}();var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();var _jsxFileName='/Users/dirk/github/dariah/client/src/js/app/state/RelSelect.jsx';var _react=require('react');var _react2=_interopRequireDefault(_react);var _hoc=require('hoc.js');function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true})}else{obj[key]=value}return obj}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var RelOption=function RelOption(_ref){var valId=_ref.valId,value=_ref.value,classes=_ref.classes,onHit=_ref.onHit;return _react2.default.createElement('p',{className:'option '+classes,onClick:function onClick(event){return onHit(valId,value.text,value.full)},__source:{fileName:_jsxFileName,lineNumber:6}},value.text)};var initState=function initState(_ref2){var initVal=_ref2.initVal,initText=_ref2.initText,initFull=_ref2.initFull;return{poppedUp:false,search:'',selVal:initVal,selText:initText,selFull:initFull}};var RelSelect=function(_Component){_inherits(RelSelect,_Component);function RelSelect(){_classCallCheck(this,RelSelect);return _possibleConstructorReturn(this,(RelSelect.__proto__||Object.getPrototypeOf(RelSelect)).apply(this,arguments))}_createClass(RelSelect,[{key:'popUp',value:function popUp(){var poppedUp=this.state.poppedUp;poppedUp=!poppedUp;this.setState(_extends({},this.state,{poppedUp:poppedUp}))}},{key:'updSearch',value:function updSearch(event){var search=event.target.value;this.setState(_extends({},this.state,{search:search}))}},{key:'changeSel',value:function changeSel(onChange,selVal,selText,selFull){this.setState(_extends({},this.state,{poppedUp:false,selVal:selVal,selText:selText,selFull:selFull}));onChange(selVal,selText,selFull)}},{key:'addVal',value:function addVal(onChange,selText){var selVal=-1;this.setState(_extends({},this.state,_defineProperty({poppedUp:false,selVal:selVal,selText:selText},'selText',selText)));onChange(-1,selText)}},{key:'render',value:function render(){var _this2=this;var _props=this.props,isNew=_props.isNew,allowNew=_props.allowNew,valid=_props.valid,valueList=_props.valueList,onChange=_props.onChange,classNames=_props.classNames,extraClasses=_props.extraClasses;var _state=this.state,poppedUp=_state.poppedUp,search=_state.search,selVal=_state.selVal,selText=_state.selText,selFull=_state.selFull;var pat=search.toLowerCase();var icon=poppedUp?isNew?'minus':'arrow-up':isNew?'plus':'arrow-down';var classes=classNames.join(' ');var aclasses=classNames.concat(extraClasses).join(' ');var xclasses=extraClasses.join(' ');return _react2.default.createElement('div',{className:'select',__source:{fileName:_jsxFileName,lineNumber:50}},_react2.default.createElement('p',{className:'option-head',__source:{fileName:_jsxFileName,lineNumber:51}},isNew?null:_react2.default.createElement('span',{className:aclasses,title:selFull,__source:{fileName:_jsxFileName,lineNumber:52}},selText),_react2.default.createElement('span',{className:'xtag fa fa-'+icon,onClick:this.popUp.bind(this),__source:{fileName:_jsxFileName,lineNumber:53}})),poppedUp||!valid?_react2.default.createElement('div',{__source:{fileName:_jsxFileName,lineNumber:59}},_react2.default.createElement('p',{className:'option-type',__source:{fileName:_jsxFileName,lineNumber:60}},_react2.default.createElement('input',{type:'text',placeholder:'search...',onChange:this.updSearch.bind(this),value:search,className:xclasses,__source:{fileName:_jsxFileName,lineNumber:61}}),allowNew&&search!=''?_react2.default.createElement('span',{className:'xtag fa fa-plus-square',onClick:this.addVal.bind(this,onChange,search),__source:{fileName:_jsxFileName,lineNumber:68}}):null),_react2.default.createElement('div',{className:'options',__source:{fileName:_jsxFileName,lineNumber:74}},valueList.map(function(_ref3){var _ref4=_slicedToArray(_ref3,2),_id=_ref4[0],value=_ref4[1];return pat==null||pat==''||value.full.toLowerCase().indexOf(pat)!==-1?_react2.default.createElement(RelOption,{key:_id,valId:_id,value:value,classes:_id==selVal?classes:'',onHit:_this2.changeSel.bind(_this2,onChange),__source:{fileName:_jsxFileName,lineNumber:76}}):null}))):null)}}]);return RelSelect}(_react.Component);exports.default=(0,_hoc.withContext)((0,_hoc.saveState)(RelSelect,'RelSelect',initState));

},{"hoc.js":"hoc.js","react":"react"}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
