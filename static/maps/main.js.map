{"version":3,"sources":["main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Component","name","specs","page","this","variants","_stage","vr","st","stages","msg","container","state","data","related_values","ids_fetched","implementation","specific","g","Msg","prototype","need","stage","_deed","method","methodCall","bind","timing","getBefore","promises","forEach","task","prev_name","prev_stage","prev_component","getComponent","hasVariant","push","$","when","apply","then","ensure","once","by_id","_visibility","on","show","hide","_fetch","ids_to_fetch","fetch_url","url_tpl","replace","postFetch","_postFetch","undefined","join","ajax","type","url","contentType","dataType","json","clear","msgs","m","good","console","log","relvals","id","weld","_weld","_dst","getContainer","dest","destination","prepend","append","ids_asked_for","from_str","getState","_wire","wire","_work","work","./generic.js","./message.js","2","Control","component","widget","ctl","_html","html","showState","_dressup","click","preventDefault","setState","_isActive","addClass","find","removeClass","3","CType","Relative","Object","create","constructor","./relative.js","4","EUmap","_map_object","_map_container","_marker","_setvalues","_not_mapped","-","CY","KS","TR","MC","GE","_preHtml","_myDressup","that","cc","height","width","vectorMap","map","backgroundColor","regionsSelectable","markersSelectable","regionsSelectableOne","markersSelectableOne","markerStyle","initial","fill","fill-opacity","stroke","stroke-width","stroke-opacity","hover","cursor","selected","selectedHover","regionStyle","markers","series","values","scale","normalizeFunction","attribute","min","max","regions","outdariah","indariah","onRegionTipShow","el","related_value","_statistics","onMarkerTipShow","onRegionClick","_related_values_index","onMarkerClick","onRegionSelected","change_state","_type","a_to_str","_unmapped_selected","onMarkerSelected","zoom_p","css","zoom_control","setFocus","result","this_state","_from_str","empty","_mySetFacet","map_regions","_no_values","value","setSelectedRegions","setSelectedMarkers","_myStats","total","distilled","weighted_statistics","pr","Math","sqrt","setValues","_plainWeld","_myWeld","_related_values_off","_related_values_on","_related_values_list","latLng","sort","b","5","Facet","_stats","table","enabled_facets","h","children","facet_name","facet_component","_display","expand_control","mode","dt","closest","hidec","morec","showc","expanded_material","condensed_material","not_expanded_material","key","attr","mode_undef","localstorage_vars","isSet","get","all_facets","each","set","lc","info","detailcontrols","mother_list","facets","facet","d","v","the_false","discard","this_v","stats","6","Filter","_tags","_filter_control","_filter_control2","_box","_completions_dst","_stats_dst","_clear_filter_control","_wire_mode","_distilled","_setFilter","textf","val","autocomplete","_response","event","ui","content","_setClear","stat_prefix","label","cf","flt","flt2","appendTo","source","response","minLength","focus","7","deselectText","document","selection","window","getSelection","removeAllRanges","selectText","containerid","range","body","createTextRange","moveToElementText","getElementById","select","createRange","selectNode","addRange","toggleDetail","detail","extra","thedetail","toggle","thiscl","othercl","hasClass","compact","cutoff","size","text","x","substr","ob","ar","split","to_str","escapeHTML","chr","&","<",">","_Request","parameter","parameters","uri","params","query","location","search","indexOf","slice","p","request_vars","_localstorage","initNamespaceStorage","localStorage","8","Item","it","dest_row","types","tp","in_dariah","after","9","List","rowstart","rowend","row","open_ids","rid","_set_it","control","10","Page","./page.js","11","on_clear","_destination","_trash_control","_trash_control_para","_hide","_on_clear","_show","kind","message_text","12","ViewState","stages_prev","main_lists","getValues","contrib_list","contrib","empty_list","","_component_specs","share","Share","list","item","filter","eumap","ctype","tadiraha","TadirahA","tadiraho","TadirahO","tadiraht","TadirahT","_by_id","_before","_ignore","components","child_component","dest_name","parent_component","_resolveTiming","_setHeight","History","Adapter","subtract","wh","innerHeight","w","middle","left","right","addEdge","prev_node","next_node","timing_edges","timing_edges_inv","timing_nodes","next_stage","next_name","subset","visited","node","other_prev_node","keys","_tasks","_timing","cycle","nodes","addto","prev_nodes","task_comps","./components.js","./control.js","./ctype.js","./eumap.js","./facet.js","./filter.js","./item.js","./list.js","./share.js","./tadiraha.js","./tadiraho.js","./tadiraht.js","./viewstate.js","13","rtype","cols","shortsize","_list","_list2","_related_state","_all_values_control","_cols","_cutoff","_shortsize","type_sg","type_pl","raw_value","compact_value","last_handled","scrollTop","scrollIntoView","behavior","alignToTop","ison","_setFacet","all_selected","facet_cell","facet_cell2","related_data","has_related_value","related_state","14","slink","prompt","app_url_raw","app_url_cite","getVars","app_url_rawc","pvtitle","animate","opacity","mouseleave","15","16","17","18","_data","_getInitstate","_addHistory","_specs","country","default_value","flt_contrib","flt_country","flt_type","flt_tadiraha","flt_tadiraho","flt_tadiraht","rel_country_contrib","rel_type_contrib","rel_tadiraha_contrib","rel_tadiraho_contrib","rel_tadiraht_contrib","item_contrib","item_country","_showas","sg","pl","_validate","newval","spec","test","Number","limits","comprehensive","vars","valid_val","raw_val","title","view_url","tit","this_url","app_url","pushState"],"mappings":"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","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n/* COMPONENTS \n * The Page function specifies and builds a list of components\n * Every component on the page corresponds to a function (with a prototype)\n * This function is stored in a generic Component function in a field called specific.\n * Every component has a list of subcomponents. For example, the 'list' component has a subcomponent 'contrib'\n * for the list of contributions, and a subcomponent 'country' for the list of countries.\n * The generic functions of a component take care of:\n * - generating HTML container divs for the subcomponents under specified destination elements if they does not already exist\n * - showing and hiding the subcomponents, and in general, work the current state data to the subcomponents \n * - fetching the subcomponent's data from the server, if needed\n * This *specific* functionality of the components are defined in separate files.\n * Of this specific functionality, the following will be called from the generic component function:\n * - show(vr): inspect the current state and determine whether the subcomponent should be shown or hidden\n * - wire(vr): after the data has been fetched, wrap the data into the desired HTML content of the subcomponent\n *   and add the wiring (click events, change events)\n * In turn, the specific functions can access their associated generic components by this.component\n */\n\n/* GENERIC COMPONENT\n * Here is the generic functionality of each component\n */\n\nvar g = require('./generic.js');\nvar Msg = require('./message.js');\n\nfunction Component(name, specs, page) {\n    this.name = name;\n    this.page = page;\n    this.specs = specs;\n    this.variants = specs.variants;\n    this._stage = {};\n    for (var vr in this.variants) {\n        this._stage[vr] = {};\n        for (var st in this.page.stages) {\n            this._stage[vr][st] = true;\n        }\n    }\n    this.msg = {};\n    this.container = {};\n    this.state = this.page.state;\n    this.data = {};\n    this.related_values = {};\n    this.ids_fetched = {};\n    this.implementation = new specs.specific(this);\n};\n\nComponent.prototype = {\n    /* need, deed, ensure are wrappers around the promise mechanism.\n     * The stage is a stage in processing the component, such as fetch, wire, work.\n     * There should be a method method which does the work and which is expected to return a promise.\n     * If it does not, we detect it, and yield a promise that is resolved with the original return value.\n     * ensure takes care that the function of an action is promised to be execute once, by registering it\n     * as a promise for that stage.\n     * If there is already a fulfilled or pending promise for that action at that stage, no new promise will be made.\n     * Ensure returns a function with no arguments. If it is called, the promise will be made.\n     * So the result of ensure can be put inside the .then() of an other promise.\n     * Now is a function that calls a function and returns the result as promise.\n     */\n    need: function need(vr, stage) {\n        // check whether there is a promise and whether it has been fulfilled\n        return !this._stage[vr][stage].state || this._stage[vr][stage].state() == 'rejected';\n    },\n    _deed: function _deed(vr, stage, method) {\n        // register a promise to perform the method associated with stage by entering it in the book keeping of stages\n        /* we want to pass a method call to a .then() later on.\n         * If we pass it straight, like this.method, .then() will call this function and supplies its own promise object as the this.\n         * That is not our purpose: we want to call the method with the current component object as the this.\n         * Hence we use bind() in order to supply the right this.\n         * Whoever calls this new function methodCall, will perform a true method call of method method on object that.\n         * This is crucial, otherwise all the careful time logic gets mangled, because the promises are stored in the component object.\n         */\n        var methodCall = this[method].bind(this, vr);\n        var timing = this.page.getBefore(this.name, stage);\n        var promises = [];\n        timing.forEach(function (task) {\n            var prev_name = task[0];\n            var prev_stage = task[1];\n            var prev_component = this.page.getComponent(prev_name);\n            if (prev_component.hasVariant(vr)) {\n                promises.push(prev_component._stage[vr][prev_stage]);\n            }\n        }, this);\n        this._stage[vr][stage] = $.when.apply($, promises).then(methodCall);\n    },\n    ensure: function ensure(vr, stage, method) {\n        /* function to promise that method fun will be executed once and once only or multiple times,\n         * but only if the before actions have been completed\n         */\n        if (stage in this.page.stages) {\n            /* if the component works per id, the once setting of the stage is ignored\n             * because we have to look whether we should execute that stage for new identifiers\n             */\n            var once = this.page.stages[stage] && !this.specs.by_id;\n            if (!once || this.need(vr, stage)) {\n                this._deed(vr, stage, method);\n            }\n        }\n    },\n    /* here are the implementations of the functions that are to be wrapped as promises\n     * They can focus on the work, may or may not yield a promise\n     */\n    hasVariant: function hasVariant(vr) {\n        return vr in this.variants;\n    },\n    _visibility: function _visibility(vr, on) {\n        if (this.hasVariant(vr)) {\n            if (vr in this.container) {\n                if (on) {\n                    this.container[vr].show();\n                } else {\n                    this.container[vr].hide();\n                }\n            }\n        }\n    },\n    _fetch: function _fetch(vr, ids_to_fetch) {\n        // get the material by AJAX if needed\n        var fetch_url = url_tpl.replace(/_c_/, 'data').replace(/_f_/, this.specs.fetch_url + '_' + vr) + '.json';\n        this.msg[vr].msg('fetching data ...');\n        var postFetch = this._postFetch.bind(this, vr);\n        if (!(ids_to_fetch == undefined)) {\n            fetch_url += '?ids=' + ids_to_fetch.join(',');\n        }\n        return $.ajax({\n            type: 'POST',\n            url: fetch_url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json'\n        }).then(function (json) {\n            postFetch(json, ids_to_fetch);\n        });\n    },\n    _postFetch: function _postFetch(vr, json, ids_to_fetch) {\n        // receive material after AJAX call\n        this.msg[vr].clear();\n        json.msgs.forEach(function (m) {\n            this.msg[vr].msg(m);\n        }, this);\n        if (json.good) {\n            this.data[vr] = json.data;\n            if (this.specs.by_id) {\n                console.log(json.data);\n            }\n            if ('relvals' in json) {\n                this.related_values[vr] = json.relvals;\n            }\n            if (this.specs.by_id) {\n                ids_to_fetch.forEach(function (id) {\n                    this.ids_fetched[id] = true;\n                }, this);\n            }\n        }\n        this.implementation.weld(vr);\n    },\n    _weld: function _weld(vr) {\n        this._dst = this.page.getContainer(this.specs.dest, this.variants);\n        if (!this.specs.by_id) {\n            this.container[vr] = $('#' + this.name + '_' + vr);\n            if (this.container[vr].length == 0) {\n                var destination = this._dst[vr];\n                destination.append('<div id=\"msg_' + this.name + '_' + vr + '\"></div>');\n                destination.append('<div id=\"' + this.name + '_' + vr + '\" class=\"component\"></div>');\n                this.container[vr] = $('#' + this.name + '_' + vr);\n            }\n            this.msg[vr] = new Msg('msg_' + this.name + '_' + vr);\n        } else {\n            if (!(vr in this.msg)) {\n                var destination = this._dst[vr];\n                destination.prepend('<div id=\"msg_' + this.name + '_' + vr + '\"></div>');\n                this.msg[vr] = new Msg('msg_' + this.name + '_' + vr);\n            }\n        }\n        if (this.specs.fetch_url != null) {\n            var ids_to_fetch = [];\n            if (this.specs.by_id) {\n                var ids_asked_for = g.from_str(this.state.getState(this.specs.fetch_url + '_' + vr));\n                for (var id in ids_asked_for) {\n                    if (!(id in this.ids_fetched)) {\n                        ids_to_fetch.push(id);\n                    }\n                }\n                console.log('ids to fetch ' + this.name + ' - ' + vr, ids_to_fetch);\n                if (ids_to_fetch.length != 0) {\n                    return this._fetch(vr, ids_to_fetch);\n                }\n            } else {\n                return this._fetch(vr);\n            }\n        } else {\n            this.implementation.weld(vr);\n        }\n    },\n    _wire: function _wire(vr) {\n        this.implementation.wire(vr); // perform wire actions that are specific to this component\n    },\n    _work: function _work(vr) {\n        this._visibility(vr, true);\n        this.implementation.work(vr); // perform work actions that are specific to this component\n    },\n    weld: function weld(vr) {\n        if (this.hasVariant(vr) && this.implementation.show(vr)) {\n            this.ensure(vr, 'weld', '_weld');\n        }\n    },\n    wire: function wire(vr) {\n        if (this.hasVariant(vr) && this.implementation.show(vr)) {\n            this.ensure(vr, 'wire', '_wire');\n        }\n    },\n    work: function work(vr) {\n        // work (changed) state to current material\n        if (this.hasVariant(vr) && this.implementation.show(vr)) {\n            // show/hide depending on the specific condition\n            this.ensure(vr, 'work', '_work');\n        } else {\n            this._visibility(vr, false);\n        }\n    }\n};\n\nmodule.exports = Component;\n\n},{\"./generic.js\":7,\"./message.js\":11}],2:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: Control\n * This manages the controls that correspond to lists of records to be displayed in the middle column\n * Clicking on a control shows the corresponding list and hides all others.\n */\n\nfunction Control(component) {\n    this.component = component;\n    this.widget = {};\n    this.ctl = {};\n};\n\nControl.prototype = {\n    _html: function _html(vr) {\n        this.component.container[vr].html('<a class=\"control_title\" href=\"#\">' + this.component.state.showState('list', vr, 'sg') + '</a> ');\n    },\n    _dressup: function _dressup(vr) {\n        this.ctl[vr].click(function (e) {\n            e.preventDefault();\n            this.component.state.setState('list', vr);\n        }.bind(this));\n    },\n    _isActive: function _isActive(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    show: function show(vr) {\n        return true;\n    },\n    weld: function weld(vr) {\n        this._html(vr);\n        this.widget[vr] = this.component.container[vr];\n        this.widget[vr].addClass('control_big');\n        this.ctl[vr] = this.component.container[vr].find('a');\n    },\n    wire: function wire(vr) {\n        this._dressup(vr);\n    },\n    work: function work(vr) {\n        if (this._isActive(vr)) {\n            this.ctl[vr].addClass('ison');\n            this.widget[vr].addClass('ison');\n        } else {\n            this.ctl[vr].removeClass('ison');\n            this.widget[vr].removeClass('ison');\n        }\n    }\n};\n\nmodule.exports = Control;\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: ctype\n * This manages the facet \"contribution type\"\n */\n\nvar Relative = require('./relative.js');\n\nfunction CType(component) {\n  Relative.call(this, component, 'type');\n};\n\nCType.prototype = Object.create(Relative.prototype);\nCType.prototype.constructor = CType;\n\nmodule.exports = CType;\n\n},{\"./relative.js\":13}],4:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: EUmap\n * This manages a clickable map of the EU countries\n * See http://jvectormap.com/documentation/javascript-api/jvm-map/\n */\n\nvar g = require('./generic.js');\nvar Relative = require('./relative.js');\n\nfunction EUmap(component) {\n    Relative.call(this, component, 'country');\n    this._map_object = {};\n    this._map_container = {};\n    this._marker = {};\n    this._setvalues = {};\n    this._not_mapped = {\n        '-': true,\n        CY: true,\n        KS: true,\n        TR: true,\n        MC: true,\n        GE: true\n    };\n};\n\nEUmap.prototype = Object.create(Relative.prototype);\nEUmap.prototype.constructor = EUmap;\nEUmap.prototype._preHtml = function (vr) {\n    return '<div id=\"map-europe_' + vr + '\" class=\"position\"><p class=\"zoom\"><a class=\"fa fa-arrows\" href=\"#\" title=\"zoom to fit all countries\"/></p></div>';\n};\nEUmap.prototype._myDressup = function (vr) {\n    var that = this;\n    var cc = this.component.container[vr];\n    this._map_container[vr] = cc.find('#map-europe_' + vr);\n    var height = this._map_container[vr].width() * 0.6;\n    this._map_container[vr].width('100%');\n    this._map_container[vr].height(height);\n    this._map_container[vr].vectorMap({\n        'map': 'europe_mill',\n        backgroundColor: '#ccccff',\n        regionsSelectable: true,\n        markersSelectable: true,\n        regionsSelectableOne: false,\n        markersSelectableOne: false,\n        markerStyle: {\n            initial: {\n                fill: '#008800',\n                'fill-opacity': 0.2,\n                stroke: 'none',\n                'stroke-width': 0,\n                'stroke-opacity': 0.2,\n                'r': 1\n            },\n            hover: {\n                cursor: 'pointer',\n                stroke: '#ffff44',\n                'stroke-width': 1,\n                'stroke-opacity': 1\n            },\n            selected: {\n                fill: '#008800',\n                'fill-opacity': 1\n            },\n            selectedHover: {}\n        },\n        regionStyle: {\n            initial: {\n                fill: '#bbbbbb',\n                'fill-opacity': 1,\n                stroke: 'none',\n                'stroke-width': 0,\n                'stroke-opacity': 1\n            },\n            hover: {\n                cursor: 'pointer',\n                stroke: '#ffff44',\n                'stroke-width': 3,\n                'stroke-opacity': 1\n            },\n            selected: {\n                fill: '#dd8844',\n                'fill-opacity': 1\n            },\n            selectedHover: {}\n        },\n        markers: this._marker[vr],\n        series: {\n            markers: [{\n                values: {},\n                scale: [0, 20],\n                normalizeFunction: 'linear',\n                attribute: 'r',\n                min: 0,\n                max: 100\n            }],\n            regions: [{\n                scale: {\n                    'outdariah': '#ffffff',\n                    'indariah': '#ffddbb'\n                },\n                attribute: 'fill',\n                values: this._setvalues[vr]\n            }]\n        },\n        onRegionTipShow: function (e, el, related_value) {\n            el.html(related_value + ': ' + (related_value in this._statistics[vr] ? this._statistics[vr][related_value] : 'not in DARIAH'));\n        }.bind(this),\n        onMarkerTipShow: function (e, el, related_value) {\n            el.html(related_value + ': ' + (related_value in this._statistics[vr] ? this._statistics[vr][related_value] : 'not in DARIAH'));\n        }.bind(this),\n        onRegionClick: function (e, related_value) {\n            if (!(related_value in this._related_values_index[vr])) {\n                e.preventDefault();\n            }\n        }.bind(this),\n        onMarkerClick: function (e, related_value) {\n            if (!(related_value in this._related_values_index[vr])) {\n                e.preventDefault();\n            }\n        }.bind(this),\n        onRegionSelected: function (e, related_value, i, selected) {\n            if (this.change_state) {\n                this.component.state.setState('rel_' + this._type + '_' + vr, g.a_to_str(selected) + this._unmapped_selected(vr));\n            }\n        }.bind(this),\n        onMarkerSelected: function (e, related_value, i, selected) {\n            if (this.change_state) {\n                this.component.state.setState('rel_' + this._type + '_' + vr, g.a_to_str(selected) + this._unmapped_selected(vr));\n            }\n        }.bind(this)\n    });\n    var zoom_p = cc.find('p.zoom');\n    zoom_p.css('top', height - 20 + 'px');\n    zoom_p.css('left', '10px');\n    var zoom_control = cc.find('p.zoom a');\n    zoom_control.click(function (e) {\n        e.preventDefault();\n        that._map_object[vr].setFocus({ regions: ['GB', 'GR'] });\n    });\n    this._map_object[vr] = this._map_container[vr].vectorMap('get', 'mapObject');\n    this._map_object[vr].setFocus({ regions: ['GB', 'GR'] });\n};\nEUmap.prototype._unmapped_selected = function (vr) {\n    var result = [];\n    var this_state = this._from_str(vr, this.component.state.getState('rel_' + this._type + '_' + vr));\n    var empty = true;\n    for (var related_value in this._not_mapped) {\n        if (related_value in this_state && this_state[related_value]) {\n            result.push(related_value);\n            empty = false;\n        }\n    }\n    return empty ? '' : ',' + result.join(',');\n};\nEUmap.prototype._mySetFacet = function (vr, related_values) {\n    this.change_state = false;\n    /* some countries are not on the map, we do show those countries in the list but not on the map.\n     * Same for -, the key that denotes ALL countries\n     */\n    var map_regions = {};\n    for (var related_value in related_values) {\n        if (!(related_value in this._not_mapped) && related_value != this._no_values.value) {\n            map_regions[related_value] = related_values[related_value];\n        }\n    }\n    this._map_object[vr].setSelectedRegions(map_regions);\n    this._map_object[vr].setSelectedMarkers(map_regions);\n    this.change_state = true;\n};\nEUmap.prototype._myStats = function (vr) {\n    var total = this.distilled[vr].length;\n    if (total == 0) {\n        total = 1;\n    }\n    var weighted_statistics = {};\n    for (var related_value in this._statistics[vr]) {\n        if (related_value != this._no_values.value) {\n            var pr = 100 * this._statistics[vr][related_value] / total;\n            weighted_statistics[related_value] = total < 10 ? pr : 10 * Math.sqrt(pr);\n        }\n    }\n    this._map_object[vr].series.markers[0].setValues(weighted_statistics);\n};\nEUmap.prototype._plainWeld = function (vr) {};\nEUmap.prototype._myWeld = function (vr) {\n    this._marker[vr] = {};\n    this._setvalues[vr] = {};\n    var related_values = this.component.related_values[vr];\n    for (var i in related_values) {\n        var related_value = related_values[i];\n        if (related_value[1]) {\n            this._related_values_off[vr][i] = false;\n            this._related_values_on[vr][i] = true;\n            this._related_values_list[vr].push(i);\n            this._related_values_index[vr][i] = related_value[0];\n            if (related_value.length > 3) {\n                this._marker[vr][i] = { latLng: [related_value[2], related_value[3]], name: related_value[0] };\n            }\n            this._setvalues[vr][i] = 'indariah';\n        } else {\n            this._setvalues[vr][i] = 'outdariah';\n        }\n    }\n    this._related_values_list[vr].sort(function (a, b) {\n        return related_values[a] < related_values[b] ? -1 : related_values[a][0] > related_values[b][0] ? 1 : 0;\n    });\n};\n\nmodule.exports = EUmap;\n\n},{\"./generic.js\":7,\"./relative.js\":13}],5:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: Facets\n * This sets up a list of facets for the lists of records to be displayed in the middle column\n * It will host individual facets\n */\n\nvar g = require('./generic.js');\n\nfunction Facet(component) {\n    this.component = component;\n    this._stats = {};\n    this.data = {};\n    this.table = {};\n    this.distilled = {};\n    this.enabled_facets = {};\n};\n\nFacet.prototype = {\n    _html: function _html(vr) {\n        var h = '';\n        h += '<p><span fct=\"all\"></span>Filtering <span id=\"fstats_' + vr + '\"></span></p>';\n        this.component.container[vr].html(h);\n    },\n    show: function show(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    weld: function weld(vr) {\n        var children = this.component.children;\n        this.enabled_facets[vr] = {};\n        for (var facet_name in children) {\n            var facet_component = children[facet_name];\n            if (facet_component.hasVariant(vr)) {\n                this.enabled_facets[vr][facet_name] = children[facet_name];\n            }\n        }\n        this._html(vr);\n    },\n    _display: function _display(expand_control, mode) {\n        var that = this;\n        var dt = expand_control.closest('p');\n        var hidec = dt.find('.hidec');\n        var morec = dt.find('.morec');\n        var showc = dt.find('.showc');\n        var expanded_material = expand_control.closest('div').find('table,.flt');\n        var condensed_material = expand_control.closest('div').find('.value_list2,.flt_compact');\n        var not_expanded_material = expand_control.closest('div').find('.flt_not_expanded');\n        var key = 'fctx_' + expand_control.closest('span').attr('fct');\n        var mode_undef = mode == undefined;\n        if (mode_undef) {\n            if (g.localstorage_vars.isSet(key)) {\n                mode = g.localstorage_vars.get(key);\n            } else {\n                mode = 1;\n            }\n        }\n        var all_facets = key == 'fctx_all';\n        if (all_facets && !mode_undef) {\n            expand_control.closest('div').find('div.component span[fct]').each(function () {\n                that._display($(this), mode);\n            });\n        }\n        g.localstorage_vars.set(key, mode);\n        if (mode == 0) {\n            hidec.show();\n            morec.hide();\n            showc.hide();\n            if (!all_facets) {\n                not_expanded_material.show();\n                expanded_material.hide();\n                condensed_material.hide();\n            }\n        } else if (mode == 1) {\n            hidec.hide();\n            morec.show();\n            showc.hide();\n            if (!all_facets) {\n                not_expanded_material.show();\n                expanded_material.hide();\n                condensed_material.show();\n            }\n        } else {\n            hidec.hide();\n            morec.hide();\n            showc.show();\n            if (!all_facets) {\n                not_expanded_material.hide();\n                expanded_material.show();\n                condensed_material.hide();\n            }\n        }\n    },\n    wire: function wire(vr) {\n        var that = this;\n        var cc = this.component.container[vr];\n        var lc = this.component.page.getComponent('list').container[vr];\n        this._stats[vr] = cc.find('#fstats_' + vr);\n        this.table[vr] = lc.find('#table_' + vr);\n        var info = ' details; click to change level of details';\n        var detailcontrols = '<a class=\"showc fa fa-fw fa-list-ul\" href=\"#\" title=\"full' + info + '\"></a><a class=\"morec fa fa-fw fa-align-left\" href=\"#\" title=\"condensed' + info + '\"></a><a class=\"hidec fa fa-fw fa-minus\" href=\"#\" title=\"hidden' + info + '\"></a>';\n        cc.addClass('facet');\n        cc.find('span[fct]').each(function () {\n            $(this).html(detailcontrols + '&nbsp');\n            that._display($(this));\n        });\n        cc.find('.hidec').click(function (e) {\n            e.preventDefault();\n            that._display($(this), 1);\n        });\n        cc.find('.morec').click(function (e) {\n            e.preventDefault();\n            that._display($(this), 2);\n        });\n        cc.find('.showc').click(function (e) {\n            e.preventDefault();\n            that._display($(this), 0);\n        });\n    },\n    work: function work(vr) {\n        this.table[vr].find('tr[id]').hide();\n        var mother_list = this.component.page.getComponent('list');\n        var data = mother_list.data[vr];\n        var facets = this.enabled_facets[vr];\n        this.distilled[vr] = [];\n        for (var facet_name in facets) {\n            var facet = facets[facet_name].implementation;\n            facet.distilled[vr] = [];\n        }\n        data.forEach(function (d, i) {\n            var v = true; // will hold whether this row passes all facets\n            /* We collect in the distilled member of this facet object the collective results of all individual facets,\n             * Moreover, for each facet, we collect in its distilled member the results when all facets are applied except the facet in question\n             * so: \n             * 1. rows with a failure for 2 or more facets are discarded\n             * 2. rows with a failure for exactly one facet are added to the data for that facet\n             * 3. rows which pass all facets are added to all facets, and also to the final filtered set\n             */\n            var the_false = null; // which facet has yielded false (if there are more than one we'll discard the row\n            var discard = false; // becomes true when we have encounterd 2 facets that yield false\n            for (var facet_name in facets) {\n                if (!discard) {\n                    var facet = facets[facet_name].implementation;\n                    var this_v = facet.v(vr, d[0]); // this_v: whether the row passes this facet\n                    if (!this_v) {\n                        v = false;\n                        if (the_false == null) {\n                            // this is the first failure, we store the facet number in the_false\n                            the_false = facet;\n                        } // else we discard the row altogether\n                        else {\n                                discard = true;\n                            }\n                    }\n                }\n            }\n            if (!discard) {\n                if (v) {\n                    this.distilled[vr].push(d[0]);\n                    this.table[vr].find('tr[id=\"r' + d[0] + '\"]').show();\n                }\n                if (the_false != null) {\n                    the_false.distilled[vr].push(d[0]);\n                } else {\n                    for (var facet_name in facets) {\n                        var facet = facets[facet_name].implementation;\n                        facet.distilled[vr].push(d[0]);\n                    }\n                }\n            }\n        }, this);\n        for (var facet_name in facets) {\n            var facet = facets[facet_name].implementation;\n            facet.stats(vr);\n        }\n        this._stats[vr].html(this.distilled[vr].length + ' of ' + data.length);\n    }\n};\n\nmodule.exports = Facet;\n\n},{\"./generic.js\":7}],6:[function(require,module,exports){\n\"use strict\";\n\n/* INDIVIDUAL COMPONENT: Filters\n * This is a list of filter controls corresponding to lists of records to be displayed in the middle column\n * Setting a filter control filters the associated list.\n */\n\nfunction Filter(component) {\n    this.component = component;\n    this._tags = {};\n    this._filter_control = {};\n    this._filter_control2 = {};\n    this._box = {};\n    this._completions_dst = {};\n    this._stats_dst = {};\n    this._clear_filter_control = {};\n    this._wire_mode = {};\n    this._distilled = {};\n    this.distilled = {};\n};\n\nFilter.prototype = {\n    _html: function _html(vr) {\n        var h = \"\\n<div>\\n    <p class=\\\"dctrl\\\"><span fct=\\\"\" + this.component.name + \"-\" + vr + \"\\\"></span> By full text search\\n        <a href=\\\"#\\\" title=\\\"modify full text filter\\\" id=\\\"flt2_\" + vr + \"\\\" class=\\\"flt_not_expanded facet_single ison flt_pat\\\"></a>\\n        <a href=\\\"#\\\" class=\\\"control_med fa fa-close filtc\\\" id=\\\"clearf_\" + vr + \"\\\"></a>\\n    </p>\\n    <div id=\\\"fltw_\" + vr + \"\\\">\\n        <p id=\\\"fbox_\" + vr + \"\\\" class=\\\"flt control_med fbox ui-widget\\\">\\n            <input id=\\\"flt_\" + vr + \"\\\" class=\\\"flt flt_pat\\\"/>\\n            <span fbox class=\\\"stats\\\" id=\\\"stats_\" + vr + \"\\\"></span>\\n        </p>\\n        <div id=\\\"autoc_\" + vr + \"\\\" style=\\\"display: none;\\\">here \" + vr + \"</div>\\n    </div>\\n</div>\";\n        this.component.container[vr].html(h);\n    },\n    _setFilter: function _setFilter(vr) {\n        var textf = this.component.state.getState(\"flt_\" + vr);\n        this._filter_control2[vr].html(textf);\n        this._filter_control[vr].val(textf);\n        this._filter_control[vr].autocomplete(\"search\", textf);\n    },\n    _response: function _response(vr) {\n        return function (event, ui) {\n            this._distilled[vr] = {};\n            ui.content.forEach(function (u, i) {\n                this._distilled[vr][u.value] = 1;\n            }, this);\n            if (!this._wire_mode[vr]) {\n                var textf = this._filter_control[vr].val();\n                this.component.state.setState(\"flt_\" + vr, textf);\n            }\n        }.bind(this);\n    },\n    _setClear: function _setClear(vr) {\n        this._clear_filter_control[vr].click(function (e) {\n            e.preventDefault();\n            this._filter_control[vr].val(\"\");\n            this._filter_control[vr].autocomplete(\"search\", \"\");\n        }.bind(this));\n    },\n    stats: function stats(vr) {\n        var stat_prefix;\n        if (this._filter_control[vr].val() == \"\") {\n            stat_prefix = \"\";\n            this._stats_dst[vr].removeClass(\"ison\");\n        } else {\n            stat_prefix = this.facet.distilled[vr].length + \" of \";\n            this._stats_dst[vr].addClass(\"ison\");\n        }\n        this._stats_dst[vr].html(\"\" + stat_prefix + this.distilled[vr].length);\n    },\n    v: function v(vr, i) {\n        return i in this._distilled[vr];\n    },\n    show: function show(vr) {\n        return this.component.state.getState(\"list\") == vr;\n    },\n    weld: function weld(vr) {\n        this._html(vr);\n    },\n    wire: function wire(vr) {\n        if (!this.facet) {\n            this.facet = this.component.page.getComponent(\"facet\").implementation;\n        }\n        var data = this.component.page.getComponent(\"list\").data[vr];\n        this._tags[vr] = [];\n        data.forEach(function (d, i) {\n            this._tags[vr].push({ label: d[1], value: \"\" + d[0] });\n        }, this);\n        this._distilled[vr] = {};\n        this.distilled[vr] = [];\n        var cc = this.component.container[vr];\n        var cf = cc.find(\"#fltw_\" + vr);\n        var flt = $(\"#flt_\" + vr);\n        this._filter_control[vr] = flt;\n        var flt2 = $(\"#flt2_\" + vr);\n        this._filter_control2[vr] = flt2;\n        this._box[vr] = cf.find(\"#fbox_\" + vr);\n        this._completions_dst[vr] = cf.find(\"#autoc_\" + vr);\n        this._stats_dst[vr] = cf.find(\"#stats_\" + vr);\n        this._clear_filter_control[vr] = cc.find(\"#clearf_\" + vr);\n        this._filter_control[vr].autocomplete({\n            appendTo: this._completions_dst[vr],\n            source: this._tags[vr],\n            response: this._response(vr),\n            minLength: 0\n        });\n        flt2.click(function (e) {\n            e.preventDefault();\n            $(this).closest(\"div\").find(\".morec\").click();\n            flt[0].focus();\n        });\n        this._wire_mode[vr] = true;\n        this._setClear(vr);\n        this._setFilter(vr);\n        this._wire_mode[vr] = false;\n    },\n    work: function work(vr) {\n        var textf = this.component.state.getState(\"flt_\" + vr);\n        if (textf == \"\") {\n            this._box[vr].removeClass(\"ison\");\n            this._clear_filter_control[vr].hide();\n        } else {\n            this._box[vr].addClass(\"ison\");\n            this._clear_filter_control[vr].show();\n        }\n        this._filter_control2[vr].html(textf);\n    }\n};\n\nmodule.exports = Filter;\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\n/* GENERIC\n * Some function for very generic purposes\n */\n\nvar escapeHTML = function () {\n    'use strict';\n    var chr = {\n        '&': '&amp;', '<': '&lt;', '>': '&gt;'\n    };\n    return function (text) {\n        return text.replace(/[&<>]/g, function (a) {\n            return chr[a];\n        });\n    };\n}();\n\nvar _Request = {\n    parameter: function parameter(name) {\n        return this.parameters()[name];\n    },\n    parameters: function parameters(uri) {\n        var i, parameter, params, query, result;\n        result = {};\n        if (!uri) {\n            uri = window.location.search;\n        }\n        if (uri.indexOf(\"?\") === -1) {\n            return {};\n        }\n        query = uri.slice(1);\n        params = query.split(\"&\");\n        params.forEach(function (p, i) {\n            parameter = p.split(\"=\");\n            result[parameter[0]] = parameter[1];\n        });\n        return result;\n    }\n};\n\nvar request_vars = _Request.parameters();\nvar _localstorage = $.initNamespaceStorage('req');\nvar localstorage_vars = _localstorage.localStorage;\n\nfunction deselectText() {\n    if (document.selection) {\n        document.selection.empty();\n    } else if (window.getSelection) {\n        window.getSelection().removeAllRanges();\n    }\n};\n\nfunction selectText(containerid) {\n    deselectText();\n    if (document.selection) {\n        var range = document.body.createTextRange();\n        range.moveToElementText(document.getElementById(containerid));\n        range.select();\n    } else if (window.getSelection) {\n        var range = document.createRange();\n        range.selectNode(document.getElementById(containerid));\n        window.getSelection().addRange(range);\n    }\n};\n\nfunction toggleDetail(widget, detail, extra) {\n    var thedetail = detail == undefined ? widget.closest('div').find('.detail') : detail;\n    thedetail.toggle();\n    if (extra != undefined) {\n        extra(widget);\n    }\n    var thiscl, othercl;\n    if (widget.hasClass('fa-chevron-right')) {\n        thiscl = 'fa-chevron-right';\n        othercl = 'fa-chevron-down';\n    } else {\n        thiscl = 'fa-chevron-down';\n        othercl = 'fa-chevron-right';\n    }\n    widget.removeClass(thiscl);\n    widget.addClass(othercl);\n};\n\nfunction compact(cutoff, size, text) {\n    return text.length > cutoff ? text.replace(/[^ -]+/g, function (x) {\n        return x.substr(0, size);\n    }) : text;\n};\n\nfunction from_str(st) {\n    var ob = {};\n    if (st !== null && st != undefined && st != '') {\n        var ar = st.split(',');\n        ar.forEach(function (v) {\n            ob[v] = true;\n        });\n    }\n    return ob;\n};\nfunction a_to_str(ar) {\n    return ar.join(',');\n};\nfunction to_str(ob) {\n    var ar = [];\n    for (var x in ob) {\n        if (ob[x]) {\n            ar.push(x);\n        }\n    }\n    return ar.join(',');\n};\n\nmodule.exports.escapeHTML = escapeHTML;\nmodule.exports.request_vars = request_vars;\nmodule.exports.localstorage_vars = localstorage_vars;\nmodule.exports.selectText = selectText;\nmodule.exports.deselectText = deselectText;\nmodule.exports.toggleDetail = toggleDetail;\nmodule.exports.compact = compact;\nmodule.exports.from_str = from_str;\nmodule.exports.to_str = to_str;\nmodule.exports.a_to_str = a_to_str;\n\n},{}],8:[function(require,module,exports){\n\"use strict\";\n\n/* INDIVIDUAL COMPONENT: Item\n * This manages the actual records to be displayed inside the list in the middle column.\n * The subcomponents corresponds to the individual lists, such as country, countribution\n * There is an extra argument that specifies the ids of the items that should be displayed.\n * All functionality (except show) is delegated to specific functions\n */\n\nfunction Item(component) {\n    this.component = component;\n};\n\nItem.prototype = {\n    _html: function _html(vr, it) {\n        var destination = this.component._dst[vr];\n        var dest_row = destination.find(\"tr[id=\\\"r\" + it[0] + \"\\\"]\");\n        console.log(\"Finding \" + vr + \" row r\" + it[0] + \":\", dest_row);\n        var h = \"<tr iid=\\\"\" + it[0] + \"\\\">\";\n\n        if (vr == \"contrib\") {\n            var types = [];\n            it[5].forEach(function (tp) {\n                types.push(\"<a href=\\\"#\\\" tid=\\\"\" + tp[0] + \"\\\">\" + tp[1] + \"</a>\");\n            });\n            h += \"\\n<td>\\n<b>Contact person:</b> \" + it[2] + \"<br/>\\n<b>Country:</b> \" + it[3] + \" = \" + it[4] + \"<br/>\\n<b>Types:</b> \" + types.join(\", \") + \"</br>\\n</td>\\n\";\n        } else if (vr == \"country\") {\n            this.component.data[vr].forEach(function (r) {\n                in_dariah = r[3] == 1 ? \"dariah\" : \"\";\n                h += \"<tr id=\\\"r\" + r[0] + \"\\\"><td class=\\\"country_code\\\">\" + r[1] + \"<td><td class=\\\"country_name\\\">\" + r[2] + \"<td><td class=\\\"in_dariah\\\">\" + in_dariah + \"</td><td class=\\\"latlng\\\">\" + r[4] + \"</td><td class=\\\"latlng\\\">\" + r[5] + \"</td></tr>\";\n            });\n        } else if (vr == \"type\" || vr == \"tadiraha\" || vr == \"tadiraho\" || vr == \"tadiraht\") {\n            this.component.data[vr].forEach(function (r) {\n                h += \"<tr id=\\\"r\" + r[0] + \"\\\"><td class=\\\"value\\\">\" + r[1] + \"<td></tr>\";\n            });\n        }\n        h += \"</tr>\";\n        console.log(h);\n        dest_row.after(h);\n    },\n    show: function show(vr) {\n        return this.component.state.getState(\"list\") == vr;\n    },\n    weld: function weld(vr) {\n        this.component.data[vr].forEach(function (it) {\n            this._html(vr, it);\n        }, this);\n    },\n    wire: function wire(vr) {},\n    work: function work(vr) {}\n};\n\nmodule.exports = Item;\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: List\n * This manages the actual lists of records to be displayed in the middle column.\n * The subcomponents corresponds to the individual lists, such as country, countribution\n * All functionality (except show) is delegated to specific functions\n */\n\nvar g = require('./generic.js');\nfunction List(component) {\n    this.component = component;\n};\n\nList.prototype = {\n    _html: function _html(vr) {\n        var h = '';\n        h += '<table id=\"table_' + vr + '\">';\n        this.component.data[vr].forEach(function (r) {\n            var rowstart = '<tr rid=\"' + r[0] + '\"><td><a class=\"showc fa fa-fw fa-list-ul\" href=\"#\" title=\"hide fields\"></a><a class=\"hidec fa fa-fw fa-minus\" href=\"#\" title=\"show fields\"></a></td>';\n            var rowend = '</tr>';\n            if (vr == 'contrib') {\n                h += rowstart + '<td><a href=\"#\" class=\"fa fa-fw fa-minus\"></a>' + r[1] + '</td>' + rowend;\n            } else if (vr == 'country') {\n                in_dariah = r[3] == 1 ? 'dariah' : '';\n                h += rowstart + '<td class=\"country_code\">' + r[1] + '<td><td class=\"country_name\">' + r[2] + '<td><td class=\"in_dariah\">' + in_dariah + '</td><td class=\"latlng\">' + r[4] + '</td><td class=\"latlng\">' + r[5] + '</td>' + rowend;\n            } else if (vr == 'type' || vr == 'tadiraha' || vr == 'tadiraho' || vr == 'tadiraht') {\n                h += rowstart + '<td class=\"value\">' + r[1] + '<td>' + rowend;\n            }\n        });\n        h += '</table>';\n        this.component.container[vr].html(h);\n    },\n    _display: function _display(row, vr, open_ids) {\n        var that = this;\n        var hidec = row.find('.hidec');\n        var showc = row.find('.showc');\n        var rid = row.attr('rid');\n        var detail = this.component.container[vr].find('tr[iid=\"' + rid + '\"]');\n        var mode = rid in open_ids && open_ids[rid];\n        if (mode) {\n            hidec.show();\n            showc.hide();\n            if (detail.length) {\n                detail.show();\n            }\n        } else {\n            hidec.hide();\n            showc.hide();\n            if (detail.length) {\n                detail.hide();\n            }\n        }\n    },\n    _set_it: function _set_it(control, vr, state) {\n        var open_ids = g.from_str(this.state.getState(key));\n        var rid = control.closest('tr').attr('rid');\n        open_ids[rid] = state;\n        this.state.setState(key, g.to_str(open_ids));\n    },\n    show: function show(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    weld: function weld(vr) {\n        this._html(vr);\n    },\n    wire: function wire(vr) {\n        var that = this;\n        var cc = this.component.container[vr];\n        var key = this.component.name + '_' + vr;\n        cc.find('.hidec').click(function (e) {\n            e.preventDefault();\n            that._set_it($(this), vr, true);\n        });\n        cc.find('.showc').click(function (e) {\n            e.preventDefault();\n            that._set_it($(this), vr, false);\n        });\n    },\n    work: function work(vr) {\n        var that = this;\n        var key = this.component.name + '_' + vr;\n        var cc = this.component.container[vr];\n        var open_ids = g.from_str(this.component.state.getState(this.component.name + '_' + vr));\n        cc.find('tr[rid]').each(function () {\n            that._display($(this), vr, open_ids);\n        });\n    }\n};\n\nmodule.exports = List;\n\n},{\"./generic.js\":7}],10:[function(require,module,exports){\n'use strict';\n\n/* START PROCESSING\n * The dynamic construction of the page starts here\n */\n\nvar Page = require('./page.js');\n\n$(function () {\n  new Page().work();\n});\n\n},{\"./page.js\":12}],11:[function(require,module,exports){\n\"use strict\";\n\n/* MESSAGES\n * Msg is a function that issues messages to a specified element.\n * It has also controls for clearing and hiding the messages.\n */\n\nfunction Msg(destination, on_clear) {\n    this._destination = $(\"#\" + destination);\n    this._trash_control = $(\"#trash_\" + destination);\n    this._trash_control_para = this._trash_control.closest(\"p\");\n    this._trash_control.click(function (e) {\n        e.preventDefault();\n        this.clear();\n    }.bind(this));\n    this._hide();\n    this._on_clear = on_clear;\n};\n\nMsg.prototype = {\n    _hide: function _hide() {\n        this._destination.hide();\n        this._trash_control_para.hide();\n    },\n    _show: function _show() {\n        this._destination.show();\n        if (this._destination.html() != \"\") {\n            this._trash_control_para.show();\n        }\n    },\n    clear: function clear() {\n        this._destination.html(\"\");\n        if (this._on_clear != undefined) {\n            this._on_clear();\n        }\n        this._hide();\n    },\n    msg: function msg(text, kind) {\n        if (kind == undefined) {\n            kind = \"info\";\n        }\n        var message_text = this._destination.html();\n        this._destination.html(message_text + \"<p class=\\\"\" + kind + \"\\\">\" + text + \"</p>\");\n        this._show();\n    }\n};\n\nmodule.exports = Msg;\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\n/* TOP LEVEL: PAGE\n * This is the page function. \n * It creates a ViewState function, which contains the current state.\n * The state is created on the basis of request variables, and from then it\n * reflects the user actions.\n * The page specifies all components and initializes them.\n * A component is specfied by the following fields\n * - destination: left => left sidebar; right => right sidebar; middle => middle column\n * - name: a string that can be used to refer to the component later on, via method getComponent\n * - subcomponents: a list of names for which a subcomponent will be made. The html will be generated per subcomponent.\n * - fetch: boolean which says whether this component needs data from the server\n * - work first: boolean which says that child components can only be wired after work of the parent component.\n * - specific: an object that holds the specific functionality of this component.\n * The control component has work first = true, because only after choosing a list, the list control can fetch the specific list and wire itself.\n * All other components have work first = false, because it is desirable that child components start wiring as soon as possible.\n * For example: the facet component is parent of the individual facets.\n * When facet starts working, the individual controls should already be wired.\n * Because work first = false, wiring of the individual facets will be triggered after wiring of the generic facet component.\n * N.B. Individual facets can only be wired after the list component (their grandfather) has been wired.\n * This will go OK, because after wiring the list, the facet will be wired and then the individual facets.\n * The _routing dictionary specifies when the work methods of components should be triggered.\n * Its keys are the labels of components, and for every component a list of other component keys is given.\n * These are the components that will be applied (in that order) after the key component. \n * \n *  work from page: if true, this component's work method will be called directly by the page's work method;\n *   if false, the page will skip this component when working. It is assumed that this component will be applied by another component.\n *   This practice must be followed, if the application of state to a component should come after a fetch of another component.\n *   If the page would work the viewstate directly to this component, it would happen before the other's components data had been loaded.\n *   Example: a filter component F, that filters a big list fetched by another component L. L's work should call F's work.\n * After every user action, the state is changed, and a call to the Page's work() method is issued.\n * The page will issue the work call forth to all components.\n */\n\nvar g = require('./generic.js');\nvar ViewState = require('./viewstate.js');\nvar Msg = require('./message.js');\nvar Share = require('./share.js');\nvar CType = require('./ctype.js');\nvar TadirahO = require('./tadiraho.js');\nvar TadirahA = require('./tadiraha.js');\nvar TadirahT = require('./tadiraht.js');\nvar EUmap = require('./eumap.js');\nvar Filter = require('./filter.js');\nvar Facet = require('./facet.js');\nvar List = require('./list.js');\nvar Item = require('./item.js');\nvar Control = require('./control.js');\nvar Component = require('./components.js');\n\nfunction Page() {\n    // the one and only page object\n    this.name = 'page';\n    this.msg = new Msg('msg_' + this.name);\n    this.state = new ViewState(this);\n    this.stages = { weld: true, wire: true, work: false }; // true means: once only, false means: my be repeated\n    this.stages_prev = { wire: 'weld', work: 'wire' };\n    var main_lists = this.state.getValues('list');\n    var contrib_list = { contrib: 1 };\n    var empty_list = { '': 1 };\n    this._component_specs = {\n        share: { dest: 'body', variants: empty_list, fetch_url: null, specific: Share },\n        control: { dest: 'left', variants: main_lists, fetch_url: null, specific: Control },\n        list: { dest: 'middle', variants: main_lists, fetch_url: 'list', specific: List },\n        item: { dest: 'list', variants: main_lists, fetch_url: 'item', specific: Item },\n        facet: { dest: 'control', variants: main_lists, fetch_url: null, specific: Facet },\n        filter: { dest: 'facet', variants: main_lists, fetch_url: null, specific: Filter },\n        eumap: { dest: 'facet', variants: contrib_list, fetch_url: 'country', specific: EUmap },\n        ctype: { dest: 'facet', variants: contrib_list, fetch_url: 'type', specific: CType },\n        tadiraha: { dest: 'facet', variants: contrib_list, fetch_url: 'tadiraha', specific: TadirahA },\n        tadiraho: { dest: 'facet', variants: contrib_list, fetch_url: 'tadiraho', specific: TadirahO },\n        tadiraht: { dest: 'facet', variants: contrib_list, fetch_url: 'tadiraht', specific: TadirahT }\n    },\n    /* some components are being dealt with on the basis of additional identifiers, such as item\n     * Those components are specified below, and the specs of all components will get an extra attribute\n     * by_id, which is true if the component needs an id.\n     * The actual ids come from a request variable name_xxx, where name is the name of the component and xxx is the name of a list.\n     */\n    this._by_id = {\n        item: true\n    }, this._before = {\n        weld: {\n            item: { list: 1 },\n            facet: { control: 1, list: 1 },\n            filter: { facet: 1 },\n            eumap: { facet: 1, filter: 1 },\n            ctype: { facet: 1, eumap: 1 },\n            tadiraha: { facet: 1, ctype: 1 },\n            tadiraho: { facet: 1, tadiraha: 1 },\n            tadiraht: { facet: 1, tadiraho: 1 },\n            share: { facet: 1, list: 1 }\n        },\n        wire: {\n            item: { list: 1 },\n            facet: { filter: 1, eumap: 1, ctype: 1, tadiraha: 1, tadiraho: 1, tadiraht: 1 },\n            filter: { list: 1 },\n            eumap: { list: 1 },\n            ctype: { list: 1 },\n            tadiraha: { list: 1 },\n            tadiraho: { list: 1 },\n            tadiraht: { list: 1 }\n        },\n        work: {\n            facet: { filter: 1, eumap: 1, ctype: 1, tadiraha: 1, tadiraho: 1, tadiraht: 1 }\n        }\n    };\n    this._ignore = {\n        //tadiraht: 1,\n        //tadiraho: 1,\n        //eumap: 1,\n        //filter: 1,\n    }, this.components = {};\n    for (var name in this._component_specs) {\n        if (name in this._ignore) {\n            continue;\n        }\n        this._component_specs[name].by_id = name in this._by_id && this._by_id[name];\n        var component = new Component(name, this._component_specs[name], this);\n        component.children = {};\n        this.components[name] = component;\n    }\n    for (var name in this.components) {\n        var child_component = this.components[name];\n        var dest_name = this._component_specs[name].dest;\n        if (dest_name in this.components) {\n            var parent_component = this.components[dest_name];\n            parent_component.children[name] = child_component;\n        }\n    }\n    this._resolveTiming();\n    this._setHeight(80);\n    History.Adapter.bind(window, 'statechange', this.state.work());\n};\n\nPage.prototype = {\n    _setHeight: function _setHeight(subtract) {\n        // the heights of the sidebars are set, depending on the height of the window\n        var wh = window.innerHeight - subtract + 'px';\n        for (var w in { 'middle': 1, 'left': 1, 'right': 1 }) {\n            $('#' + w).css('height', wh);\n        }\n    },\n    _resolveTiming: function _resolveTiming() {\n        /* the time constraints must form a directed acyclic graph.\n         * If that is the case, we need a linear order in which we can make the promises\n         * This function will calculate that order (of course, several orders are possible)\n         * Algorithm:\n         *\n         * A: make a graph of all tasks, a task is the combination of a component with a stage.\n         *\n         * B: compute sets of nodes that have a longest predecessor path of fixed length n\n         *\n         * 1. determine all tasks without predecessors, this is S0                                                (max length of predecessor chain = 0)\n         * 2. determine all tasks with all predecessors in S0, this is S1                                             (max length of predecessor chain = 1)\n         * 3. determine all tasks with: all predecessors in S0 or S1, at least one predecessor in S1, this is S2  (max length of predecessor chain = 2)\n         * ...\n         * n+1. determine all tasks with: all predecessors in S0, S1, ..., Sn, at least ione predecessor in Sn\n         *\n         * C: \n         * Prove theorem 1: Sn = {all nodes with longest chain of predecessors has length n}.\n         * Prove theorem 2: all nodes outside union of all Sn: they are part of a cycle.\n         *\n         * D: \n         * The required order is: first the nodes of S0 (in any order), then those of S1, then those of S2, and so on.\n         */\n        var timing_nodes = [];\n        var timing_edges = {}; // keys are nodes that must come before other nodes\n        var timing_edges_inv = {}; // keys are nodes that must come after other nodes\n        // A: collect the nodes: pairs of component name and stage\n        for (var name in this.components) {\n            for (var stage in this.stages) {\n                timing_nodes.push(name + '-' + stage);\n            }\n        }\n        // collect the edges (we need to store every edge both ways)\n        function addEdge(prev_node, next_node) {\n            if (!(prev_node in timing_edges)) {\n                timing_edges[prev_node] = {};\n            }\n            if (!(next_node in timing_edges_inv)) {\n                timing_edges_inv[next_node] = {};\n            }\n            timing_edges[prev_node][next_node] = true;\n            timing_edges_inv[next_node][prev_node] = true;\n        }\n        // 1. per component, the stages are ordered\n        for (var next_stage in this.stages_prev) {\n            var prev_stage = this.stages_prev[next_stage];\n            for (var name in this.components) {\n                addEdge(name + '-' + prev_stage, name + '-' + next_stage);\n            }\n        }\n        // 2. add the specific constraints from this._before\n        for (var stage in this._before) {\n            for (var next_name in this._before[stage]) {\n                if (next_name in this._ignore) {\n                    continue;\n                }\n                for (var prev_name in this._before[stage][next_name]) {\n                    if (prev_name in this._ignore) {\n                        continue;\n                    }\n                    addEdge(prev_name + '-' + stage, next_name + '-' + stage);\n                }\n            }\n        }\n        // B: compute the Sn (in subset)\n        var n = 0;\n        var subset = [];\n        var visited = {}; // collect all nodes that end up in an Sn\n        while (n <= timing_nodes.length) {\n            subset.push({});\n            if (n == 0) {\n                // first round\n                timing_nodes.forEach(function (node) {\n                    // select all nodes without prev_nodes\n                    if (!(node in timing_edges_inv)) {\n                        subset[n][node] = 1; // and store them in subset[0]            \n                    }\n                });\n            } else {\n                    for (var prev_node in visited) {\n                        // start with prev_nodes in visited\n                        if (prev_node in timing_edges) {\n                            // and consider their next_nodes\n                            for (var next_node in timing_edges[prev_node]) {\n                                if (!(next_node in visited)) {\n                                    // but only if the next_node is not yet visited\n                                    var good = true;\n                                    for (var other_prev_node in timing_edges_inv[next_node]) {\n                                        // consider the other prev nodes of the next nodes\n                                        if (!(other_prev_node in visited)) {\n                                            // and require that they have been visited already\n                                            good = false;\n                                            break;\n                                        }\n                                    }\n                                    if (good) {\n                                        subset[n][next_node] = 1; // if all is well, we add next_node to subset[n]\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            if (!Object.keys(subset[n]).length) {\n                // if there are no new nodes, the next rounds will also not yield new nodes,\n                break; //  so we are done\n            }\n            for (var node in subset[n]) {\n                // after each round we add the saved next_nodes to the visited nodes\n                visited[node] = 1;\n            }\n            n++;\n        }\n        this._tasks = [];\n        this._timing = {};\n        if (Object.keys(visited).length != timing_nodes.length) {\n            var cycle = [];\n            timing_nodes.forEach(function (node) {\n                if (!(node in visited)) {\n                    cycle.push(node);\n                }\n            });\n            console.log('Circular timing constraints detected', cycle);\n        } else {\n            subset.forEach(function (nodes, n) {\n                for (var node in nodes) {\n                    this._tasks.push(node);\n                }\n            }, this);\n            this._timing = timing_edges_inv;\n            console.log('Timing resolved', this._tasks);\n        }\n    },\n\n    getComponent: function getComponent(name) {\n        return this.components[name];\n    },\n    getContainer: function getContainer(name, variants) {\n        var container = {};\n        if (name in this.components) {\n            container = this.components[name].container;\n        } else {\n            var addto = name == 'body' ? $('body') : $('#' + name);\n            for (var vr in variants) {\n                container[vr] = addto;\n            }\n        }\n        return container;\n    },\n    getBefore: function getBefore(name, stage) {\n        var prev_nodes = [];\n        var next_node = name + '-' + stage;\n        for (var prev_node in this._timing[next_node] || {}) {\n            prev_nodes.push(prev_node.split('-'));\n        }\n        return prev_nodes;\n    },\n    work: function work() {\n        this._tasks.forEach(function (task) {\n            var task_comps = task.split('-');\n            var name = task_comps[0];\n            var stage = task_comps[1];\n            var component = this.getComponent(name);\n            for (var vr in component.variants) {\n                component[stage](vr);\n            }\n        }, this);\n    }\n};\n\nmodule.exports = Page;\n\n},{\"./components.js\":1,\"./control.js\":2,\"./ctype.js\":3,\"./eumap.js\":4,\"./facet.js\":5,\"./filter.js\":6,\"./generic.js\":7,\"./item.js\":8,\"./list.js\":9,\"./message.js\":11,\"./share.js\":14,\"./tadiraha.js\":15,\"./tadiraho.js\":16,\"./tadiraht.js\":17,\"./viewstate.js\":18}],13:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: generic facet based on related values\n * CType, Tadiraho and EUmap inherit from this.\n */\n\nvar g = require('./generic.js');\n\nfunction Relative(component, rtype, cols, cutoff, shortsize) {\n    this.component = component;\n    this.distilled = {};\n    this._list = {};\n    this._list2 = {};\n    this._related_state = {};\n    this._all_values_control = {};\n    this._statistics = {};\n    this._related_values_list = {};\n    this._related_values_index = {};\n    this._related_values_on = {};\n    this._related_values_off = {};\n    this._no_values = { value: '-', name: '-none' };\n    this._type = rtype;\n    this._cols = cols || 2;\n    this._cutoff = cutoff || 14;\n    this._shortsize = shortsize || 6;\n};\n\nRelative.prototype = {\n    _html: function _html(vr) {\n        var type_sg = this.component.state.showState('list', this._type, 'sg');\n        var type_pl = this.component.state.showState('list', this._type, 'pl');\n        var h = '';\n        h += this._preHtml(vr);\n        h += '\\n<div>\\n    <p class=\"dctrl\"><span fct=\"' + this.component.name + '-' + vr + '\"></span> By ' + type_sg + '</p>\\n    <p class=\"all\"><span rv=\"_all\" class=\"stats\"></span> <a rv=\"_all\" href=\"#\" class=\"facet_single_all\">all ' + type_pl + '</a></p>\\n    <table class=\"value_list\" id=\"list-' + this._type + '-vals_' + vr + '\">\\n        <tr>\\n';\n        this._related_values_list[vr].forEach(function (related_value, i, ar) {\n            if (i % this._cols == 0 && i > 0 && i < ar.length) {\n                h += '</tr><tr>';\n            }\n            var raw_value = this._related_values_index[vr][related_value];\n            h += '\\n            <td><span rv=\"' + related_value + '\" class=\"stats\"></span></td>\\n            <td><a rv=\"' + related_value + '\" href=\"#\" class=\"facet_single\">' + g.escapeHTML(raw_value) + '</a></td>\\n            ';\n        }, this);\n        h += '\\n        </tr>\\n    </table>\\n    <p class=\"value_list2\" id=\"list2-' + this._type + '-vals_' + vr + '\">\\n';\n        this._related_values_list[vr].forEach(function (related_value, i, ar) {\n            var raw_value = this._related_values_index[vr][related_value];\n            var compact_value = g.escapeHTML(g.compact(this._cutoff, this._shortsize, raw_value));\n            h += '<a href=\"#\" rv=\"' + related_value + '\" class=\"passive_small\" title=\"' + g.escapeHTML(raw_value) + '\">' + compact_value + '</a> ';\n        }, this);\n        h += '\\n    </p>\\n</div>';\n        this.component.container[vr].html(h);\n    },\n    _dressup: function _dressup(vr) {\n        var cc = this.component.container[vr];\n        this._list[vr] = cc.find('#list-' + this._type + '-vals_' + vr);\n        this._list2[vr] = cc.find('#list2-' + this._type + '-vals_' + vr);\n        var that = this;\n        this._list[vr].find('.facet_single').click(function (e) {\n            e.preventDefault();\n            var related_value = $(this).attr('rv');\n            var selected = that._from_str(vr, that.component.state.getState('rel_' + that._type + '_' + vr));\n            selected[related_value] = related_value in selected ? !selected[related_value] : true;\n            that.component.state.setState('rel_' + that._type + '_' + vr, g.to_str(selected));\n            cc.find('.last_handled').removeClass('last_handled');\n            $(this).addClass('last_handled');\n        });\n        this._list2[vr].find('.passive_small').click(function (e) {\n            e.preventDefault();\n            var related_value = $(this).attr('rv');\n            var selected = that._from_str(vr, that.component.state.getState('rel_' + that._type + '_' + vr));\n            selected[related_value] = related_value in selected ? !selected[related_value] : true;\n            that.component.state.setState('rel_' + that._type + '_' + vr, g.to_str(selected));\n            $(this).closest('div').find('.morec').click();\n            var last_handled = that._list[vr].find('a[rv=\"' + related_value + '\"]');\n            cc.find('.last_handled').removeClass('last_handled');\n            last_handled.addClass('last_handled');\n            $('#left')[0].scrollTop = 50;\n            last_handled[0].scrollIntoView({\n                behavior: 'smooth',\n                alignToTop: 'true'\n            });\n        });\n        this._all_values_control[vr] = this.component.container[vr].find('[rv=\"_all\"]');\n        this._all_values_control[vr].click(function (e) {\n            e.preventDefault();\n            var ison = $(this).hasClass('ison');\n            if (ison) {\n                that.component.state.setState('rel_' + that._type + '_' + vr, g.to_str(that._related_values_off[vr]));\n            } else {\n                that.component.state.setState('rel_' + that._type + '_' + vr, g.to_str(that._related_values_on[vr]));\n            }\n        });\n    },\n    _setFacet: function _setFacet(vr, related_values) {\n        var all_selected = true;\n        for (var related_value in this._related_values_index[vr]) {\n            var facet_cell = this._list[vr].find('[rv=\"' + related_value + '\"]');\n            var facet_cell2 = this._list2[vr].find('[rv=\"' + related_value + '\"]');\n            if (related_value in related_values && related_values[related_value]) {\n                facet_cell.addClass('ison');\n                facet_cell2.addClass('ison');\n            } else {\n                facet_cell.removeClass('ison');\n                facet_cell2.removeClass('ison');\n                all_selected = false;\n            }\n        }\n        if (all_selected) {\n            this._all_values_control[vr].addClass('ison');\n        } else {\n            this._all_values_control[vr].removeClass('ison');\n        }\n    },\n    _from_str: function _from_str(vr, st) {\n        var ob = {};\n        if (st !== null && st != undefined && st != '') {\n            var ar = st.split(',');\n            ar.forEach(function (v) {\n                ob[v] = true;\n            });\n        }\n        for (var related_value in this._related_values_index[vr]) {\n            if (!(related_value in ob)) {\n                ob[related_value] = false;\n            }\n        }\n        return ob;\n    },\n    stats: function stats(vr) {\n        this._statistics[vr] = {};\n        for (var related_value in this._related_values_index[vr]) {\n            this._statistics[vr][related_value] = 0;\n        }\n        var related_data = this.component.data[vr];\n        for (var x in this.distilled[vr]) {\n            var i = this.distilled[vr][x];\n            var has_related_value = false;\n            for (var related_value in related_data[i]) {\n                this._statistics[vr][related_value] += 1;\n                has_related_value = true;\n            }\n            if (!has_related_value) {\n                this._statistics[vr][this._no_values.value] += 1;\n            }\n        }\n        for (var related_value in this._statistics[vr]) {\n            this.component.container[vr].find('span[rv=\"' + related_value + '\"].stats').html(this._statistics[vr][related_value]);\n        }\n        this.component.container[vr].find('span[rv=\"_all\"].stats').html(this.distilled[vr].length);\n        this._myStats(vr);\n    },\n    v: function v(vr, i) {\n        var related_data = this.component.data[vr];\n        var related_state = this._from_str(vr, this._related_state[vr]);\n        if (i in related_data && Object.keys(related_data[i]).length != 0) {\n            for (var related_value in related_data[i]) {\n                if (related_value in related_state && related_state[related_value]) {\n                    return true;\n                }\n            }\n        } else {\n            if (this._no_values.value in related_state && related_state[this._no_values.value]) {\n                return true;\n            }\n        }\n        return false;\n    },\n    show: function show(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    weld: function weld(vr) {\n        this._related_values_list[vr] = [];\n        this._related_values_index[vr] = {};\n        this._related_values_off[vr] = {};\n        this._related_values_on[vr] = {};\n        this._plainWeld(vr);\n        this._myWeld(vr);\n        this._related_values_list[vr].push(this._no_values.value);\n        this._related_values_index[vr][this._no_values.value] = this._no_values.name;\n        this._related_values_off[vr][this._no_values.value] = false;\n        this._related_values_on[vr][this._no_values.value] = true;\n        this._html(vr);\n    },\n    wire: function wire(vr) {\n        this._myDressup(vr);\n        this._dressup(vr);\n    },\n    work: function work(vr) {\n        this._related_state[vr] = this.component.state.getState('rel_' + this._type + '_' + vr);\n        var related_values = this._from_str(vr, this._related_state[vr]);\n        this._mySetFacet(vr, related_values);\n        this._setFacet(vr, related_values);\n    },\n    _plainWeld: function _plainWeld(vr) {\n        var related_values = this.component.related_values[vr];\n        for (var i in related_values) {\n            var related_value = related_values[i];\n            this._related_values_off[vr][i] = false;\n            this._related_values_on[vr][i] = true;\n            this._related_values_list[vr].push(i);\n            this._related_values_index[vr][i] = related_value;\n        }\n        this._related_values_list[vr].sort(function (a, b) {\n            return related_values[a] < related_values[b] ? -1 : related_values[a] > related_values[b] ? 1 : 0;\n        });\n    },\n    _myWeld: function _myWeld(vr) {},\n    _preHtml: function _preHtml(vr) {\n        return '';\n    },\n    _myDressup: function _myDressup(vr) {},\n    _mySetFacet: function _mySetFacet(vr) {},\n    _myStats: function _myStats(vr) {}\n};\n\nmodule.exports = Relative;\n\n},{\"./generic.js\":7}],14:[function(require,module,exports){\n'use strict';\n\nvar g = require('./generic.js');\n\nfunction Share(component) {\n    // the SHARE component\n    this.component = component;\n};\n\nShare.prototype = {\n    show: function show(vr) {\n        return true;\n    },\n    weld: function weld(vr) {\n        var h = '\\n<p id=\"•citeh\">Cite</p>\\n<table align=\"center\">\\n    <tr>\\n        <td class=\"•clip_pv clr\">\\n            <a lnk=\"\" href=\"#\" id=\"•clip_pv_md\" title=\"link to page content and appearance (markdown)\" class=\"ctrl fa fa-level-down fa-lg fa-fw\"></a>\\n            <a lnk=\"\" href=\"#\" id=\"•clip_pv_ht\" title=\"link to page content and appearance (html)\" class=\"ctrl fa fa-external-link-square fa-lg fa-fw\"></a>\\n            <a lnk=\"\" href=\"#\" id=\"•clip_pv_htc\" title=\"link to page content (html)\" class=\"ctrl fa fa-external-link fa-lg fa-fw\"></a>\\n            <a lnk=\"\" href=\"#\" id=\"•clip_pv_cn\" title=\"copy page content\" class=\"ctrl fa fa-file-text-o fa-lg fa-fw\"></a>\\n        </td>\\n    </tr>\\n    <tr>\\n        <th class=\"•clip_pv\" width=\"60px\">page view</th>\\n    </tr>\\n    <tr class=\"•citexpl\">\\n        <td class=\"•clip_pv\"><span id=\"•xc_pv\" class=\"ctrl fa fa-chevron-right fa-fw\"></span><span id=\"•x_pv\" class=\"•detail\">share link to this page with or without view settings.</span></td>\\n    </tr>\\n</table>\\n<p id=\"•cdiagpub\"></p>\\n<p id=\"•cdiagsts\"></p>\\n';\n        this.component.container[vr].html(h);\n    },\n    wire: function wire(vr) {\n        var that = this;\n        var cc = this.component.container[vr];\n        var slink = $('#self_link');\n        slink.hide();\n        cc.addClass('•socialdrawer');\n        cc.find('.•detail').hide();\n        cc.find('#•clip_pv_md,#•clip_pv_ht,#•clip_pv_htc,#•clip_pv_nl').click(function (e) {\n            e.preventDefault();\n            window.prompt('Press <Cmd-C> and then <Enter> to copy link on clipboard', $(this).attr('lnk'));\n        });\n        cc.find('#•clip_pv_cn').click(function (e) {\n            e.preventDefault();\n            var containerid = 'middle';\n            var app_url_raw = app_url_cite + that.component.state.getVars(true);\n            slink.show();\n            slink.attr('href', app_url_raw);\n            g.selectText(containerid);\n        });\n        cc.find('#•xc_pv').click(function (e) {\n            e.preventDefault();g.toggleDetail($(this), $('#•x_pv'));\n        });\n        cc.click(function (e) {\n            e.preventDefault();\n            var app_url_raw = app_url_cite + that.component.state.getVars(true);\n            var app_url_rawc = app_url_cite + that.component.state.getVars(false);\n            $('#•citeh').hide();\n            $('#•cdiagpub').html('');\n            $('#•cdiagsts').html('');\n            $('.•clip_pv.clr,#•cdiagpub,#•cdiagsts').removeClass('error warning good special');\n            var pvtitle = g.escapeHTML($('title').text());\n            $('#•clip_pv_md').attr('lnk', '[' + pvtitle + '](' + app_url_raw + ')');\n            $('#•clip_pv_ht').attr('lnk', app_url_raw);\n            $('#•clip_pv_htc').attr('lnk', app_url_rawc);\n            $('#•clip_pv_cn').attr('lnk', app_url_raw);\n            $('#•clip_pv_cn').attr('tit', pvtitle);\n            $(this).animate({ height: '100px', width: '200px', opacity: 0.95 }, 300);\n        });\n        cc.mouseleave(function () {\n            slink.hide();\n            //g.deselectText();\n            $('#•citeh').show();\n            cc.animate({ height: '20px', width: '40px', opacity: .7 }, 300);\n            return false;\n        });\n    },\n    work: function work(vr) {}\n};\n\nmodule.exports = Share;\n\n},{\"./generic.js\":7}],15:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: ctype\n * This manages the facet \"contribution type\"\n */\n\nvar Relative = require('./relative.js');\n\nfunction TadirahA(component) {\n  Relative.call(this, component, 'tadiraha');\n};\n\nTadirahA.prototype = Object.create(Relative.prototype);\nTadirahA.prototype.constructor = TadirahA;\n\nmodule.exports = TadirahA;\n\n},{\"./relative.js\":13}],16:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: ctype\n * This manages the facet \"contribution type\"\n */\n\nvar Relative = require('./relative.js');\n\nfunction TadirahO(component) {\n  Relative.call(this, component, 'tadiraho');\n};\n\nTadirahO.prototype = Object.create(Relative.prototype);\nTadirahO.prototype.constructor = TadirahO;\n\nmodule.exports = TadirahO;\n\n},{\"./relative.js\":13}],17:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: ctype\n * This manages the facet \"contribution type\"\n */\n\nvar Relative = require('./relative.js');\n\nfunction TadirahT(component) {\n  Relative.call(this, component, 'tadiraht', 1, 30);\n};\n\nTadirahT.prototype = Object.create(Relative.prototype);\nTadirahT.prototype.constructor = TadirahT;\n\nmodule.exports = TadirahT;\n\n},{\"./relative.js\":13}],18:[function(require,module,exports){\n'use strict';\n\n/* VIEW STATE\n * Contains the current state, based on request variables and local storage.\n * Request variables have precedence over local storage.\n * Request variables are checked and validated and translated, translated values go to local storage.\n * There is a list of recognized request variables, with their types and allowable values.\n */\n\nvar g = require('./generic.js');\n\nfunction ViewState(page) {\n    this._data = {};\n    this.page = page;\n    this.msg = page.msg;\n    this._getInitstate();\n    this._addHistory();\n};\n\nViewState.prototype = {\n    _specs: {\n        list: { url: true, type: 'string', values: { contrib: 1, country: 1, type: 1, tadiraha: 1, tadiraho: 1, tadiraht: 1 }, default_value: 'contrib' },\n        flt_contrib: { url: false, type: 'string', values: null, default_value: '' },\n        flt_country: { url: false, type: 'string', values: null, default_value: '' },\n        flt_type: { url: false, type: 'string', values: null, default_value: '' },\n        flt_tadiraha: { url: false, type: 'string', values: null, default_value: '' },\n        flt_tadiraho: { url: false, type: 'string', values: null, default_value: '' },\n        flt_tadiraht: { url: false, type: 'string', values: null, default_value: '' },\n        rel_country_contrib: { url: false, type: 'string', values: null, default_value: '' },\n        rel_type_contrib: { url: false, type: 'string', values: null, default_value: '' },\n        rel_tadiraha_contrib: { url: false, type: 'string', values: null, default_value: '' },\n        rel_tadiraho_contrib: { url: false, type: 'string', values: null, default_value: '' },\n        rel_tadiraht_contrib: { url: false, type: 'string', values: null, default_value: '' },\n        item_contrib: { url: true, type: 'string', values: null, default_value: '' },\n        item_country: { url: true, type: 'string', values: null, default_value: '' },\n        sort: { url: false, type: 'boolean', values: { v: true, x: false }, default_value: true }\n    },\n    _showas: {\n        list: {\n            contrib: { sg: 'contribution', pl: 'contributions' },\n            country: { sg: 'country', pl: 'countries' },\n            type: { sg: 'type', pl: 'types' },\n            tadiraha: { sg: 'tadirah activity', pl: 'tadirah activities' },\n            tadiraho: { sg: 'tadirah object', pl: 'tadirah objects' },\n            tadiraht: { sg: 'tadirah technique', pl: 'tadirah techniques' }\n        }\n    },\n    _validate: function _validate(name, val) {\n        var newval, message;\n        if (name in this._specs) {\n            var spec = this._specs[name];\n            if (spec.type == 'string') {\n                if (spec.values) {\n                    if (val in spec.values) {\n                        newval = val;\n                    } else {\n                        newval = spec.default_value;\n                        this.msg.msg('illegal string value for ' + name + ': \"' + val + '\" is replaced by \"' + spec.default_value + '\"', 'warning');\n                    }\n                } else {\n                    newval = val;\n                }\n            } else if (spec.type == 'integer') {\n                if (/^(\\-|\\+)?[0-9]+$/.test(val)) {\n                    newval = Number(val);\n                } else {\n                    newval = spec.default_value;\n                    this.msg.msg('not a number value for ' + name + ': \"' + val + '\" is replaced by \"' + spec.default_value + '\"', 'warning');\n                }\n                if (newval < spec.limits.min) {\n                    this.msg.msg('number to small for ' + name + ': \"' + newval + '\" is replaced by \"' + spec.limits.min + '\"', 'warning');\n                }\n                if (newval > spec.limits.max) {\n                    this.msg.msg('number to big for ' + name + ': \"' + newval + '\" is replaced by \"' + spec.limits.max + '\"', 'warning');\n                }\n            } else if (spec.type == 'boolean') {\n                if (val in spec.values) {\n                    newval = spec.values[val];\n                } else {\n                    newval = spec.default_value;\n                    this.msg.msg('illegal boolean value for ' + name + ': \"' + val + '\" is replaced by \"' + spec.default_value + '\"', 'warning');\n                }\n            }\n        } else {\n            newval = null;\n            this.msg.msg('unknown parameter: ' + name + '=' + val, 'warning');\n        }\n        return newval;\n    },\n    getVars: function getVars(comprehensive) {\n        var vars = [];\n        for (var name in this._data) {\n            var val = this._data[name];\n            var spec = this._specs[name];\n            if (comprehensive || spec.url) {\n                if (spec.type == 'string' || spec.type == 'integer') {\n                    vars.push(name + '=' + val);\n                } else if (spec.type == 'boolean') {\n                    for (var valid_val in spec.values) {\n                        if (spec.values[valid_val] == val) {\n                            vars.push(name + '=' + valid_val);\n                        }\n                    }\n                }\n            }\n        }\n        return vars.join('&');\n    },\n    _getInitstate: function _getInitstate() {\n        for (var name in g.request_vars) {\n            if (!(name in this._specs)) {\n                this.msg.msg('unknown parameter: ' + name + '=' + val, 'warning');\n            }\n        }\n        for (var name in this._specs) {\n            var val = null;\n            if (name in g.request_vars) {\n                var raw_val = g.request_vars[name];\n                val = this._validate(name, raw_val);\n                g.localstorage_vars.set(name, val);\n            } else if (g.localstorage_vars.isSet(name)) {\n                val = g.localstorage_vars.get(name);\n            } else {\n                val = this._specs[name].default_value;\n                g.localstorage_vars.set(name, val);\n            }\n            this._data[name] = val;\n        }\n    },\n    _addHistory: function _addHistory(title, view_url) {\n        var tit = 'DARIAH contribution tool';\n        var this_url = app_url + '?' + this.getVars(false);\n        History.pushState(this._data, tit, this_url);\n    },\n    setState: function setState(name, val) {\n        this._data[name] = val;\n        g.localstorage_vars.set(name, val);\n        this._addHistory();\n    },\n    getState: function getState(name) {\n        return this._data[name];\n    },\n    getValues: function getValues(name) {\n        return this._specs[name].values;\n    },\n    showState: function showState(name, val, mode) {\n        var result = val;\n        var md = mode == undefined ? 'sg' : mode;\n        if (this._showas[name] != undefined && this._showas[name][val] != undefined) {\n            result = this._showas[name][val][mode];\n        }\n        return result;\n    },\n    work: function work() {\n        return function () {\n            var state = History.getState();\n            if (state && state.data) {\n                this._data = state.data;\n                this.page.work();\n            }\n        }.bind(this);\n    }\n};\n\nmodule.exports = ViewState;\n\n},{\"./generic.js\":7}]},{},[10])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"sourceRoot":"/source/"}