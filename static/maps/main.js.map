{"version":3,"sources":["main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Component","name","specs","page","this","variants","_stage","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","vr","value","set","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","stages","keys","st","get","err","_msg","_ids_fetched","Set","container","dst","state","data","related_info","related_values","implementation","specific","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","push","Array","isArray","Object","TypeError","g","Msg","prototype","need","stage","promise","_deed","method","methodCall","bind","timing","getBefore","promises","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_step3$value","prev_name","prev_stage","prev_component","getComponent","hasVariant","$","when","apply","then","ensure","has","once","by_id","_visibility","on","widget","show","hide","_fetch","ids_to_fetch","fetch_url","url_tpl","replace","msg","postFetch","_postFetch","join","ajax","type","url","contentType","dataType","json","clear","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","msgs","m","good","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","relinfo","x","relvals","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","add","weld","_weld","getContainer","dest","_destination","prepend","destination","append","ids_asked_for","from_str","getState","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_wire","wire","_work","work","./generic.js","./message.js","2","Control","component","_widget","_control","_html","html","showState","_dressup","_this","click","preventDefault","setState","_isActive","addClass","find","removeClass","3","CType","Relative","create","constructor","./relative.js","4","EUmap","_map_object","_map_container","_marker","_setvalues","_not_mapped","_preHtml","_myDressup","cc","mapc","height","width","vectorMap","map","backgroundColor","regionsSelectable","markersSelectable","regionsSelectableOne","markersSelectableOne","markerStyle","initial","fill","fill-opacity","stroke","stroke-width","stroke-opacity","hover","cursor","selected","selectedHover","regionStyle","markers","series","values","scale","normalizeFunction","attribute","min","max","regions","outdariah","indariah","onRegionTipShow","el","related_value","rvs","_statistics","onMarkerTipShow","onRegionClick","_related_values_index","onMarkerClick","onRegionSelected","change_state","_type","a_to_str","_unmapped_selected","onMarkerSelected","zoom_p","css","zoom_control","setFocus","result","this_state","empty","_mySetFacet","map_regions","map_markers","_related_state","_step2$value","_no_values","mapo","setSelectedRegions","setSelectedMarkers","_myStats","total","distilled","weighted_statistics","stat","pr","Math","sqrt","setValues","_plainWeld","_myWeld","marker","setv","_step4$value","_related_values_all","_related_values_list","latLng","sort","b","5","Facet","_stats","_enabled_facets","table","h","children","_step$value","facet_name","facet_component","_display","expand_control","mode","that","dt","closest","hidec","morec","showc","expanded_material","condensed_material","not_expanded_material","key","attr","mode_undef","localstorage_vars","isSet","all_facets","each","lc","info","detailcontrols","mother_list","facets","facet_comp","facet","d","v","the_false","discard","_step5$value","_facet2","this_v","_step6$value","_facet","_facet3","stats","6","Filter","_tags","_filter_control","_filter_control2","_box","_completions_dst","_stats_dst","_clear_filter_control","_wire_mode","_distilled","_setFilter","textf","filterc","val","autocomplete","_response","event","ui","dstl","content","_setClear","stat_prefix","statd","tgs","label","cf","flt","flt2","appendTo","source","response","minLength","focus","clearfc","7","_toConsumableArray","arr2","from","escapeHTML","text","chr","deselectText","document","selection","window","getSelection","removeAllRanges","selectText","containerid","range","body","createTextRange","moveToElementText","getElementById","select","_range","createRange","selectNode","addRange","toggleDetail","detail","extra","thedetail","toggle","thiscl","othercl","hasClass","compact","cutoff","size","substr","split","ar","to_str","_Request","parameter","parameters","uri","location","search","indexOf","slice","paramval","request_vars","_localstorage","initNamespaceStorage","localStorage","8","Item","it","dest_row","types","tp","in_dariah","_r","after","9","List","rowstart","rowend","row","open_ids","rid","_set_it","control","10","Page","./page.js","11","on_clear","_trash_control","_trash_control_para","_hide","_on_clear","_show","kind","message_text","12","ViewState","main_lists","getValues","contrib_list","empty_list","_component_specs","Share","TadirahA","TadirahO","TadirahT","_by_id","stages_prev","_before","_ignore","components","spec","child_component","dest_name","parent_component","_resolveTiming","_setHeight","History","Adapter","subtract","wh","innerHeight","w","addEdge","prev_node","next_node","timing_edges","timing_edges_inv","timing_nodes","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","next_stage","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_name","nexts","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_step17$value","next_name","prevs","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","subset","visited","node","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","other_prev_node","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_node","_tasks","_timing","cycle","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_node2","console","log","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","nodes","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_node3","addto","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","prev_nodes","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","task","_task$split","_task$split2","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","./components.js","./control.js","./ctype.js","./eumap.js","./facet.js","./filter.js","./item.js","./list.js","./share.js","./tadiraha.js","./tadiraho.js","./tadiraht.js","./viewstate.js","13","rtype","cols","shortsize","_list","_list2","_all_values_control","_cols","_cutoff","_shortsize","type_sg","type_pl","entries","raw_value","_raw_value","compact_value","last_handled","scrollTop","scrollIntoView","behavior","alignToTop","ison","_setFacet","all_selected","facet_cell","facet_cell2","has_related_value","_related_value","nv","_related_value2","related_state","_step9$value","14","slink","prompt","app_url_raw","app_url_cite","getVars","app_url_rawc","pvtitle","animate","opacity","mouseleave","15","16","17","18","_data","_specs","_compile_specs","_getInitstate","_addHistory","_spec_info","vars","vals","default_value","typ","showas","sg","pl","_validate","newval","test","Number","limits","comprehensive","valid_val","trans_val","raw_val","title","view_url","tit","this_url","app_url","pushState"],"mappings":"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","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/* COMPONENTS \n * The Page function specifies and builds a list of components\n * Every component on the page corresponds to a function (with a prototype)\n * This function is stored in a generic Component function in a field called specific.\n * Every component has a list of subcomponents. For example, the 'list' component has a subcomponent 'contrib'\n * for the list of contributions, and a subcomponent 'country' for the list of countries.\n * The generic functions of a component take care of:\n * - generating HTML container divs for the subcomponents under specified destination elements if they does not already exist\n * - showing and hiding the subcomponents, and in general, work the current state data to the subcomponents \n * - fetching the subcomponent's data from the server, if needed\n * This *specific* functionality of the components are defined in separate files.\n * Of this specific functionality, the following will be called from the generic component function:\n * - show(vr): inspect the current state and determine whether the subcomponent should be shown or hidden\n * - wire(vr): after the data has been fetched, wrap the data into the desired HTML content of the subcomponent\n *   and add the wiring (click events, change events)\n * In turn, the specific functions can access their associated generic components by this.component\n */\n\n/* GENERIC COMPONENT\n * Here is the generic functionality of each component\n */\n\nvar g = require('./generic.js');\nvar Msg = require('./message.js');\n\nfunction Component(name, specs, page) {\n    this.name = name;\n    this.page = page;\n    this.specs = specs;\n    this.variants = specs.variants;\n    this._stage = new Map();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = this.variants[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var vr = _step.value;\n\n            this._stage.set(vr, new Map());\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this.page.stages.keys()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var st = _step2.value;\n\n                    this._stage.get(vr).set(st, true);\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    this._msg = new Map();\n    this._ids_fetched = new Set();\n    this.container = new Map();\n    this.dst = new Map();\n    this.state = this.page.state;\n    this.data = new Map();\n    this.related_info = new Map();\n    this.related_values = new Map();\n    this.implementation = new specs.specific(this);\n};\n\nComponent.prototype = {\n    /* need, deed, ensure are wrappers around the promise mechanism.\n     * The stage is a stage in processing the component, such as fetch, wire, work.\n     * There should be a method method which does the work and which is expected to return a promise.\n     * If it does not, we detect it, and yield a promise that is resolved with the original return value.\n     * ensure takes care that the function of an action is promised to be execute once, by registering it\n     * as a promise for that stage.\n     * If there is already a fulfilled or pending promise for that action at that stage, no new promise will be made.\n     * Ensure returns a function with no arguments. If it is called, the promise will be made.\n     * So the result of ensure can be put inside the .then() of an other promise.\n     * Now is a function that calls a function and returns the result as promise.\n     */\n    need: function need(vr, stage) {\n        // check whether there is a promise and whether it has been fulfilled\n        var promise = this._stage.get(vr).get(stage);\n        return !promise.state || promise.state() == 'rejected';\n    },\n    _deed: function _deed(vr, stage, method) {\n        // register a promise to perform the method associated with stage by entering it in the book keeping of stages\n        /* we want to pass a method call to a .then() later on.\n         * If we pass it straight, like this.method, .then() will call this function and supplies its own promise object as the this.\n         * That is not our purpose: we want to call the method with the current component object as the this.\n         * Hence we use bind() in order to supply the right this.\n         * Whoever calls this new function methodCall, will perform a true method call of method method on object that.\n         * This is crucial, otherwise all the careful time logic gets mangled, because the promises are stored in the component object.\n         */\n        var methodCall = this[method].bind(this, vr);\n        var timing = this.page.getBefore(this.name, stage);\n        var promises = [];\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n            for (var _iterator3 = timing[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var _step3$value = _slicedToArray(_step3.value, 2);\n\n                var prev_name = _step3$value[0];\n                var prev_stage = _step3$value[1];\n\n                var prev_component = this.page.getComponent(prev_name);\n                if (prev_component.hasVariant(vr)) {\n                    promises.push(prev_component._stage.get(vr).get(prev_stage));\n                }\n            }\n        } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                }\n            } finally {\n                if (_didIteratorError3) {\n                    throw _iteratorError3;\n                }\n            }\n        }\n\n        this._stage.get(vr).set(stage, $.when.apply($, promises).then(methodCall));\n    },\n    ensure: function ensure(vr, stage, method) {\n        /* function to promise that method fun will be executed once and once only or multiple times,\n         * but only if the before actions have been completed\n         */\n        if (this.page.stages.has(stage)) {\n            /* if the component works per id, the once setting of the stage is ignored\n             * because we have to look whether we should execute that stage for new identifiers\n             */\n            var once = this.page.stages.get(stage) && !this.specs.by_id;\n            if (!once || this.need(vr, stage)) {\n                this._deed(vr, stage, method);\n            }\n        }\n    },\n    /* here are the implementations of the functions that are to be wrapped as promises\n     * They can focus on the work, may or may not yield a promise\n     */\n    hasVariant: function hasVariant(vr) {\n        return this.variants.has(vr);\n    },\n    _visibility: function _visibility(vr, on) {\n        if (this.hasVariant(vr)) {\n            if (this.container.has(vr)) {\n                var widget = this.container.get(vr);\n                if (on) {\n                    widget.show();\n                } else {\n                    widget.hide();\n                }\n            }\n        }\n    },\n    _fetch: function _fetch(vr, ids_to_fetch) {\n        // get the material by AJAX if needed\n        var fetch_url = url_tpl.replace(/_c_/, 'data').replace(/_f_/, this.specs.fetch_url + '_' + vr) + '.json';\n        this._msg.get(vr).msg('fetching data ...');\n        var postFetch = this._postFetch.bind(this, vr);\n        if (!(ids_to_fetch == undefined)) {\n            fetch_url += '?ids=' + ids_to_fetch.join(',');\n        }\n        return $.ajax({\n            type: 'POST',\n            url: fetch_url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json'\n        }).then(function (json) {\n            postFetch(json, ids_to_fetch);\n        });\n    },\n    _postFetch: function _postFetch(vr, json, ids_to_fetch) {\n        // receive material after AJAX call\n        this._msg.get(vr).clear();\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n            for (var _iterator4 = json.msgs[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var m = _step4.value;\n\n                this._msg.get(vr).msg(m);\n            }\n        } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                }\n            } finally {\n                if (_didIteratorError4) {\n                    throw _iteratorError4;\n                }\n            }\n        }\n\n        if (json.good) {\n            if ('data' in json) {\n                this.data.set(vr, json.data);\n            }\n            if ('relinfo' in json) {\n                var r = new Map();\n                var _iteratorNormalCompletion5 = true;\n                var _didIteratorError5 = false;\n                var _iteratorError5 = undefined;\n\n                try {\n                    for (var _iterator5 = json.relinfo[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                        var x = _step5.value;\n\n                        r.set(x[0], new Set(x[1]));\n                    }\n                } catch (err) {\n                    _didIteratorError5 = true;\n                    _iteratorError5 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                            _iterator5.return();\n                        }\n                    } finally {\n                        if (_didIteratorError5) {\n                            throw _iteratorError5;\n                        }\n                    }\n                }\n\n                this.related_info.set(vr, r);\n            }\n            if ('relvals' in json) {\n                this.related_values.set(vr, new Map(json.relvals));\n            }\n            if (this.specs.by_id) {\n                var _iteratorNormalCompletion6 = true;\n                var _didIteratorError6 = false;\n                var _iteratorError6 = undefined;\n\n                try {\n                    for (var _iterator6 = ids_to_fetch[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                        var i = _step6.value;\n\n                        this._ids_fetched.add(i);\n                    }\n                } catch (err) {\n                    _didIteratorError6 = true;\n                    _iteratorError6 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                            _iterator6.return();\n                        }\n                    } finally {\n                        if (_didIteratorError6) {\n                            throw _iteratorError6;\n                        }\n                    }\n                }\n            }\n        }\n        this.implementation.weld(vr);\n    },\n    _weld: function _weld(vr) {\n        this.dst = this.page.getContainer(this.specs.dest, this.variants);\n        if (!this.specs.by_id) {\n            this.container.set(vr, $('#' + this.name + '_' + vr));\n            if (this.container.get(vr).length == 0) {\n                var destination = this.dst.get(vr);\n                destination.append('<div id=\"msg_' + this.name + '_' + vr + '\"></div>');\n                destination.append('<div id=\"' + this.name + '_' + vr + '\" class=\"component\"></div>');\n                this.container.set(vr, $('#' + this.name + '_' + vr));\n            }\n            this._msg.set(vr, new Msg('msg_' + this.name + '_' + vr));\n        } else {\n            if (!this._msg.has(vr)) {\n                var _destination = this.dst.get(vr);\n                _destination.prepend('<div id=\"msg_' + this.name + '_' + vr + '\"></div>');\n                this._msg.set(vr, new Msg('msg_' + this.name + '_' + vr));\n            }\n        }\n        if (this.specs.fetch_url != null) {\n            var ids_to_fetch = [];\n            if (this.specs.by_id) {\n                var ids_asked_for = g.from_str(this.state.getState(this.specs.fetch_url + '_' + vr));\n                var _iteratorNormalCompletion7 = true;\n                var _didIteratorError7 = false;\n                var _iteratorError7 = undefined;\n\n                try {\n                    for (var _iterator7 = ids_asked_for[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                        var i = _step7.value;\n\n                        if (!this._ids_fetched.has(i)) {\n                            ids_to_fetch.push(i);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError7 = true;\n                    _iteratorError7 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                            _iterator7.return();\n                        }\n                    } finally {\n                        if (_didIteratorError7) {\n                            throw _iteratorError7;\n                        }\n                    }\n                }\n\n                if (ids_to_fetch.length != 0) {\n                    return this._fetch(vr, ids_to_fetch);\n                }\n            } else {\n                return this._fetch(vr);\n            }\n        } else {\n            this.implementation.weld(vr);\n        }\n    },\n    _wire: function _wire(vr) {\n        this.implementation.wire(vr); // perform wire actions that are specific to this component\n    },\n    _work: function _work(vr) {\n        this._visibility(vr, true);\n        this.implementation.work(vr); // perform work actions that are specific to this component\n    },\n    weld: function weld(vr) {\n        if (this.hasVariant(vr) && this.implementation.show(vr)) {\n            this.ensure(vr, 'weld', '_weld');\n        }\n    },\n    wire: function wire(vr) {\n        if (this.hasVariant(vr) && this.implementation.show(vr)) {\n            this.ensure(vr, 'wire', '_wire');\n        }\n    },\n    work: function work(vr) {\n        // work (changed) state to current material\n        if (this.hasVariant(vr) && this.implementation.show(vr)) {\n            // show/hide depending on the specific condition\n            this.ensure(vr, 'work', '_work');\n        } else {\n            this._visibility(vr, false);\n        }\n    }\n};\n\nmodule.exports = Component;\n\n},{\"./generic.js\":7,\"./message.js\":11}],2:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: Control\n * This manages the controls that correspond to lists of records to be displayed in the middle column\n * Clicking on a control shows the corresponding list and hides all others.\n */\n\nfunction Control(component) {\n    this.component = component;\n    this._widget = new Map();\n    this._control = new Map();\n};\n\nControl.prototype = {\n    _html: function _html(vr) {\n        this.component.container.get(vr).html('<a class=\"control_title\" href=\"#\">' + this.component.state.showState('list', vr, 'sg') + '</a> ');\n    },\n    _dressup: function _dressup(vr) {\n        var _this = this;\n\n        this._control.get(vr).click(function (e) {\n            e.preventDefault();\n            _this.component.state.setState('list', vr);\n        });\n    },\n    _isActive: function _isActive(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    show: function show(vr) {\n        return true;\n    },\n    weld: function weld(vr) {\n        this._html(vr);\n        this._widget.set(vr, this.component.container.get(vr));\n        this._widget.get(vr).addClass('control_big');\n        this._control.set(vr, this.component.container.get(vr).find('a'));\n    },\n    wire: function wire(vr) {\n        this._dressup(vr);\n    },\n    work: function work(vr) {\n        if (this._isActive(vr)) {\n            this._control.get(vr).addClass('ison');\n            this._widget.get(vr).addClass('ison');\n        } else {\n            this._control.get(vr).removeClass('ison');\n            this._widget.get(vr).removeClass('ison');\n        }\n    }\n};\n\nmodule.exports = Control;\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: ctype\n * This manages the facet \"contribution type\"\n */\n\nvar Relative = require('./relative.js');\n\nfunction CType(component) {\n  Relative.call(this, component, 'type');\n};\n\nCType.prototype = Object.create(Relative.prototype);\nCType.prototype.constructor = CType;\n\nmodule.exports = CType;\n\n},{\"./relative.js\":13}],4:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/* INDIVIDUAL COMPONENT: EUmap\n * This manages a clickable map of the EU countries\n * See http://jvectormap.com/documentation/javascript-api/jvm-map/\n */\n\nvar g = require('./generic.js');\nvar Relative = require('./relative.js');\n\nfunction EUmap(component) {\n    Relative.call(this, component, 'country');\n    this._map_object = new Map();\n    this._map_container = new Map();\n    this._marker = new Map();\n    this._setvalues = new Map();\n    this._not_mapped = new Set(['-', 'CY', 'KS', 'TR', 'MC', 'GE']);\n};\n\nEUmap.prototype = Object.create(Relative.prototype);\nEUmap.prototype.constructor = EUmap;\nEUmap.prototype._preHtml = function (vr) {\n    return '<div id=\"map-europe_' + vr + '\" class=\"position\"><p class=\"zoom\"><a class=\"fa fa-arrows\" href=\"#\" title=\"zoom to fit all countries\"/></p></div>';\n};\nEUmap.prototype._myDressup = function (vr) {\n    var _this = this;\n\n    var that = this;\n    var cc = this.component.container.get(vr);\n    this._map_container.set(vr, cc.find('#map-europe_' + vr));\n    var mapc = this._map_container.get(vr);\n    var height = mapc.width() * 0.6;\n    mapc.width('100%');\n    mapc.height(height);\n    mapc.vectorMap({\n        'map': 'europe_mill',\n        backgroundColor: '#ccccff',\n        regionsSelectable: true,\n        markersSelectable: true,\n        regionsSelectableOne: false,\n        markersSelectableOne: false,\n        markerStyle: {\n            initial: {\n                fill: '#008800',\n                'fill-opacity': 0.2,\n                stroke: 'none',\n                'stroke-width': 0,\n                'stroke-opacity': 0.2,\n                'r': 1\n            },\n            hover: {\n                cursor: 'pointer',\n                stroke: '#ffff44',\n                'stroke-width': 1,\n                'stroke-opacity': 1\n            },\n            selected: {\n                fill: '#008800',\n                'fill-opacity': 1\n            },\n            selectedHover: {}\n        },\n        regionStyle: {\n            initial: {\n                fill: '#bbbbbb',\n                'fill-opacity': 1,\n                stroke: 'none',\n                'stroke-width': 0,\n                'stroke-opacity': 1\n            },\n            hover: {\n                cursor: 'pointer',\n                stroke: '#ffff44',\n                'stroke-width': 3,\n                'stroke-opacity': 1\n            },\n            selected: {\n                fill: '#dd8844',\n                'fill-opacity': 1\n            },\n            selectedHover: {}\n        },\n        markers: this._marker.get(vr),\n        series: {\n            markers: [{\n                values: {},\n                scale: [0, 20],\n                normalizeFunction: 'linear',\n                attribute: 'r',\n                min: 0,\n                max: 100\n            }],\n            regions: [{\n                scale: {\n                    'outdariah': '#ffffff',\n                    'indariah': '#ffddbb'\n                },\n                attribute: 'fill',\n                values: this._setvalues.get(vr)\n            }]\n        },\n        onRegionTipShow: function (e, el, related_value) {\n            var rvs = this._statistics.get(vr);\n            el.html(related_value + ': ' + (rvs.has(related_value) ? rvs.get(related_value) : 'not in DARIAH'));\n        }.bind(this),\n        onMarkerTipShow: function (e, el, related_value) {\n            var rvs = this._statistics.get(vr);\n            el.html(related_value + ': ' + (rvs.has(related_value) ? rvs.get(related_value) : 'not in DARIAH'));\n        }.bind(this),\n        onRegionClick: function (e, related_value) {\n            if (!this._related_values_index.get(vr).has(related_value)) {\n                e.preventDefault();\n            }\n        }.bind(this),\n        onMarkerClick: function (e, related_value) {\n            if (!this._related_values_index.get(vr).has(related_value)) {\n                e.preventDefault();\n            }\n        }.bind(this),\n        onRegionSelected: function (e, related_value, i, selected) {\n            if (this.change_state) {\n                this.component.state.setState('rel_' + this._type + '_' + vr, g.a_to_str(selected) + this._unmapped_selected(vr));\n            }\n        }.bind(this),\n        onMarkerSelected: function (e, related_value, i, selected) {\n            if (this.change_state) {\n                this.component.state.setState('rel_' + this._type + '_' + vr, g.a_to_str(selected) + this._unmapped_selected(vr));\n            }\n        }.bind(this)\n    });\n    var zoom_p = cc.find('p.zoom');\n    zoom_p.css('top', height - 20 + 'px');\n    zoom_p.css('left', '10px');\n    var zoom_control = cc.find('p.zoom a');\n    zoom_control.click(function (e) {\n        e.preventDefault();\n        _this._map_object.get(vr).setFocus({ regions: ['GB', 'GR'] });\n    });\n    this._map_object.set(vr, mapc.vectorMap('get', 'mapObject'));\n    this._map_object.get(vr).setFocus({ regions: ['GB', 'GR'] });\n};\nEUmap.prototype._unmapped_selected = function (vr) {\n    var result = [];\n    var this_state = g.from_str(vr, this.component.state.getState('rel_' + this._type + '_' + vr));\n    var empty = true;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = this._not_mapped[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var related_value = _step.value;\n\n            if (this_state.has(related_value)) {\n                result.push(related_value);\n                empty = false;\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return empty ? '' : ',' + result.join(',');\n};\nEUmap.prototype._mySetFacet = function (vr) {\n    this.change_state = false;\n    /* some countries are not on the map, we do show those countries in the list but not on the map.\n     * Same for -, the key that denotes ALL countries\n     */\n    var map_regions = {};\n    var map_markers = {};\n    var related_values = this._related_state.get(vr);\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n        for (var _iterator2 = this.component.related_values.get(vr)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _step2$value = _slicedToArray(_step2.value, 2);\n\n            var i = _step2$value[0];\n            var related_value = _step2$value[1];\n\n            if (!this._not_mapped.has(i) && i != this._no_values.value) {\n                map_regions[i] = related_values.has(i);\n                if (related_value[1]) {\n                    map_markers[i] = related_values.has(i);\n                }\n            }\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally {\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n\n    var mapo = this._map_object.get(vr);\n    mapo.setSelectedRegions(map_regions);\n    mapo.setSelectedMarkers(map_markers);\n    this.change_state = true;\n};\nEUmap.prototype._myStats = function (vr) {\n    var total = this.distilled.get(vr).length;\n    if (total == 0) {\n        total = 1;\n    }\n    var weighted_statistics = {};\n    var rvs = this._statistics.get(vr);\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n        for (var _iterator3 = rvs[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var _step3$value = _slicedToArray(_step3.value, 2);\n\n            var related_value = _step3$value[0];\n            var stat = _step3$value[1];\n\n            if (related_value != this._no_values.value) {\n                var pr = 100 * stat / total;\n                weighted_statistics[related_value] = total < 10 ? pr : 10 * Math.sqrt(pr);\n            }\n        }\n    } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n            }\n        } finally {\n            if (_didIteratorError3) {\n                throw _iteratorError3;\n            }\n        }\n    }\n\n    this._map_object.get(vr).series.markers[0].setValues(weighted_statistics);\n};\nEUmap.prototype._plainWeld = function (vr) {};\nEUmap.prototype._myWeld = function (vr) {\n    this._marker.set(vr, {});\n    this._setvalues.set(vr, {});\n    var related_values = this.component.related_values.get(vr);\n    var marker = this._marker.get(vr);\n    var setv = this._setvalues.get(vr);\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n        for (var _iterator4 = related_values[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var _step4$value = _slicedToArray(_step4.value, 2);\n\n            var i = _step4$value[0];\n            var related_value = _step4$value[1];\n\n            if (related_value[1]) {\n                this._related_values_all.get(vr).add(i);\n                this._related_values_list.get(vr).push(i);\n                this._related_values_index.get(vr).set(i, related_value[0]);\n                marker[i] = { latLng: [related_value[2], related_value[3]], name: related_value[0] };\n                setv[i] = 'indariah';\n            } else {\n                setv[i] = 'outdariah';\n            }\n        }\n    } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                _iterator4.return();\n            }\n        } finally {\n            if (_didIteratorError4) {\n                throw _iteratorError4;\n            }\n        }\n    }\n\n    this._related_values_list.get(vr).sort(function (a, b) {\n        return related_values.get(a) < related_values.get(b) ? -1 : related_values.get(a)[0] > related_values.get(b)[0] ? 1 : 0;\n    });\n};\n\nmodule.exports = EUmap;\n\n},{\"./generic.js\":7,\"./relative.js\":13}],5:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/* INDIVIDUAL COMPONENT: Facets\n * This sets up a list of facets for the lists of records to be displayed in the middle column\n * It will host individual facets\n */\n\nvar g = require('./generic.js');\n\nfunction Facet(component) {\n    this.component = component;\n    this._stats = new Map();\n    this._enabled_facets = new Map();\n    this.table = new Map();\n    this.distilled = new Map();\n};\n\nFacet.prototype = {\n    _html: function _html(vr) {\n        var h = '<p><span fct=\"all\"></span>Filtering <span id=\"fstats_' + vr + '\"></span></p>';\n        this.component.container.get(vr).html(h);\n    },\n    show: function show(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    weld: function weld(vr) {\n        var children = this.component.children;\n        this._enabled_facets.set(vr, new Map());\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var _step$value = _slicedToArray(_step.value, 2);\n\n                var facet_name = _step$value[0];\n                var facet_component = _step$value[1];\n\n                if (facet_component.hasVariant(vr)) {\n                    this._enabled_facets.get(vr).set(facet_name, facet_component);\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        this._html(vr);\n    },\n    _display: function _display(expand_control, mode) {\n        var that = this;\n        var dt = expand_control.closest('p');\n        var hidec = dt.find('.hidec');\n        var morec = dt.find('.morec');\n        var showc = dt.find('.showc');\n        var expanded_material = expand_control.closest('div').find('table,.flt');\n        var condensed_material = expand_control.closest('div').find('.value_list2,.flt_compact');\n        var not_expanded_material = expand_control.closest('div').find('.flt_not_expanded');\n        var key = 'fctx_' + expand_control.closest('span').attr('fct');\n        var mode_undef = mode == undefined;\n        if (mode_undef) {\n            if (g.localstorage_vars.isSet(key)) {\n                mode = g.localstorage_vars.get(key);\n            } else {\n                mode = 1;\n            }\n        }\n        var all_facets = key == 'fctx_all';\n        if (all_facets && !mode_undef) {\n            expand_control.closest('div').find('div.component span[fct]').each(function () {\n                that._display($(this), mode);\n            });\n        }\n        g.localstorage_vars.set(key, mode);\n        if (mode == 0) {\n            hidec.show();\n            morec.hide();\n            showc.hide();\n            if (!all_facets) {\n                not_expanded_material.show();\n                expanded_material.hide();\n                condensed_material.hide();\n            }\n        } else if (mode == 1) {\n            hidec.hide();\n            morec.show();\n            showc.hide();\n            if (!all_facets) {\n                not_expanded_material.show();\n                expanded_material.hide();\n                condensed_material.show();\n            }\n        } else {\n            hidec.hide();\n            morec.hide();\n            showc.show();\n            if (!all_facets) {\n                not_expanded_material.hide();\n                expanded_material.show();\n                condensed_material.hide();\n            }\n        }\n    },\n    wire: function wire(vr) {\n        var that = this;\n        var cc = this.component.container.get(vr);\n        var lc = this.component.page.getComponent('list').container.get(vr);\n        this._stats.set(vr, cc.find('#fstats_' + vr));\n        this.table.set(vr, lc.find('#table_' + vr));\n        var info = ' details; click to change level of details';\n        var detailcontrols = '<a class=\"showc fa fa-fw fa-list-ul\" href=\"#\" title=\"full' + info + '\"></a><a class=\"morec fa fa-fw fa-align-left\" href=\"#\" title=\"condensed' + info + '\"></a><a class=\"hidec fa fa-fw fa-minus\" href=\"#\" title=\"hidden' + info + '\"></a>';\n        cc.addClass('facet');\n        cc.find('span[fct]').each(function () {\n            $(this).html(detailcontrols + '&nbsp');\n            that._display($(this));\n        });\n        cc.find('.hidec').click(function (e) {\n            e.preventDefault();\n            that._display($(this), 1);\n        });\n        cc.find('.morec').click(function (e) {\n            e.preventDefault();\n            that._display($(this), 2);\n        });\n        cc.find('.showc').click(function (e) {\n            e.preventDefault();\n            that._display($(this), 0);\n        });\n    },\n    work: function work(vr) {\n        this.table.get(vr).find('tr[rid],tr[iid]').hide();\n        var mother_list = this.component.page.getComponent('list');\n        var data = mother_list.data.get(vr);\n        var facets = this._enabled_facets.get(vr);\n        this.distilled.set(vr, []);\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n            for (var _iterator2 = facets[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var _step2$value = _slicedToArray(_step2.value, 2);\n\n                var facet_name = _step2$value[0];\n                var facet_comp = _step2$value[1];\n\n                var facet = facet_comp.implementation;\n                facet.distilled.set(vr, []);\n            }\n        } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                    _iterator2.return();\n                }\n            } finally {\n                if (_didIteratorError2) {\n                    throw _iteratorError2;\n                }\n            }\n        }\n\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n            for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var d = _step3.value;\n\n                var v = true; // will hold whether this row passes all facets\n                /* We collect in the distilled member of this facet object the collective results of all individual facets,\n                 * Moreover, for each facet, we collect in its distilled member the results when all facets are applied except the facet in question\n                 * so: \n                 * 1. rows with a failure for 2 or more facets are discarded\n                 * 2. rows with a failure for exactly one facet are added to the data for that facet\n                 * 3. rows which pass all facets are added to all facets, and also to the final filtered set\n                 */\n                var the_false = null; // which facet has yielded false (if there are more than one we'll discard the row\n                var discard = false; // becomes true when we have encounterd 2 facets that yield false\n                var _iteratorNormalCompletion5 = true;\n                var _didIteratorError5 = false;\n                var _iteratorError5 = undefined;\n\n                try {\n                    for (var _iterator5 = facets[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                        var _step5$value = _slicedToArray(_step5.value, 2);\n\n                        var facet_name = _step5$value[0];\n                        var facet_comp = _step5$value[1];\n\n                        if (!discard) {\n                            var _facet2 = facet_comp.implementation;\n                            var this_v = _facet2.v(vr, d[0]); // this_v: whether the row passes this facet\n                            if (!this_v) {\n                                v = false;\n                                if (the_false == null) {\n                                    // this is the first failure, we store the facet number in the_false\n                                    the_false = _facet2;\n                                } // else we discard the row altogether\n                                else {\n                                        discard = true;\n                                    }\n                            }\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError5 = true;\n                    _iteratorError5 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                            _iterator5.return();\n                        }\n                    } finally {\n                        if (_didIteratorError5) {\n                            throw _iteratorError5;\n                        }\n                    }\n                }\n\n                if (!discard) {\n                    if (v) {\n                        this.distilled.get(vr).push(d[0]);\n                        this.table.get(vr).find('tr[rid=\"' + d[0] + '\"],tr[iid=\"' + d[0] + '\"]').show();\n                    }\n                    if (the_false != null) {\n                        the_false.distilled.get(vr).push(d[0]);\n                    } else {\n                        var _iteratorNormalCompletion6 = true;\n                        var _didIteratorError6 = false;\n                        var _iteratorError6 = undefined;\n\n                        try {\n                            for (var _iterator6 = facets[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                                var _step6$value = _slicedToArray(_step6.value, 2);\n\n                                var facet_name = _step6$value[0];\n                                var facet_comp = _step6$value[1];\n\n                                var _facet = facet_comp.implementation;\n                                _facet.distilled.get(vr).push(d[0]);\n                            }\n                        } catch (err) {\n                            _didIteratorError6 = true;\n                            _iteratorError6 = err;\n                        } finally {\n                            try {\n                                if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                                    _iterator6.return();\n                                }\n                            } finally {\n                                if (_didIteratorError6) {\n                                    throw _iteratorError6;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                }\n            } finally {\n                if (_didIteratorError3) {\n                    throw _iteratorError3;\n                }\n            }\n        }\n\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n            for (var _iterator4 = facets[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var _step4$value = _slicedToArray(_step4.value, 2);\n\n                var facet_name = _step4$value[0];\n                var facet_comp = _step4$value[1];\n\n                var _facet3 = facet_comp.implementation;\n                _facet3.stats(vr);\n            }\n        } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                }\n            } finally {\n                if (_didIteratorError4) {\n                    throw _iteratorError4;\n                }\n            }\n        }\n\n        this._stats.get(vr).html(this.distilled.get(vr).length + ' of ' + data.length);\n    }\n};\n\nmodule.exports = Facet;\n\n},{\"./generic.js\":7}],6:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: Filters\n * This is a list of filter controls corresponding to lists of records to be displayed in the middle column\n * Setting a filter control filters the associated list.\n */\n\nfunction Filter(component) {\n    this.component = component;\n    this._tags = new Map();\n    this._filter_control = new Map();\n    this._filter_control2 = new Map();\n    this._box = new Map();\n    this._completions_dst = new Map();\n    this._stats_dst = new Map();\n    this._clear_filter_control = new Map();\n    this._wire_mode = new Map();\n    this._distilled = new Map();\n    this.distilled = new Map();\n};\n\nFilter.prototype = {\n    _html: function _html(vr) {\n        var h = '\\n<div>\\n    <p class=\"dctrl\"><span fct=\"' + this.component.name + '-' + vr + '\"></span> By full text search\\n        <a href=\"#\" title=\"modify full text filter\" id=\"flt2_' + vr + '\" class=\"flt_not_expanded facet_single ison flt_pat\"></a>\\n        <a href=\"#\" class=\"control_med fa fa-close filtc\" id=\"clearf_' + vr + '\"></a>\\n    </p>\\n    <div id=\"fltw_' + vr + '\">\\n        <p id=\"fbox_' + vr + '\" class=\"flt control_med fbox ui-widget\">\\n            <input id=\"flt_' + vr + '\" class=\"flt flt_pat\"/>\\n            <span fbox class=\"stats\" id=\"stats_' + vr + '\"></span>\\n        </p>\\n        <div id=\"autoc_' + vr + '\" style=\"display: none;\">here ' + vr + '</div>\\n    </div>\\n</div>';\n        this.component.container.get(vr).html(h);\n    },\n    _setFilter: function _setFilter(vr) {\n        var textf = this.component.state.getState('flt_' + vr);\n        var filterc = this._filter_control.get(vr);\n        this._filter_control2.get(vr).html(textf);\n        filterc.val(textf);\n        filterc.autocomplete('search', textf);\n    },\n    _response: function _response(vr) {\n        return function (event, ui) {\n            this._distilled.set(vr, {});\n            var dstl = this._distilled.get(vr);\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = ui.content[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var u = _step.value;\n\n                    dstl[u.value] = 1;\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            if (!this._wire_mode.get(vr)) {\n                var textf = this._filter_control.get(vr).val();\n                this.component.state.setState('flt_' + vr, textf);\n            }\n        }.bind(this);\n    },\n    _setClear: function _setClear(vr) {\n        var _this = this;\n\n        this._clear_filter_control.get(vr).click(function (e) {\n            e.preventDefault();\n            var filterc = _this._filter_control.get(vr);\n            filterc.val('');\n            filterc.autocomplete('search', '');\n        });\n    },\n    stats: function stats(vr) {\n        var stat_prefix = void 0;\n        var statd = this._stats_dst.get(vr);\n        if (this._filter_control.get(vr).val() == '') {\n            stat_prefix = '';\n            statd.removeClass('ison');\n        } else {\n            stat_prefix = this.facet.distilled.get(vr).length + ' of ';\n            statd.addClass('ison');\n        }\n        statd.html('' + stat_prefix + this.distilled.get(vr).length);\n    },\n    v: function v(vr, i) {\n        return i in this._distilled.get(vr);\n    },\n    show: function show(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    weld: function weld(vr) {\n        this._html(vr);\n    },\n    wire: function wire(vr) {\n        if (!this.facet) {\n            this.facet = this.component.page.getComponent('facet').implementation;\n        }\n        var data = this.component.page.getComponent('list').data.get(vr);\n        this._tags.set(vr, []);\n        var tgs = this._tags.get(vr);\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n            for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var d = _step2.value;\n\n                tgs.push({ label: d[1], value: '' + d[0] });\n            }\n        } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                    _iterator2.return();\n                }\n            } finally {\n                if (_didIteratorError2) {\n                    throw _iteratorError2;\n                }\n            }\n        }\n\n        this._distilled.set(vr, {});\n        this.distilled.set(vr, []);\n        var cc = this.component.container.get(vr);\n        var cf = cc.find('#fltw_' + vr);\n        var flt = $('#flt_' + vr);\n        this._filter_control.set(vr, flt);\n        var flt2 = $('#flt2_' + vr);\n        this._filter_control2.set(vr, flt2);\n        this._box.set(vr, cf.find('#fbox_' + vr));\n        this._completions_dst.set(vr, cf.find('#autoc_' + vr));\n        this._stats_dst.set(vr, cf.find('#stats_' + vr));\n        this._clear_filter_control.set(vr, cc.find('#clearf_' + vr));\n        this._filter_control.get(vr).autocomplete({\n            appendTo: this._completions_dst.get(vr),\n            source: this._tags.get(vr),\n            response: this._response(vr),\n            minLength: 0\n        });\n        flt2.click(function (e) {\n            e.preventDefault();\n            $(this).closest('div').find('.morec').click();\n            flt[0].focus();\n        });\n        this._wire_mode.set(vr, true);\n        this._setClear(vr);\n        this._setFilter(vr);\n        this._wire_mode.set(vr, false);\n    },\n    work: function work(vr) {\n        var textf = this.component.state.getState('flt_' + vr);\n        var clearfc = this._clear_filter_control.get(vr);\n        if (textf == '') {\n            this._box.get(vr).removeClass('ison');\n            clearfc.hide();\n        } else {\n            this._box.get(vr).addClass('ison');\n            clearfc.show();\n        }\n        this._filter_control2.get(vr).html(textf);\n    }\n};\n\nmodule.exports = Filter;\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/* GENERIC\n * Some function for very generic purposes\n */\n\nvar chr = new Map([['&', '&amp;'], ['<', '&lt;'], ['>', '&gt;']]);\n\nfunction escapeHTML(text) {\n    return text.replace(/[&<>]/g, function (a) {\n        return chr.get(a) || a;\n    });\n};\n\nvar _Request = {\n    parameter: function parameter(name) {\n        return this.parameters().get(name);\n    },\n    parameters: function parameters() {\n        var result = new Map();\n        var uri = window.location.search;\n        if (uri.indexOf(\"?\") === -1) {\n            return result;\n        }\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = uri.slice(1).split(\"&\")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var paramval = _step.value;\n\n                result.set.apply(result, _toConsumableArray(paramval.split(\"=\")));\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        return result;\n    }\n};\n\nvar request_vars = _Request.parameters();\nvar _localstorage = $.initNamespaceStorage('req');\nvar localstorage_vars = _localstorage.localStorage;\n\nfunction deselectText() {\n    if (document.selection) {\n        document.selection.empty();\n    } else if (window.getSelection) {\n        window.getSelection().removeAllRanges();\n    }\n};\n\nfunction selectText(containerid) {\n    deselectText();\n    if (document.selection) {\n        var range = document.body.createTextRange();\n        range.moveToElementText(document.getElementById(containerid));\n        range.select();\n    } else if (window.getSelection) {\n        var _range = document.createRange();\n        _range.selectNode(document.getElementById(containerid));\n        window.getSelection().addRange(_range);\n    }\n};\n\nfunction toggleDetail(widget, detail, extra) {\n    var thedetail = detail == undefined ? widget.closest('div').find('.detail') : detail;\n    thedetail.toggle();\n    if (extra != undefined) {\n        extra(widget);\n    }\n    var thiscl = void 0,\n        othercl = void 0;\n    if (widget.hasClass('fa-chevron-right')) {\n        thiscl = 'fa-chevron-right';\n        othercl = 'fa-chevron-down';\n    } else {\n        thiscl = 'fa-chevron-down';\n        othercl = 'fa-chevron-right';\n    }\n    widget.removeClass(thiscl);\n    widget.addClass(othercl);\n};\n\nfunction compact(cutoff, size, text) {\n    return text.length > cutoff ? text.replace(/[^ -]+/g, function (x) {\n        return x.substr(0, size);\n    }) : text;\n};\n\nfunction from_str(st) {\n    return st !== null && st != undefined && st != '' ? new Set(st.split(',')) : new Set();\n};\nfunction a_to_str(ar) {\n    return ar.join(',');\n};\nfunction to_str(set) {\n    return Array.from(set).join(',');\n};\n\nmodule.exports.escapeHTML = escapeHTML;\nmodule.exports.request_vars = request_vars;\nmodule.exports.localstorage_vars = localstorage_vars;\nmodule.exports.selectText = selectText;\nmodule.exports.deselectText = deselectText;\nmodule.exports.toggleDetail = toggleDetail;\nmodule.exports.compact = compact;\nmodule.exports.from_str = from_str;\nmodule.exports.to_str = to_str;\nmodule.exports.a_to_str = a_to_str;\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: Item\n * This manages the actual records to be displayed inside the list in the middle column.\n * The subcomponents corresponds to the individual lists, such as country, countribution\n * There is an extra argument that specifies the ids of the items that should be displayed.\n * All functionality (except show) is delegated to specific functions\n */\n\nfunction Item(component) {\n    this.component = component;\n};\n\nItem.prototype = {\n    _html: function _html(vr, it) {\n        var destination = this.component.dst.get(vr);\n        var dest_row = destination.find('tr[rid=\"' + it[0] + '\"]');\n        var h = '<tr iid=\"' + it[0] + '\">';\n\n        if (vr == 'contrib') {\n            var types = [];\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = it[5][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var tp = _step.value;\n\n                    types.push('<a href=\"#\" tid=\"' + tp[0] + '\">' + tp[1] + '</a>');\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            h += '\\n<td colspan=\"2\">\\n<b>Contact person:</b> ' + it[2] + '<br/>\\n<b>Country:</b> ' + it[3] + ' = ' + it[4] + '<br/>\\n<b>Types:</b> ' + types.join(', ') + '</br>\\n</td>\\n';\n        } else if (vr == 'country') {\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this.component.data.get(vr)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var r = _step2.value;\n\n                    in_dariah = r[3] == 1 ? 'dariah' : '';\n                    h += '<td class=\"country_code\">' + r[1] + '<td><td class=\"country_name\">' + r[2] + '<td><td class=\"in_dariah\">' + in_dariah + '</td><td class=\"latlng\">' + r[4] + '</td><td class=\"latlng\">' + r[5] + '</td>';\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        } else if (vr == 'type' || vr == 'tadiraha' || vr == 'tadiraho' || vr == 'tadiraht') {\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = this.component.data.get(vr)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var _r = _step3.value;\n\n                    h += '<td class=\"value\">' + _r[1] + '<td>';\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n        }\n        h += '</tr>';\n        dest_row.after(h);\n    },\n    show: function show(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    weld: function weld(vr) {\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n            for (var _iterator4 = this.component.data.get(vr)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var it = _step4.value;\n\n                this._html(vr, it);\n            }\n        } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                }\n            } finally {\n                if (_didIteratorError4) {\n                    throw _iteratorError4;\n                }\n            }\n        }\n    },\n    wire: function wire(vr) {},\n    work: function work(vr) {}\n};\n\nmodule.exports = Item;\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: List\n * This manages the actual lists of records to be displayed in the middle column.\n * The subcomponents corresponds to the individual lists, such as country, countribution\n * All functionality (except show) is delegated to specific functions\n */\n\nvar g = require('./generic.js');\n\nfunction List(component) {\n    this.component = component;\n};\n\nList.prototype = {\n    _html: function _html(vr) {\n        var h = '';\n        h += '<table id=\"table_' + vr + '\">';\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = this.component.data.get(vr)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var r = _step.value;\n\n                var rowstart = '<tr rid=\"' + r[0] + '\"><td><a class=\"showc fa fa-fw fa-list-ul\" href=\"#\" title=\"hide fields\"></a><a class=\"hidec fa fa-fw fa-minus\" href=\"#\" title=\"show fields\"></a></td>';\n                var rowend = '</tr>';\n                if (vr == 'contrib') {\n                    h += rowstart + '<td><a href=\"#\" class=\"fa fa-fw fa-minus\"></a>' + r[1] + '</td>' + rowend;\n                } else if (vr == 'country') {\n                    var in_dariah = r[3] == 1 ? 'dariah' : '';\n                    h += rowstart + '<td class=\"country_code\">' + r[1] + '<td><td class=\"country_name\">' + r[2] + '<td><td class=\"in_dariah\">' + in_dariah + '</td><td class=\"latlng\">' + r[4] + '</td><td class=\"latlng\">' + r[5] + '</td>' + rowend;\n                } else if (vr == 'type' || vr == 'tadiraha' || vr == 'tadiraho' || vr == 'tadiraht') {\n                    h += rowstart + '<td class=\"value\">' + r[1] + '<td>' + rowend;\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        h += '</table>';\n        this.component.container.get(vr).html(h);\n    },\n    _display: function _display(row, vr, open_ids) {\n        var that = this;\n        var hidec = row.find('.hidec');\n        var showc = row.find('.showc');\n        var rid = row.attr('rid');\n        var detail = this.component.container.get(vr).find('tr[iid=\"' + rid + '\"]');\n        if (open_ids.has(rid)) {\n            hidec.show();\n            showc.hide();\n            if (detail.length) {\n                detail.show();\n            }\n        } else {\n            hidec.hide();\n            showc.hide();\n            if (detail.length) {\n                detail.hide();\n            }\n        }\n    },\n    _set_it: function _set_it(control, vr, state) {\n        var open_ids = g.from_str(this.state.getState(key));\n        var rid = control.closest('tr').attr('rid');\n        if (state) {\n            open_ids.add(rid);\n        } else {\n            open_ids.delete(rid);\n        }\n        this.state.setState(key, g.to_str(open_ids));\n    },\n    show: function show(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    weld: function weld(vr) {\n        this._html(vr);\n    },\n    wire: function wire(vr) {\n        var that = this;\n        var cc = this.component.container.get(vr);\n        var key = this.component.name + '_' + vr;\n        cc.find('.hidec').click(function (e) {\n            e.preventDefault();\n            that._set_it($(this), vr, true);\n        });\n        cc.find('.showc').click(function (e) {\n            e.preventDefault();\n            that._set_it($(this), vr, false);\n        });\n    },\n    work: function work(vr) {\n        var that = this;\n        var key = this.component.name + '_' + vr;\n        var cc = this.component.container.get(vr);\n        var open_ids = g.from_str(this.component.state.getState(this.component.name + '_' + vr));\n        cc.find('tr[rid]').each(function () {\n            that._display($(this), vr, open_ids);\n        });\n    }\n};\n\nmodule.exports = List;\n\n},{\"./generic.js\":7}],10:[function(require,module,exports){\n'use strict';\n\n/* START PROCESSING\n * The dynamic construction of the page starts here\n */\n\nvar Page = require('./page.js');\n\n$(function () {\n  new Page().work();\n});\n\n},{\"./page.js\":12}],11:[function(require,module,exports){\n'use strict';\n\n/* MESSAGES\n * Msg is a function that issues messages to a specified element.\n * It has also controls for clearing and hiding the messages.\n */\n\nfunction Msg(destination, on_clear) {\n    var _this = this;\n\n    this._destination = $('#' + destination);\n    this._trash_control = $('#trash_' + destination);\n    this._trash_control_para = this._trash_control.closest('p');\n    this._trash_control.click(function (e) {\n        e.preventDefault();\n        _this.clear();\n    });\n    this._hide();\n    this._on_clear = on_clear;\n};\n\nMsg.prototype = {\n    _hide: function _hide() {\n        this._destination.hide();\n        this._trash_control_para.hide();\n    },\n    _show: function _show() {\n        this._destination.show();\n        if (this._destination.html() != '') {\n            this._trash_control_para.show();\n        }\n    },\n    clear: function clear() {\n        this._destination.html('');\n        if (this._on_clear != undefined) {\n            this._on_clear();\n        }\n        this._hide();\n    },\n    msg: function msg(text, kind) {\n        if (kind == undefined) {\n            kind = 'info';\n        }\n        var message_text = this._destination.html();\n        this._destination.html(message_text + '<p class=\"' + kind + '\">' + text + '</p>');\n        this._show();\n    }\n};\n\nmodule.exports = Msg;\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/* TOP LEVEL: PAGE\n * This is the page function. \n * It creates a ViewState function, which contains the current state.\n * The state is created on the basis of request variables, and from then it\n * reflects the user actions.\n * The page specifies all components and initializes them.\n * A component is specfied by the following fields\n * - destination: left => left sidebar; right => right sidebar; middle => middle column\n * - name: a string that can be used to refer to the component later on, via method getComponent\n * - subcomponents: a list of names for which a subcomponent will be made. The html will be generated per subcomponent.\n * - fetch: boolean which says whether this component needs data from the server\n * - work first: boolean which says that child components can only be wired after work of the parent component.\n * - specific: an object that holds the specific functionality of this component.\n * The control component has work first = true, because only after choosing a list, the list control can fetch the specific list and wire itself.\n * All other components have work first = false, because it is desirable that child components start wiring as soon as possible.\n * For example: the facet component is parent of the individual facets.\n * When facet starts working, the individual controls should already be wired.\n * Because work first = false, wiring of the individual facets will be triggered after wiring of the generic facet component.\n * N.B. Individual facets can only be wired after the list component (their grandfather) has been wired.\n * This will go OK, because after wiring the list, the facet will be wired and then the individual facets.\n * The _routing dictionary specifies when the work methods of components should be triggered.\n * Its keys are the labels of components, and for every component a list of other component keys is given.\n * These are the components that will be applied (in that order) after the key component. \n * \n *  work from page: if true, this component's work method will be called directly by the page's work method;\n *   if false, the page will skip this component when working. It is assumed that this component will be applied by another component.\n *   This practice must be followed, if the application of state to a component should come after a fetch of another component.\n *   If the page would work the viewstate directly to this component, it would happen before the other's components data had been loaded.\n *   Example: a filter component F, that filters a big list fetched by another component L. L's work should call F's work.\n * After every user action, the state is changed, and a call to the Page's work() method is issued.\n * The page will issue the work call forth to all components.\n */\n\nvar g = require('./generic.js');\nvar ViewState = require('./viewstate.js');\nvar Share = require('./share.js');\nvar CType = require('./ctype.js');\nvar TadirahO = require('./tadiraho.js');\nvar TadirahA = require('./tadiraha.js');\nvar TadirahT = require('./tadiraht.js');\nvar EUmap = require('./eumap.js');\nvar Filter = require('./filter.js');\nvar Facet = require('./facet.js');\nvar List = require('./list.js');\nvar Item = require('./item.js');\nvar Control = require('./control.js');\nvar Component = require('./components.js');\n\nfunction Page() {\n    // the one and only page object\n    this.name = 'page';\n    this.state = new ViewState(this);\n    var main_lists = this.state.getValues('list');\n    var contrib_list = new Set(['contrib']);\n    var empty_list = new Set(['']);\n    this._component_specs = new Map([['share', { dest: 'body', variants: empty_list, fetch_url: null, specific: Share }], ['control', { dest: 'left', variants: main_lists, fetch_url: null, specific: Control }], ['list', { dest: 'middle', variants: main_lists, fetch_url: 'list', specific: List }], ['item', { dest: 'list', variants: main_lists, fetch_url: 'item', specific: Item }], ['facet', { dest: 'control', variants: main_lists, fetch_url: null, specific: Facet }], ['filter', { dest: 'facet', variants: main_lists, fetch_url: null, specific: Filter }], ['eumap', { dest: 'facet', variants: contrib_list, fetch_url: 'country', specific: EUmap }], ['ctype', { dest: 'facet', variants: contrib_list, fetch_url: 'type', specific: CType }], ['tadiraha', { dest: 'facet', variants: contrib_list, fetch_url: 'tadiraha', specific: TadirahA }], ['tadiraho', { dest: 'facet', variants: contrib_list, fetch_url: 'tadiraho', specific: TadirahO }], ['tadiraht', { dest: 'facet', variants: contrib_list, fetch_url: 'tadiraht', specific: TadirahT }]]),\n    /* some components are being dealt with on the basis of additional identifiers, such as item\n     * Those components are specified below, and the specs of all components will get an extra attribute\n     * by_id, which is true if the component needs an id.\n     * The actual ids come from a request variable name_xxx, where name is the name of the component and xxx is the name of a list.\n     */\n    this._by_id = new Set(['item']), this.stages = new Map([['weld', true], ['wire', true], ['work', false]]); // true means: once only, false means: my be repeated\n    this.stages_prev = new Map([['wire', 'weld'], ['work', 'wire']]);\n    this._before = new Map([['weld', new Map([['item', new Set(['list'])], ['facet', new Set(['control', 'list'])], ['filter', new Set(['facet'])], ['eumap', new Set(['facet', 'filter'])], ['ctype', new Set(['facet', 'eumap'])], ['tadiraha', new Set(['facet', 'ctype'])], ['tadiraho', new Set(['facet', 'tadiraha'])], ['tadiraht', new Set(['facet', 'tadiraho'])], ['share', new Set(['facet', 'list'])]])], ['wire', new Map([['item', new Set(['list'])], ['facet', new Set(['filter', 'eumap', 'ctype', 'tadiraha', 'tadiraho', 'tadiraht'])], ['filter', new Set(['list'])], ['eumap', new Set(['list'])], ['ctype', new Set(['list'])], ['tadiraha', new Set(['list'])], ['tadiraho', new Set(['list'])], ['tadiraht', new Set(['list'])]])], ['work', new Map([['facet', new Set(['filter', 'eumap', 'ctype', 'tadiraha', 'tadiraho', 'tadiraht'])]])]]);\n    this._ignore = new Set([\n        //'ctype',\n        //'tadiraha',\n        //'tadiraht',\n        //'tadiraho',\n        //'eumap',\n        //'filter',\n    ]), this.components = new Map();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = this._component_specs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _step$value = _slicedToArray(_step.value, 2);\n\n            var name = _step$value[0];\n            var spec = _step$value[1];\n\n            if (this._ignore.has(name)) {\n                continue;\n            }\n            spec.by_id = this._by_id.has(name);\n            var component = new Component(name, spec, this);\n            component.children = new Map();\n            this.components.set(name, component);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n        for (var _iterator2 = this.components[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _step2$value = _slicedToArray(_step2.value, 2);\n\n            var name = _step2$value[0];\n            var child_component = _step2$value[1];\n\n            var dest_name = this._component_specs.get(name).dest;\n            if (this.components.has(dest_name)) {\n                var parent_component = this.components.get(dest_name);\n                parent_component.children.set(name, child_component);\n            }\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally {\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n\n    this._resolveTiming();\n    this._setHeight(80);\n    History.Adapter.bind(window, 'statechange', this.state.work());\n};\n\nPage.prototype = {\n    _setHeight: function _setHeight(subtract) {\n        // the heights of the sidebars are set, depending on the height of the window\n        var wh = window.innerHeight - subtract + 'px';\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n            for (var _iterator3 = new Set(['middle', 'left', 'right'])[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var w = _step3.value;\n\n                $('#' + w).css('height', wh);\n            }\n        } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                }\n            } finally {\n                if (_didIteratorError3) {\n                    throw _iteratorError3;\n                }\n            }\n        }\n    },\n    _resolveTiming: function _resolveTiming() {\n        /* the time constraints must form a directed acyclic graph.\n         * If that is the case, we need a linear order in which we can make the promises\n         * This function will calculate that order (of course, several orders are possible)\n         * Algorithm:\n         *\n         * A: make a graph of all tasks, a task is the combination of a component with a stage.\n         *\n         * B: compute sets of nodes that have a longest predecessor path of fixed length n\n         *\n         * 1. determine all tasks without predecessors, this is S0                                                (max length of predecessor chain = 0)\n         * 2. determine all tasks with all predecessors in S0, this is S1                                             (max length of predecessor chain = 1)\n         * 3. determine all tasks with: all predecessors in S0 or S1, at least one predecessor in S1, this is S2  (max length of predecessor chain = 2)\n         * ...\n         * n+1. determine all tasks with: all predecessors in S0, S1, ..., Sn, at least ione predecessor in Sn\n         *\n         * C: \n         * Prove theorem 1: Sn = {all nodes with longest chain of predecessors has length n}.\n         * Prove theorem 2: all nodes outside union of all Sn: they are part of a cycle.\n         *\n         * D: \n         * The required order is: first the nodes of S0 (in any order), then those of S1, then those of S2, and so on.\n         */\n        var timing_nodes = [];\n        var timing_edges = new Map(); // keys are nodes that must come before other nodes\n        var timing_edges_inv = new Map(); // keys are nodes that must come after other nodes\n        // A: collect the nodes: pairs of component name and stage\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n            for (var _iterator4 = this.components.keys()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var name = _step4.value;\n                var _iteratorNormalCompletion15 = true;\n                var _didIteratorError15 = false;\n                var _iteratorError15 = undefined;\n\n                try {\n                    for (var _iterator15 = this.stages.keys()[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n                        var stage = _step15.value;\n\n                        timing_nodes.push(name + '-' + stage);\n                    }\n                } catch (err) {\n                    _didIteratorError15 = true;\n                    _iteratorError15 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion15 && _iterator15.return) {\n                            _iterator15.return();\n                        }\n                    } finally {\n                        if (_didIteratorError15) {\n                            throw _iteratorError15;\n                        }\n                    }\n                }\n            }\n            // collect the edges (we need to store every edge both ways)\n        } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                }\n            } finally {\n                if (_didIteratorError4) {\n                    throw _iteratorError4;\n                }\n            }\n        }\n\n        function addEdge(prev_node, next_node) {\n            if (!timing_edges.has(prev_node)) {\n                timing_edges.set(prev_node, new Set());\n            }\n            if (!timing_edges_inv.has(next_node)) {\n                timing_edges_inv.set(next_node, new Set());\n            }\n            timing_edges.get(prev_node).add(next_node);\n            timing_edges_inv.get(next_node).add(prev_node);\n        }\n        // 1. per component, the stages are ordered\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n            for (var _iterator5 = this.stages_prev[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                var _step5$value = _slicedToArray(_step5.value, 2);\n\n                var next_stage = _step5$value[0];\n                var prev_stage = _step5$value[1];\n                var _iteratorNormalCompletion16 = true;\n                var _didIteratorError16 = false;\n                var _iteratorError16 = undefined;\n\n                try {\n                    for (var _iterator16 = this.components.keys()[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n                        var _name = _step16.value;\n\n                        addEdge(_name + '-' + prev_stage, _name + '-' + next_stage);\n                    }\n                } catch (err) {\n                    _didIteratorError16 = true;\n                    _iteratorError16 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion16 && _iterator16.return) {\n                            _iterator16.return();\n                        }\n                    } finally {\n                        if (_didIteratorError16) {\n                            throw _iteratorError16;\n                        }\n                    }\n                }\n            }\n            // 2. add the specific time constraints\n        } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                    _iterator5.return();\n                }\n            } finally {\n                if (_didIteratorError5) {\n                    throw _iteratorError5;\n                }\n            }\n        }\n\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n            for (var _iterator6 = this._before[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                var _step6$value = _slicedToArray(_step6.value, 2);\n\n                var _stage = _step6$value[0];\n                var nexts = _step6$value[1];\n                var _iteratorNormalCompletion17 = true;\n                var _didIteratorError17 = false;\n                var _iteratorError17 = undefined;\n\n                try {\n                    for (var _iterator17 = nexts[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n                        var _step17$value = _slicedToArray(_step17.value, 2);\n\n                        var next_name = _step17$value[0];\n                        var prevs = _step17$value[1];\n\n                        if (this._ignore.has(next_name)) {\n                            continue;\n                        }\n                        var _iteratorNormalCompletion18 = true;\n                        var _didIteratorError18 = false;\n                        var _iteratorError18 = undefined;\n\n                        try {\n                            for (var _iterator18 = prevs.keys()[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {\n                                var prev_name = _step18.value;\n\n                                if (this._ignore.has(prev_name)) {\n                                    continue;\n                                }\n                                addEdge(prev_name + '-' + _stage, next_name + '-' + _stage);\n                            }\n                        } catch (err) {\n                            _didIteratorError18 = true;\n                            _iteratorError18 = err;\n                        } finally {\n                            try {\n                                if (!_iteratorNormalCompletion18 && _iterator18.return) {\n                                    _iterator18.return();\n                                }\n                            } finally {\n                                if (_didIteratorError18) {\n                                    throw _iteratorError18;\n                                }\n                            }\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError17 = true;\n                    _iteratorError17 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion17 && _iterator17.return) {\n                            _iterator17.return();\n                        }\n                    } finally {\n                        if (_didIteratorError17) {\n                            throw _iteratorError17;\n                        }\n                    }\n                }\n            }\n            // B: compute the Sn (in subset)\n        } catch (err) {\n            _didIteratorError6 = true;\n            _iteratorError6 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                    _iterator6.return();\n                }\n            } finally {\n                if (_didIteratorError6) {\n                    throw _iteratorError6;\n                }\n            }\n        }\n\n        var n = 0;\n        var subset = [];\n        var visited = new Set(); // collect all nodes that end up in an Sn\n        while (n <= timing_nodes.length) {\n            subset.push(new Set());\n            if (n == 0) {\n                // first round\n                var _iteratorNormalCompletion7 = true;\n                var _didIteratorError7 = false;\n                var _iteratorError7 = undefined;\n\n                try {\n                    for (var _iterator7 = timing_nodes[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                        var node = _step7.value;\n                        // select all nodes without prev_nodes\n                        if (!timing_edges_inv.has(node)) {\n                            subset[n].add(node); // and store them in subset[0]            \n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError7 = true;\n                    _iteratorError7 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                            _iterator7.return();\n                        }\n                    } finally {\n                        if (_didIteratorError7) {\n                            throw _iteratorError7;\n                        }\n                    }\n                }\n            } else {\n                    var _iteratorNormalCompletion8 = true;\n                    var _didIteratorError8 = false;\n                    var _iteratorError8 = undefined;\n\n                    try {\n                        for (var _iterator8 = visited[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n                            var prev_node = _step8.value;\n                            // start with prev_nodes in visited\n                            if (timing_edges.has(prev_node)) {\n                                // and consider their next_nodes\n                                var _iteratorNormalCompletion9 = true;\n                                var _didIteratorError9 = false;\n                                var _iteratorError9 = undefined;\n\n                                try {\n                                    for (var _iterator9 = timing_edges.get(prev_node)[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n                                        var next_node = _step9.value;\n\n                                        if (!visited.has(next_node)) {\n                                            // but only if the next_node is not yet visited\n                                            var good = true;\n                                            var _iteratorNormalCompletion10 = true;\n                                            var _didIteratorError10 = false;\n                                            var _iteratorError10 = undefined;\n\n                                            try {\n                                                for (var _iterator10 = timing_edges_inv.get(next_node)[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n                                                    var other_prev_node = _step10.value;\n                                                    // consider the other prev nodes of the next nodes\n                                                    if (!visited.has(other_prev_node)) {\n                                                        // and require that they have been visited already\n                                                        good = false;\n                                                        break;\n                                                    }\n                                                }\n                                            } catch (err) {\n                                                _didIteratorError10 = true;\n                                                _iteratorError10 = err;\n                                            } finally {\n                                                try {\n                                                    if (!_iteratorNormalCompletion10 && _iterator10.return) {\n                                                        _iterator10.return();\n                                                    }\n                                                } finally {\n                                                    if (_didIteratorError10) {\n                                                        throw _iteratorError10;\n                                                    }\n                                                }\n                                            }\n\n                                            if (good) {\n                                                subset[n].add(next_node); // if all is well, we add next_node to subset[n]\n                                            }\n                                        }\n                                    }\n                                } catch (err) {\n                                    _didIteratorError9 = true;\n                                    _iteratorError9 = err;\n                                } finally {\n                                    try {\n                                        if (!_iteratorNormalCompletion9 && _iterator9.return) {\n                                            _iterator9.return();\n                                        }\n                                    } finally {\n                                        if (_didIteratorError9) {\n                                            throw _iteratorError9;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError8 = true;\n                        _iteratorError8 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion8 && _iterator8.return) {\n                                _iterator8.return();\n                            }\n                        } finally {\n                            if (_didIteratorError8) {\n                                throw _iteratorError8;\n                            }\n                        }\n                    }\n                }\n            if (subset[n].size == 0) {\n                // if there are no new nodes, the next rounds will also not yield new nodes,\n                break; //  so we are done\n            }\n            var _iteratorNormalCompletion11 = true;\n            var _didIteratorError11 = false;\n            var _iteratorError11 = undefined;\n\n            try {\n                for (var _iterator11 = subset[n][Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n                    var _node = _step11.value;\n                    // after each round we add the saved next_nodes to the visited nodes\n                    visited.add(_node);\n                }\n            } catch (err) {\n                _didIteratorError11 = true;\n                _iteratorError11 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion11 && _iterator11.return) {\n                        _iterator11.return();\n                    }\n                } finally {\n                    if (_didIteratorError11) {\n                        throw _iteratorError11;\n                    }\n                }\n            }\n\n            n++;\n        }\n        this._tasks = [];\n        this._timing = new Map();\n        if (visited.size != timing_nodes.length) {\n            var cycle = [];\n            var _iteratorNormalCompletion12 = true;\n            var _didIteratorError12 = false;\n            var _iteratorError12 = undefined;\n\n            try {\n                for (var _iterator12 = timing_nodes[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n                    var _node2 = _step12.value;\n\n                    if (!visited.has(_node2)) {\n                        cycle.push(_node2);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError12 = true;\n                _iteratorError12 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion12 && _iterator12.return) {\n                        _iterator12.return();\n                    }\n                } finally {\n                    if (_didIteratorError12) {\n                        throw _iteratorError12;\n                    }\n                }\n            }\n\n            console.log('Circular timing constraints detected', cycle);\n        } else {\n            var _iteratorNormalCompletion13 = true;\n            var _didIteratorError13 = false;\n            var _iteratorError13 = undefined;\n\n            try {\n                for (var _iterator13 = subset[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n                    var nodes = _step13.value;\n                    var _iteratorNormalCompletion14 = true;\n                    var _didIteratorError14 = false;\n                    var _iteratorError14 = undefined;\n\n                    try {\n                        for (var _iterator14 = nodes[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n                            var _node3 = _step14.value;\n\n                            this._tasks.push(_node3);\n                        }\n                    } catch (err) {\n                        _didIteratorError14 = true;\n                        _iteratorError14 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion14 && _iterator14.return) {\n                                _iterator14.return();\n                            }\n                        } finally {\n                            if (_didIteratorError14) {\n                                throw _iteratorError14;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError13 = true;\n                _iteratorError13 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion13 && _iterator13.return) {\n                        _iterator13.return();\n                    }\n                } finally {\n                    if (_didIteratorError13) {\n                        throw _iteratorError13;\n                    }\n                }\n            }\n\n            this._timing = timing_edges_inv;\n            console.log('Timing resolved', this._tasks);\n        }\n    },\n\n    getComponent: function getComponent(name) {\n        return this.components.get(name);\n    },\n    getContainer: function getContainer(name, variants) {\n        if (this.components.has(name)) {\n            return this.components.get(name).container;\n        } else {\n            var container = new Map();\n            var addto = name == 'body' ? $('body') : $('#' + name);\n            var _iteratorNormalCompletion19 = true;\n            var _didIteratorError19 = false;\n            var _iteratorError19 = undefined;\n\n            try {\n                for (var _iterator19 = variants[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {\n                    var vr = _step19.value;\n\n                    container.set(vr, addto);\n                }\n            } catch (err) {\n                _didIteratorError19 = true;\n                _iteratorError19 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion19 && _iterator19.return) {\n                        _iterator19.return();\n                    }\n                } finally {\n                    if (_didIteratorError19) {\n                        throw _iteratorError19;\n                    }\n                }\n            }\n\n            return container;\n        }\n    },\n    getBefore: function getBefore(name, stage) {\n        var prev_nodes = [];\n        var next_node = name + '-' + stage;\n        var _iteratorNormalCompletion20 = true;\n        var _didIteratorError20 = false;\n        var _iteratorError20 = undefined;\n\n        try {\n            for (var _iterator20 = (this._timing.get(next_node) || new Set())[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {\n                var prev_node = _step20.value;\n\n                prev_nodes.push(prev_node.split('-'));\n            }\n        } catch (err) {\n            _didIteratorError20 = true;\n            _iteratorError20 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion20 && _iterator20.return) {\n                    _iterator20.return();\n                }\n            } finally {\n                if (_didIteratorError20) {\n                    throw _iteratorError20;\n                }\n            }\n        }\n\n        return prev_nodes;\n    },\n    work: function work() {\n        var _iteratorNormalCompletion21 = true;\n        var _didIteratorError21 = false;\n        var _iteratorError21 = undefined;\n\n        try {\n            for (var _iterator21 = this._tasks[Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {\n                var task = _step21.value;\n\n                var _task$split = task.split('-');\n\n                var _task$split2 = _slicedToArray(_task$split, 2);\n\n                var name = _task$split2[0];\n                var stage = _task$split2[1];\n\n                var component = this.getComponent(name);\n                var _iteratorNormalCompletion22 = true;\n                var _didIteratorError22 = false;\n                var _iteratorError22 = undefined;\n\n                try {\n                    for (var _iterator22 = component.variants[Symbol.iterator](), _step22; !(_iteratorNormalCompletion22 = (_step22 = _iterator22.next()).done); _iteratorNormalCompletion22 = true) {\n                        var vr = _step22.value;\n\n                        component[stage](vr);\n                    }\n                } catch (err) {\n                    _didIteratorError22 = true;\n                    _iteratorError22 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion22 && _iterator22.return) {\n                            _iterator22.return();\n                        }\n                    } finally {\n                        if (_didIteratorError22) {\n                            throw _iteratorError22;\n                        }\n                    }\n                }\n            }\n        } catch (err) {\n            _didIteratorError21 = true;\n            _iteratorError21 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion21 && _iterator21.return) {\n                    _iterator21.return();\n                }\n            } finally {\n                if (_didIteratorError21) {\n                    throw _iteratorError21;\n                }\n            }\n        }\n    }\n};\n\nmodule.exports = Page;\n\n},{\"./components.js\":1,\"./control.js\":2,\"./ctype.js\":3,\"./eumap.js\":4,\"./facet.js\":5,\"./filter.js\":6,\"./generic.js\":7,\"./item.js\":8,\"./list.js\":9,\"./share.js\":14,\"./tadiraha.js\":15,\"./tadiraho.js\":16,\"./tadiraht.js\":17,\"./viewstate.js\":18}],13:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/* INDIVIDUAL COMPONENT: generic facet based on related values\n * CType, Tadiraho and EUmap inherit from this.\n */\n\nvar g = require('./generic.js');\n\nfunction Relative(component, rtype, cols, cutoff, shortsize) {\n    this.component = component;\n    this.distilled = new Map();\n    this._list = new Map();\n    this._list2 = new Map();\n    this._related_state = new Map();\n    this._all_values_control = new Map();\n    this._statistics = new Map();\n    this._related_values_list = new Map();\n    this._related_values_index = new Map();\n    this._related_values_all = new Map();\n    this._no_values = { value: '-', name: '-none' };\n    this._type = rtype;\n    this._cols = cols || 2;\n    this._cutoff = cutoff || 14;\n    this._shortsize = shortsize || 6;\n};\n\nRelative.prototype = {\n    _html: function _html(vr) {\n        var type_sg = this.component.state.showState('list', this._type, 'sg');\n        var type_pl = this.component.state.showState('list', this._type, 'pl');\n        var h = '';\n        h += this._preHtml(vr);\n        h += '\\n<div>\\n    <p class=\"dctrl\"><span fct=\"' + this.component.name + '-' + vr + '\"></span> By ' + type_sg + '</p>\\n    <p class=\"all\"><span rv=\"_all\" class=\"stats\"></span> <a rv=\"_all\" href=\"#\" class=\"facet_single_all\">all ' + type_pl + '</a></p>\\n    <table class=\"value_list\" id=\"list-' + this._type + '-vals_' + vr + '\">\\n        <tr>\\n';\n        var ar = this._related_values_list.get(vr);\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = ar.entries()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var _step$value = _slicedToArray(_step.value, 2);\n\n                var i = _step$value[0];\n                var related_value = _step$value[1];\n\n                if (i % this._cols == 0 && i > 0 && i < ar.length) {\n                    h += '</tr><tr>';\n                }\n                var raw_value = this._related_values_index.get(vr).get(related_value);\n                h += '\\n            <td><span rv=\"' + related_value + '\" class=\"stats\"></span></td>\\n            <td><a rv=\"' + related_value + '\" href=\"#\" class=\"facet_single\">' + g.escapeHTML(raw_value) + '</a></td>\\n            ';\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        h += '\\n        </tr>\\n    </table>\\n    <p class=\"value_list2\" id=\"list2-' + this._type + '-vals_' + vr + '\">\\n';\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n            for (var _iterator2 = ar.entries()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var _step2$value = _slicedToArray(_step2.value, 2);\n\n                var i = _step2$value[0];\n                var related_value = _step2$value[1];\n\n                var _raw_value = this._related_values_index.get(vr).get(related_value);\n                var compact_value = g.escapeHTML(g.compact(this._cutoff, this._shortsize, _raw_value));\n                h += '<a href=\"#\" rv=\"' + related_value + '\" class=\"passive_small\" title=\"' + g.escapeHTML(_raw_value) + '\">' + compact_value + '</a> ';\n            }\n        } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                    _iterator2.return();\n                }\n            } finally {\n                if (_didIteratorError2) {\n                    throw _iteratorError2;\n                }\n            }\n        }\n\n        h += '\\n    </p>\\n</div>';\n        this.component.container.get(vr).html(h);\n    },\n    _dressup: function _dressup(vr) {\n        var cc = this.component.container.get(vr);\n        this._list.set(vr, cc.find('#list-' + this._type + '-vals_' + vr));\n        this._list2.set(vr, cc.find('#list2-' + this._type + '-vals_' + vr));\n        var that = this;\n        this._list.get(vr).find('.facet_single').click(function (e) {\n            e.preventDefault();\n            var related_value = $(this).attr('rv');\n            var selected = g.from_str(that.component.state.getState('rel_' + that._type + '_' + vr));\n            if (selected.has(related_value)) {\n                selected.delete(related_value);\n            } else {\n                selected.add(related_value);\n            }\n            that.component.state.setState('rel_' + that._type + '_' + vr, g.to_str(selected));\n            cc.find('.last_handled').removeClass('last_handled');\n            $(this).addClass('last_handled');\n        });\n        this._list2.get(vr).find('.passive_small').click(function (e) {\n            e.preventDefault();\n            var related_value = $(this).attr('rv');\n            var selected = g.from_str(that.component.state.getState('rel_' + that._type + '_' + vr));\n            if (selected.has(related_value)) {\n                selected.delete(related_value);\n            } else {\n                selected.add(related_value);\n            }\n            that.component.state.setState('rel_' + that._type + '_' + vr, g.to_str(selected));\n            $(this).closest('div').find('.morec').click();\n            var last_handled = that._list.get(vr).find('a[rv=\"' + related_value + '\"]');\n            cc.find('.last_handled').removeClass('last_handled');\n            last_handled.addClass('last_handled');\n            $('#left')[0].scrollTop = 50;\n            last_handled[0].scrollIntoView({\n                behavior: 'smooth',\n                alignToTop: 'true'\n            });\n        });\n        this._all_values_control.set(vr, this.component.container.get(vr).find('[rv=\"_all\"]'));\n        this._all_values_control.get(vr).click(function (e) {\n            e.preventDefault();\n            var ison = $(this).hasClass('ison');\n            if (ison) {\n                that.component.state.setState('rel_' + that._type + '_' + vr, '');\n            } else {\n                that.component.state.setState('rel_' + that._type + '_' + vr, g.to_str(that._related_values_all.get(vr)));\n            }\n        });\n    },\n    _setFacet: function _setFacet(vr) {\n        var all_selected = true;\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n            for (var _iterator3 = this._related_values_index.get(vr).keys()[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var related_value = _step3.value;\n\n                var facet_cell = this._list.get(vr).find('[rv=\"' + related_value + '\"]');\n                var facet_cell2 = this._list2.get(vr).find('[rv=\"' + related_value + '\"]');\n                if (this._related_state.get(vr).has(related_value + '')) {\n                    facet_cell.addClass('ison');\n                    facet_cell2.addClass('ison');\n                } else {\n                    facet_cell.removeClass('ison');\n                    facet_cell2.removeClass('ison');\n                    all_selected = false;\n                }\n            }\n        } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                }\n            } finally {\n                if (_didIteratorError3) {\n                    throw _iteratorError3;\n                }\n            }\n        }\n\n        if (all_selected) {\n            this._all_values_control.get(vr).addClass('ison');\n        } else {\n            this._all_values_control.get(vr).removeClass('ison');\n        }\n    },\n    stats: function stats(vr) {\n        this._statistics.set(vr, new Map());\n        var rvs = this._statistics.get(vr);\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n            for (var _iterator4 = this._related_values_index.get(vr).keys()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var related_value = _step4.value;\n\n                rvs.set(related_value, 0);\n            }\n        } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                }\n            } finally {\n                if (_didIteratorError4) {\n                    throw _iteratorError4;\n                }\n            }\n        }\n\n        var related_info = this.component.related_info.get(vr);\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n            for (var _iterator5 = this.distilled.get(vr)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                var i = _step5.value;\n\n                var has_related_value = false;\n                if (related_info.has(i)) {\n                    var _iteratorNormalCompletion7 = true;\n                    var _didIteratorError7 = false;\n                    var _iteratorError7 = undefined;\n\n                    try {\n                        for (var _iterator7 = related_info.get(i)[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                            var _related_value = _step7.value;\n\n                            rvs.set(_related_value, rvs.get(_related_value) + 1);\n                            has_related_value = true;\n                        }\n                    } catch (err) {\n                        _didIteratorError7 = true;\n                        _iteratorError7 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                                _iterator7.return();\n                            }\n                        } finally {\n                            if (_didIteratorError7) {\n                                throw _iteratorError7;\n                            }\n                        }\n                    }\n                }\n                if (!has_related_value) {\n                    var nv = this._no_values.value;\n                    rvs.set(nv, rvs.get(nv) + 1);\n                }\n            }\n        } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                    _iterator5.return();\n                }\n            } finally {\n                if (_didIteratorError5) {\n                    throw _iteratorError5;\n                }\n            }\n        }\n\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n            for (var _iterator6 = rvs[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                var _step6$value = _slicedToArray(_step6.value, 2);\n\n                var _related_value2 = _step6$value[0];\n                var stat = _step6$value[1];\n\n                this.component.container.get(vr).find('span[rv=\"' + _related_value2 + '\"].stats').html(stat);\n            }\n        } catch (err) {\n            _didIteratorError6 = true;\n            _iteratorError6 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                    _iterator6.return();\n                }\n            } finally {\n                if (_didIteratorError6) {\n                    throw _iteratorError6;\n                }\n            }\n        }\n\n        this.component.container.get(vr).find('span[rv=\"_all\"].stats').html(this.distilled.get(vr).length);\n        this._myStats(vr);\n    },\n    v: function v(vr, i) {\n        var related_info = this.component.related_info.get(vr);\n        var related_state = this._related_state.get(vr);\n        if (related_info.has(i)) {\n            var _iteratorNormalCompletion8 = true;\n            var _didIteratorError8 = false;\n            var _iteratorError8 = undefined;\n\n            try {\n                for (var _iterator8 = related_info.get(i)[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n                    var related_value = _step8.value;\n\n                    if (related_state.has(related_value + '')) {\n                        return true;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError8 = true;\n                _iteratorError8 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion8 && _iterator8.return) {\n                        _iterator8.return();\n                    }\n                } finally {\n                    if (_didIteratorError8) {\n                        throw _iteratorError8;\n                    }\n                }\n            }\n        } else {\n            if (related_state.has(this._no_values.value)) {\n                return true;\n            }\n        }\n        return false;\n    },\n    show: function show(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    weld: function weld(vr) {\n        this._related_values_list.set(vr, []);\n        this._related_values_index.set(vr, new Map());\n        this._related_values_all.set(vr, new Set());\n        this._plainWeld(vr);\n        this._myWeld(vr);\n        this._related_values_list.get(vr).push(this._no_values.value);\n        this._related_values_index.get(vr).set(this._no_values.value, this._no_values.name);\n        this._related_values_all.get(vr).add(this._no_values.value);\n        this._html(vr);\n    },\n    wire: function wire(vr) {\n        this._myDressup(vr);\n        this._dressup(vr);\n    },\n    work: function work(vr) {\n        this._related_state.set(vr, g.from_str(this.component.state.getState('rel_' + this._type + '_' + vr)));\n        this._mySetFacet(vr);\n        this._setFacet(vr);\n    },\n    _plainWeld: function _plainWeld(vr) {\n        var related_values = this.component.related_values.get(vr);\n        var _iteratorNormalCompletion9 = true;\n        var _didIteratorError9 = false;\n        var _iteratorError9 = undefined;\n\n        try {\n            for (var _iterator9 = related_values[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n                var _step9$value = _slicedToArray(_step9.value, 2);\n\n                var i = _step9$value[0];\n                var related_value = _step9$value[1];\n\n                this._related_values_list.get(vr).push(i);\n                this._related_values_index.get(vr).set(i, related_value);\n                this._related_values_all.get(vr).add(i);\n            }\n        } catch (err) {\n            _didIteratorError9 = true;\n            _iteratorError9 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion9 && _iterator9.return) {\n                    _iterator9.return();\n                }\n            } finally {\n                if (_didIteratorError9) {\n                    throw _iteratorError9;\n                }\n            }\n        }\n\n        this._related_values_list.get(vr).sort(function (a, b) {\n            return related_values.get(a) < related_values.get(b) ? -1 : related_values.get(a) > related_values.get(b) ? 1 : 0;\n        });\n    },\n    _myWeld: function _myWeld(vr) {},\n    _preHtml: function _preHtml(vr) {\n        return '';\n    },\n    _myDressup: function _myDressup(vr) {},\n    _mySetFacet: function _mySetFacet(vr) {},\n    _myStats: function _myStats(vr) {}\n};\n\nmodule.exports = Relative;\n\n},{\"./generic.js\":7}],14:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: Control\n * Manages the sharing drawer for generating hyperlinks to the current page.\n */\n\nvar g = require('./generic.js');\n\nfunction Share(component) {\n    // the SHARE component\n    this.component = component;\n};\n\nShare.prototype = {\n    show: function show(vr) {\n        return true;\n    },\n    weld: function weld(vr) {\n        var h = '\\n<p id=\"citeh\">Cite</p>\\n<table align=\"center\">\\n    <tr>\\n        <td class=\"clip_pv clr\">\\n            <a lnk=\"\" href=\"#\" id=\"clip_pv_md\" title=\"link to page content and appearance (markdown)\" class=\"ctrl fa fa-level-down fa-lg fa-fw\"></a>\\n            <a lnk=\"\" href=\"#\" id=\"clip_pv_ht\" title=\"link to page content and appearance (html)\" class=\"ctrl fa fa-external-link-square fa-lg fa-fw\"></a>\\n            <a lnk=\"\" href=\"#\" id=\"clip_pv_htc\" title=\"link to page content (html)\" class=\"ctrl fa fa-external-link fa-lg fa-fw\"></a>\\n            <a lnk=\"\" href=\"#\" id=\"clip_pv_cn\" title=\"copy page content\" class=\"ctrl fa fa-file-text-o fa-lg fa-fw\"></a>\\n        </td>\\n    </tr>\\n    <tr>\\n        <th class=\"clip_pv\" width=\"60px\">page view</th>\\n    </tr>\\n    <tr class=\"citexpl\">\\n        <td class=\"clip_pv\"><span id=\"xc_pv\" class=\"ctrl fa fa-chevron-right fa-fw\"></span><span id=\"x_pv\" class=\"detail\">share link to this page with or without view settings.</span></td>\\n    </tr>\\n</table>\\n<p id=\"cdiagpub\"></p>\\n<p id=\"cdiagsts\"></p>\\n';\n        this.component.container.get(vr).html(h);\n    },\n    wire: function wire(vr) {\n        var that = this;\n        var cc = this.component.container.get(vr);\n        var slink = $('#self_link');\n        slink.hide();\n        cc.addClass('socialdrawer');\n        cc.find('.detail').hide();\n        cc.find('#clip_pv_md,#clip_pv_ht,#clip_pv_htc,#clip_pv_nl').click(function (e) {\n            e.preventDefault();\n            window.prompt('Press <Cmd-C> and then <Enter> to copy link on clipboard', $(this).attr('lnk'));\n        });\n        cc.find('#clip_pv_cn').click(function (e) {\n            e.preventDefault();\n            var containerid = 'middle';\n            var app_url_raw = app_url_cite + that.component.state.getVars(true);\n            slink.show();\n            slink.attr('href', app_url_raw);\n            g.selectText(containerid);\n        });\n        cc.find('#xc_pv').click(function (e) {\n            e.preventDefault();g.toggleDetail($(this), $('#x_pv'));\n        });\n        cc.click(function (e) {\n            e.preventDefault();\n            var app_url_raw = app_url_cite + that.component.state.getVars(true);\n            var app_url_rawc = app_url_cite + that.component.state.getVars(false);\n            $('#citeh').hide();\n            $('#cdiagpub').html('');\n            $('#cdiagsts').html('');\n            $('.clip_pv.clr,#cdiagpub,#cdiagsts').removeClass('error warning good special');\n            var pvtitle = g.escapeHTML($('title').text());\n            $('#clip_pv_md').attr('lnk', '[${pvtitle}](${app_url_raw})');\n            $('#clip_pv_ht').attr('lnk', app_url_raw);\n            $('#clip_pv_htc').attr('lnk', app_url_rawc);\n            $('#clip_pv_cn').attr('lnk', app_url_raw);\n            $('#clip_pv_cn').attr('tit', pvtitle);\n            $(this).animate({ height: '100px', width: '200px', opacity: 0.95 }, 300);\n        });\n        cc.mouseleave(function () {\n            slink.hide();\n            //g.deselectText();\n            $('#citeh').show();\n            cc.animate({ height: '20px', width: '40px', opacity: .7 }, 300);\n            return false;\n        });\n    },\n    work: function work(vr) {}\n};\n\nmodule.exports = Share;\n\n},{\"./generic.js\":7}],15:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: ctype\n * This manages the facet \"contribution type\"\n */\n\nvar Relative = require('./relative.js');\n\nfunction TadirahA(component) {\n  Relative.call(this, component, 'tadiraha');\n};\n\nTadirahA.prototype = Object.create(Relative.prototype);\nTadirahA.prototype.constructor = TadirahA;\n\nmodule.exports = TadirahA;\n\n},{\"./relative.js\":13}],16:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: ctype\n * This manages the facet \"contribution type\"\n */\n\nvar Relative = require('./relative.js');\n\nfunction TadirahO(component) {\n  Relative.call(this, component, 'tadiraho');\n};\n\nTadirahO.prototype = Object.create(Relative.prototype);\nTadirahO.prototype.constructor = TadirahO;\n\nmodule.exports = TadirahO;\n\n},{\"./relative.js\":13}],17:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: ctype\n * This manages the facet \"contribution type\"\n */\n\nvar Relative = require('./relative.js');\n\nfunction TadirahT(component) {\n  Relative.call(this, component, 'tadiraht', 1, 30);\n};\n\nTadirahT.prototype = Object.create(Relative.prototype);\nTadirahT.prototype.constructor = TadirahT;\n\nmodule.exports = TadirahT;\n\n},{\"./relative.js\":13}],18:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/* VIEW STATE\n * Contains the current state, based on request variables and local storage.\n * Request variables have precedence over local storage.\n * Request variables are checked and validated and translated, translated values go to local storage.\n * There is a list of recognized request variables, with their types and allowable values.\n */\n\nvar g = require('./generic.js');\nvar Msg = require('./message.js');\n\nfunction ViewState(page) {\n    this._data = {}; // this should be an object and not a collection such as Map. Otherwise it does not function well with popstate.\n    this._specs = new Map();\n    this.page = page;\n    this._msg = new Msg('msg_page');\n    this._compile_specs();\n    this._getInitstate();\n    this._addHistory();\n};\n\nViewState.prototype = {\n    _spec_info: {\n        vars: new Set(['list', 'flt_contrib', 'flt_country', 'flt_type', 'flt_tadiraha', 'flt_tadiraho', 'flt_tadiraht', 'rel_country_contrib', 'rel_type_contrib', 'rel_tadiraha_contrib', 'rel_tadiraho_contrib', 'rel_tadiraht_contrib', 'item_contrib', 'item_country', 'sort']),\n        vals: new Map([['list', new Set(['contrib', 'country', 'type', 'tadiraha', 'tadiraho', 'tadiraht'])], ['sort', new Map([['v', true], ['x', false]])]]),\n        default_value: new Map([['list', 'contrib'], ['sort', true]]),\n        typ: new Map([['sort', 'boolean']]),\n        url: new Set(['list', 'item_contrib', 'item_country']),\n        showas: new Map([['list', new Map([['contrib', { sg: 'contribution', pl: 'contributions' }], ['country', { sg: 'country', pl: 'countries' }], ['type', { sg: 'type', pl: 'types' }], ['tadiraha', { sg: 'tadirah activity', pl: 'tadirah activities' }], ['tadiraho', { sg: 'tadirah object', pl: 'tadirah objects' }], ['tadiraht', { sg: 'tadirah technique', pl: 'tadirah techniques' }]])]])\n    },\n    _compile_specs: function _compile_specs() {\n        var info = this._spec_info;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = info.vars[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var v = _step.value;\n\n                var spec = {};\n                spec.vals = info.vals.get(v) || null;\n                spec.default_value = info.default_value.get(v) || '';\n                spec.typ = info.typ.get(v) || 'string';\n                spec.url = info.url.has(v);\n                spec.showas = info.showas.get(v) || {};\n                this._specs.set(v, spec);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    },\n    _validate: function _validate(v, val) {\n        var newval = void 0,\n            message = void 0;\n        if (this._specs.has(v)) {\n            var spec = this._specs.get(v);\n            if (spec.typ == 'string') {\n                if (spec.vals) {\n                    if (spec.vals.has(val)) {\n                        newval = val;\n                    } else {\n                        newval = spec.default_value;\n                        this._msg.msg('illegal string value for ' + v + ': \"' + val + '\" is replaced by \"' + spec.default_value + '\"', 'warning');\n                    }\n                } else {\n                    newval = val;\n                }\n            } else if (spec.typ == 'integer') {\n                if (/^(\\-|\\+)?[0-9]+$/.test(val)) {\n                    newval = Number(val);\n                } else {\n                    newval = spec.default_value;\n                    this._msg.msg('not a number value for ' + v + ': \"' + val + '\" is replaced by \"' + spec.default_value + '\"', 'warning');\n                }\n                if (newval < spec.limits.min) {\n                    this._msg.msg('number to small for ' + v + ': \"' + newval + '\" is replaced by \"' + spec.limits.min + '\"', 'warning');\n                }\n                if (newval > spec.limits.max) {\n                    this._msg.msg('number to big for ' + v + ': \"' + newval + '\" is replaced by \"' + spec.limits.max + '\"', 'warning');\n                }\n            } else if (spec.typ == 'boolean') {\n                if (spec.vals.has(val)) {\n                    newval = spec.vals.get(val);\n                } else {\n                    newval = spec.default_value;\n                    this._msg.msg('illegal boolean value for ' + v + ': \"' + val + '\" is replaced by \"' + spec.default_value + '\"', 'warning');\n                }\n            }\n        } else {\n            newval = null;\n            this._msg.msg('unknown parameter: ' + v + '=' + val, 'warning');\n        }\n        return newval;\n    },\n    getVars: function getVars(comprehensive) {\n        var vars = [];\n        for (var v in this._data) {\n            var val = this._data[v];\n            var spec = this._specs.get(v);\n            if (comprehensive || spec.url) {\n                if (spec.typ == 'string' || spec.typ == 'integer') {\n                    vars.push(v + '=' + val);\n                } else if (spec.typ == 'boolean') {\n                    var _iteratorNormalCompletion2 = true;\n                    var _didIteratorError2 = false;\n                    var _iteratorError2 = undefined;\n\n                    try {\n                        for (var _iterator2 = spec.vals[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                            var _step2$value = _slicedToArray(_step2.value, 2);\n\n                            var valid_val = _step2$value[0];\n                            var trans_val = _step2$value[1];\n\n                            if (trans_val == val) {\n                                vars.push(v + '=' + valid_val);\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError2 = true;\n                        _iteratorError2 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                                _iterator2.return();\n                            }\n                        } finally {\n                            if (_didIteratorError2) {\n                                throw _iteratorError2;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return vars.join('&');\n    },\n    _getInitstate: function _getInitstate() {\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n            for (var _iterator3 = g.request_vars[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var _step3$value = _slicedToArray(_step3.value, 2);\n\n                var v = _step3$value[0];\n                var val = _step3$value[1];\n\n                if (!this._specs.has(v)) {\n                    this._msg.msg('unknown parameter: ' + v + '=' + val, 'warning');\n                }\n            }\n        } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                }\n            } finally {\n                if (_didIteratorError3) {\n                    throw _iteratorError3;\n                }\n            }\n        }\n\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n            for (var _iterator4 = this._specs[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var _step4$value = _slicedToArray(_step4.value, 2);\n\n                var v = _step4$value[0];\n                var spec = _step4$value[1];\n\n                var val = null;\n                if (g.request_vars.has(v)) {\n                    var raw_val = g.request_vars.get(v);\n                    val = this._validate(v, raw_val);\n                    g.localstorage_vars.set(v, val);\n                } else if (g.localstorage_vars.isSet(v)) {\n                    val = g.localstorage_vars.get(v);\n                } else {\n                    val = spec.default_value;\n                    g.localstorage_vars.set(v, val);\n                }\n                this._data[v] = val;\n            }\n        } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                }\n            } finally {\n                if (_didIteratorError4) {\n                    throw _iteratorError4;\n                }\n            }\n        }\n    },\n    _addHistory: function _addHistory(title, view_url) {\n        var tit = 'DARIAH contribution tool';\n        var this_url = app_url + '?' + this.getVars(false);\n        History.pushState(this._data, tit, this_url);\n    },\n    setState: function setState(v, val) {\n        this._data[v] = val;\n        g.localstorage_vars.set(v, val);\n        this._addHistory();\n    },\n    getState: function getState(v) {\n        return this._data[v];\n    },\n    getValues: function getValues(v) {\n        return this._specs.get(v).vals;\n    },\n    showState: function showState(v, val, mode) {\n        var result = val;\n        var md = mode == undefined ? 'sg' : mode;\n        var showas = this._specs.get(v).showas;\n        if (showas.has(val)) {\n            result = showas.get(val)[mode];\n        }\n        return result;\n    },\n    work: function work() {\n        return function () {\n            var state = History.getState();\n            if (state && state.data) {\n                this._data = state.data;\n                this.page.work();\n            }\n        }.bind(this);\n    }\n};\n\nmodule.exports = ViewState;\n\n},{\"./generic.js\":7,\"./message.js\":11}]},{},[10])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"sourceRoot":"/source/"}