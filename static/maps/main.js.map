{"version":3,"sources":["main.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","Component","name","specs","page","this","variants","_stage","Map","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","vr","value","set","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","stages","keys","st","get","err","_msg","_ids_fetched","Set","container","dst","state","data","related_info","related_values","implementation","specific","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","_s","_i","push","Array","isArray","Object","TypeError","g","Msg","prototype","need","stage","promise","_deed","method","methodCall","bind","timing","getBefore","promises","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_step3$value","prev_name","prev_stage","prev_component","getComponent","hasVariant","$","when","apply","then","ensure","has","once","by_id","_visibility","on","widget","show","hide","_fetch","ids_to_fetch","fetch_url","url_tpl","replace","msg","postFetch","_postFetch","join","ajax","type","url","contentType","dataType","json","_this","clear","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","msgs","m","good","relinfo","forEach","x","relvals","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","add","weld","_weld","getContainer","dest","_destination","prepend","destination","append","ids_asked_for","from_str","getState","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","_wire","wire","_work","work","./generic.js","./message.js","2","Control","component","_widget","_control","_html","html","showState","_dressup","click","preventDefault","setState","_isActive","addClass","find","removeClass","3","CType","Relative","create","constructor","./relative.js","4","EUmap","_map_object","_map_container","_marker","_setvalues","_not_mapped","_preHtml","_myDressup","cc","mapc","height","width","vectorMap","map","backgroundColor","regionsSelectable","markersSelectable","regionsSelectableOne","markersSelectableOne","markerStyle","initial","fill","fill-opacity","stroke","stroke-width","stroke-opacity","hover","cursor","selected","selectedHover","regionStyle","markers","series","values","scale","normalizeFunction","attribute","min","max","regions","outdariah","indariah","onRegionTipShow","el","related_value","rvs","_statistics","onMarkerTipShow","onRegionClick","_related_values_index","onMarkerClick","onRegionSelected","change_state","_type","a_to_str","_unmapped_selected","onMarkerSelected","zoom_p","css","zoom_control","setFocus","result","this_state","empty","_mySetFacet","map_regions","map_markers","_related_state","_step2$value","_no_values","mapo","setSelectedRegions","setSelectedMarkers","_myStats","total","distilled","weighted_statistics","stat","pr","Math","sqrt","setValues","_plainWeld","_myWeld","marker","setv","_step4$value","_related_values_all","_related_values_list","latLng","sort","b","5","Facet","_stats","_enabled_facets","table","h","children","_step$value","facet_name","facet_component","_display","expand_control","mode","that","dt","closest","hidec","morec","showc","expanded_material","condensed_material","not_expanded_material","key","attr","mode_undef","localstorage_vars","isSet","all_facets","each","lc","info","detailcontrols","mother_list","facets","facet_comp","facet","d","v","the_false","discard","_step5$value","_facet2","this_v","_step6$value","_facet","_facet3","stats","6","Filter","_tags","_filter_control","_filter_control2","_box","_completions_dst","_stats_dst","_clear_filter_control","_wire_mode","_distilled","_setFilter","textf","filterc","val","autocomplete","_response","event","ui","dstl","content","_setClear","stat_prefix","statd","tgs","label","cf","flt","flt2","appendTo","source","response","minLength","focus","clearfc","7","_toConsumableArray","arr2","from","escapeHTML","text","chr","deselectText","document","selection","window","getSelection","removeAllRanges","selectText","containerid","range","body","createTextRange","moveToElementText","getElementById","select","_range","createRange","selectNode","addRange","toggleDetail","detail","extra","thedetail","toggle","thiscl","othercl","hasClass","compact","cutoff","size","substr","split","ar","to_str","_Request","parameter","parameters","uri","location","search","indexOf","slice","paramval","request_vars","_localstorage","initNamespaceStorage","localStorage","8","Item","it","dest_row","types","tp","in_dariah","_r","after","9","List","rowstart","rowend","row","open_ids","rid","_set_it","control","10","Page","./page.js","11","on_clear","_trash_control","_trash_control_para","_hide","_on_clear","_show","kind","message_text","12","ViewState","main_lists","getValues","contrib_list","empty_list","_component_specs","Share","TadirahA","TadirahO","TadirahT","_by_id","stages_prev","_before","_ignore","components","spec","child_component","dest_name","parent_component","_resolveTiming","_setHeight","History","Adapter","subtract","wh","innerHeight","w","addEdge","prev_node","next_node","timing_edges","timing_edges_inv","timing_nodes","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","next_stage","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","_name","nexts","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_step17$value","next_name","prevs","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","subset","visited","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","node","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","other_prev_node","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_node","_tasks","_timing","cycle","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","_node2","console","log","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","nodes","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","_node3","addto","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","prev_nodes","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","task","_task$split","_task$split2","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","./components.js","./control.js","./ctype.js","./eumap.js","./facet.js","./filter.js","./item.js","./list.js","./share.js","./tadiraha.js","./tadiraho.js","./tadiraht.js","./viewstate.js","13","rtype","cols","shortsize","_list","_list2","_all_values_control","_cols","_cutoff","_shortsize","type_sg","type_pl","raw_value","compact_value","last_handled","scrollTop","scrollIntoView","behavior","alignToTop","ison","_setFacet","all_selected","facet_cell","facet_cell2","has_related_value","_related_value","nv","_related_value2","related_state","_step7$value","14","slink","prompt","app_url_raw","app_url_cite","getVars","app_url_rawc","pvtitle","animate","opacity","mouseleave","15","16","17","18","_data","_specs","_compile_specs","_getInitstate","_addHistory","_spec_info","vars","vals","default_value","typ","showas","sg","pl","_validate","newval","test","Number","limits","comprehensive","valid_val","trans_val","raw_val","title","view_url","tit","this_url","app_url","pushState"],"mappings":"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","file":"main.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/* COMPONENTS \n * The Page function specifies and builds a list of components\n * Every component on the page corresponds to a function (with a prototype)\n * This function is stored in a generic Component function in a field called specific.\n * Every component has a list of subcomponents. For example, the 'list' component has a subcomponent 'contrib'\n * for the list of contributions, and a subcomponent 'country' for the list of countries.\n * The generic functions of a component take care of:\n * - generating HTML container divs for the subcomponents under specified destination elements if they does not already exist\n * - showing and hiding the subcomponents, and in general, work the current state data to the subcomponents \n * - fetching the subcomponent's data from the server, if needed\n * This *specific* functionality of the components are defined in separate files.\n * Of this specific functionality, the following will be called from the generic component function:\n * - show(vr): inspect the current state and determine whether the subcomponent should be shown or hidden\n * - wire(vr): after the data has been fetched, wrap the data into the desired HTML content of the subcomponent\n *   and add the wiring (click events, change events)\n * In turn, the specific functions can access their associated generic components by this.component\n */\n\n/* GENERIC COMPONENT\n * Here is the generic functionality of each component\n */\n\nvar g = require('./generic.js');\nvar Msg = require('./message.js');\n\nfunction Component(name, specs, page) {\n    this.name = name;\n    this.page = page;\n    this.specs = specs;\n    this.variants = specs.variants;\n    this._stage = new Map();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = this.variants[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var vr = _step.value;\n\n            this._stage.set(vr, new Map());\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this.page.stages.keys()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var st = _step2.value;\n\n                    this._stage.get(vr).set(st, true);\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    this._msg = new Map();\n    this._ids_fetched = new Set();\n    this.container = new Map();\n    this.dst = new Map();\n    this.state = this.page.state;\n    this.data = new Map();\n    this.related_info = new Map();\n    this.related_values = new Map();\n    this.implementation = new specs.specific(this);\n};\n\nComponent.prototype = {\n    /* need, deed, ensure are wrappers around the promise mechanism.\n     * The stage is a stage in processing the component, such as fetch, wire, work.\n     * There should be a method method which does the work and which is expected to return a promise.\n     * If it does not, we detect it, and yield a promise that is resolved with the original return value.\n     * ensure takes care that the function of an action is promised to be execute once, by registering it\n     * as a promise for that stage.\n     * If there is already a fulfilled or pending promise for that action at that stage, no new promise will be made.\n     * Ensure returns a function with no arguments. If it is called, the promise will be made.\n     * So the result of ensure can be put inside the .then() of an other promise.\n     * Now is a function that calls a function and returns the result as promise.\n     */\n    need: function need(vr, stage) {\n        // check whether there is a promise and whether it has been fulfilled\n        var promise = this._stage.get(vr).get(stage);\n        return !promise.state || promise.state() == 'rejected';\n    },\n    _deed: function _deed(vr, stage, method) {\n        // register a promise to perform the method associated with stage by entering it in the book keeping of stages\n        /* we want to pass a method call to a .then() later on.\n         * If we pass it straight, like this.method, .then() will call this function and supplies its own promise object as the this.\n         * That is not our purpose: we want to call the method with the current component object as the this.\n         * Hence we use bind() in order to supply the right this.\n         * Whoever calls this new function methodCall, will perform a true method call of method method on object that.\n         * This is crucial, otherwise all the careful time logic gets mangled, because the promises are stored in the component object.\n         */\n        var methodCall = this[method].bind(this, vr);\n        var timing = this.page.getBefore(this.name, stage);\n        var promises = [];\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n            for (var _iterator3 = timing[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var _step3$value = _slicedToArray(_step3.value, 2);\n\n                var prev_name = _step3$value[0];\n                var prev_stage = _step3$value[1];\n\n                var prev_component = this.page.getComponent(prev_name);\n                if (prev_component.hasVariant(vr)) {\n                    promises.push(prev_component._stage.get(vr).get(prev_stage));\n                }\n            }\n        } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                }\n            } finally {\n                if (_didIteratorError3) {\n                    throw _iteratorError3;\n                }\n            }\n        }\n\n        this._stage.get(vr).set(stage, $.when.apply($, promises).then(methodCall));\n    },\n    ensure: function ensure(vr, stage, method) {\n        /* function to promise that method fun will be executed once and once only or multiple times,\n         * but only if the before actions have been completed\n         */\n        if (this.page.stages.has(stage)) {\n            /* if the component works per id, the once setting of the stage is ignored\n             * because we have to look whether we should execute that stage for new identifiers\n             */\n            var once = this.page.stages.get(stage) && !this.specs.by_id;\n            if (!once || this.need(vr, stage)) {\n                this._deed(vr, stage, method);\n            }\n        }\n    },\n    /* here are the implementations of the functions that are to be wrapped as promises\n     * They can focus on the work, may or may not yield a promise\n     */\n    hasVariant: function hasVariant(vr) {\n        return this.variants.has(vr);\n    },\n    _visibility: function _visibility(vr, on) {\n        if (this.hasVariant(vr)) {\n            if (this.container.has(vr)) {\n                var widget = this.container.get(vr);\n                if (on) {\n                    widget.show();\n                } else {\n                    widget.hide();\n                }\n            }\n        }\n    },\n    _fetch: function _fetch(vr, ids_to_fetch) {\n        // get the material by AJAX if needed\n        var fetch_url = url_tpl.replace(/_c_/, 'data').replace(/_f_/, this.specs.fetch_url + '_' + vr) + '.json';\n        this._msg.get(vr).msg('fetching data ...');\n        var postFetch = this._postFetch.bind(this, vr);\n        if (!(ids_to_fetch == undefined)) {\n            fetch_url += '?ids=' + ids_to_fetch.join(',');\n        }\n        return $.ajax({\n            type: 'POST',\n            url: fetch_url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json'\n        }).then(function (json) {\n            postFetch(json, ids_to_fetch);\n        });\n    },\n    _postFetch: function _postFetch(vr, json, ids_to_fetch) {\n        var _this = this;\n\n        // receive material after AJAX call\n        this._msg.get(vr).clear();\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n            for (var _iterator4 = json.msgs[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var m = _step4.value;\n\n                this._msg.get(vr).msg(m);\n            }\n        } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                }\n            } finally {\n                if (_didIteratorError4) {\n                    throw _iteratorError4;\n                }\n            }\n        }\n\n        if (json.good) {\n            if ('data' in json) {\n                this.data.set(vr, json.data);\n            }\n            if ('relinfo' in json) {\n                (function () {\n                    var r = new Map();\n                    json.relinfo.forEach(function (x) {\n                        r.set(x[0], new Set(x[1]));\n                    });\n                    _this.related_info.set(vr, r);\n                })();\n            }\n            if ('relvals' in json) {\n                this.related_values.set(vr, new Map(json.relvals));\n            }\n            if (this.specs.by_id) {\n                var _iteratorNormalCompletion5 = true;\n                var _didIteratorError5 = false;\n                var _iteratorError5 = undefined;\n\n                try {\n                    for (var _iterator5 = ids_to_fetch[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                        var i = _step5.value;\n\n                        this._ids_fetched.add(i);\n                    }\n                } catch (err) {\n                    _didIteratorError5 = true;\n                    _iteratorError5 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                            _iterator5.return();\n                        }\n                    } finally {\n                        if (_didIteratorError5) {\n                            throw _iteratorError5;\n                        }\n                    }\n                }\n            }\n        }\n        this.implementation.weld(vr);\n    },\n    _weld: function _weld(vr) {\n        this.dst = this.page.getContainer(this.specs.dest, this.variants);\n        if (!this.specs.by_id) {\n            this.container.set(vr, $('#' + this.name + '_' + vr));\n            if (this.container.get(vr).length == 0) {\n                var destination = this.dst.get(vr);\n                destination.append('<div id=\"msg_' + this.name + '_' + vr + '\"></div>');\n                destination.append('<div id=\"' + this.name + '_' + vr + '\" class=\"component\"></div>');\n                this.container.set(vr, $('#' + this.name + '_' + vr));\n            }\n            this._msg.set(vr, new Msg('msg_' + this.name + '_' + vr));\n        } else {\n            if (!this._msg.has(vr)) {\n                var _destination = this.dst.get(vr);\n                _destination.prepend('<div id=\"msg_' + this.name + '_' + vr + '\"></div>');\n                this._msg.set(vr, new Msg('msg_' + this.name + '_' + vr));\n            }\n        }\n        if (this.specs.fetch_url != null) {\n            var ids_to_fetch = [];\n            if (this.specs.by_id) {\n                var ids_asked_for = g.from_str(this.state.getState(this.specs.fetch_url + '_' + vr));\n                var _iteratorNormalCompletion6 = true;\n                var _didIteratorError6 = false;\n                var _iteratorError6 = undefined;\n\n                try {\n                    for (var _iterator6 = ids_asked_for[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                        var i = _step6.value;\n\n                        if (!this._ids_fetched.has(i)) {\n                            ids_to_fetch.push(i);\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError6 = true;\n                    _iteratorError6 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                            _iterator6.return();\n                        }\n                    } finally {\n                        if (_didIteratorError6) {\n                            throw _iteratorError6;\n                        }\n                    }\n                }\n\n                if (ids_to_fetch.length != 0) {\n                    return this._fetch(vr, ids_to_fetch);\n                }\n            } else {\n                return this._fetch(vr);\n            }\n        } else {\n            this.implementation.weld(vr);\n        }\n    },\n    _wire: function _wire(vr) {\n        this.implementation.wire(vr); // perform wire actions that are specific to this component\n    },\n    _work: function _work(vr) {\n        this._visibility(vr, true);\n        this.implementation.work(vr); // perform work actions that are specific to this component\n    },\n    weld: function weld(vr) {\n        if (this.hasVariant(vr) && this.implementation.show(vr)) {\n            this.ensure(vr, 'weld', '_weld');\n        }\n    },\n    wire: function wire(vr) {\n        if (this.hasVariant(vr) && this.implementation.show(vr)) {\n            this.ensure(vr, 'wire', '_wire');\n        }\n    },\n    work: function work(vr) {\n        // work (changed) state to current material\n        if (this.hasVariant(vr) && this.implementation.show(vr)) {\n            // show/hide depending on the specific condition\n            this.ensure(vr, 'work', '_work');\n        } else {\n            this._visibility(vr, false);\n        }\n    }\n};\n\nmodule.exports = Component;\n\n},{\"./generic.js\":7,\"./message.js\":11}],2:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: Control\n * This manages the controls that correspond to lists of records to be displayed in the middle column\n * Clicking on a control shows the corresponding list and hides all others.\n */\n\nfunction Control(component) {\n    this.component = component;\n    this._widget = new Map();\n    this._control = new Map();\n};\n\nControl.prototype = {\n    _html: function _html(vr) {\n        this.component.container.get(vr).html('<a class=\"control_title\" href=\"#\">' + this.component.state.showState('list', vr, 'sg') + '</a> ');\n    },\n    _dressup: function _dressup(vr) {\n        var _this = this;\n\n        this._control.get(vr).click(function (e) {\n            e.preventDefault();\n            _this.component.state.setState('list', vr);\n        });\n    },\n    _isActive: function _isActive(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    show: function show(vr) {\n        return true;\n    },\n    weld: function weld(vr) {\n        this._html(vr);\n        this._widget.set(vr, this.component.container.get(vr));\n        this._widget.get(vr).addClass('control_big');\n        this._control.set(vr, this.component.container.get(vr).find('a'));\n    },\n    wire: function wire(vr) {\n        this._dressup(vr);\n    },\n    work: function work(vr) {\n        if (this._isActive(vr)) {\n            this._control.get(vr).addClass('ison');\n            this._widget.get(vr).addClass('ison');\n        } else {\n            this._control.get(vr).removeClass('ison');\n            this._widget.get(vr).removeClass('ison');\n        }\n    }\n};\n\nmodule.exports = Control;\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: ctype\n * This manages the facet \"contribution type\"\n */\n\nvar Relative = require('./relative.js');\n\nfunction CType(component) {\n  Relative.call(this, component, 'type');\n};\n\nCType.prototype = Object.create(Relative.prototype);\nCType.prototype.constructor = CType;\n\nmodule.exports = CType;\n\n},{\"./relative.js\":13}],4:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/* INDIVIDUAL COMPONENT: EUmap\n * This manages a clickable map of the EU countries\n * See http://jvectormap.com/documentation/javascript-api/jvm-map/\n */\n\nvar g = require('./generic.js');\nvar Relative = require('./relative.js');\n\nfunction EUmap(component) {\n    Relative.call(this, component, 'country');\n    this._map_object = new Map();\n    this._map_container = new Map();\n    this._marker = new Map();\n    this._setvalues = new Map();\n    this._not_mapped = new Set(['-', 'CY', 'KS', 'TR', 'MC', 'GE']);\n};\n\nEUmap.prototype = Object.create(Relative.prototype);\nEUmap.prototype.constructor = EUmap;\nEUmap.prototype._preHtml = function (vr) {\n    return '<div id=\"map-europe_' + vr + '\" class=\"position\"><p class=\"zoom\"><a class=\"fa fa-arrows\" href=\"#\" title=\"zoom to fit all countries\"/></p></div>';\n};\nEUmap.prototype._myDressup = function (vr) {\n    var _this = this;\n\n    var that = this;\n    var cc = this.component.container.get(vr);\n    this._map_container.set(vr, cc.find('#map-europe_' + vr));\n    var mapc = this._map_container.get(vr);\n    var height = mapc.width() * 0.6;\n    mapc.width('100%');\n    mapc.height(height);\n    mapc.vectorMap({\n        'map': 'europe_mill',\n        backgroundColor: '#ccccff',\n        regionsSelectable: true,\n        markersSelectable: true,\n        regionsSelectableOne: false,\n        markersSelectableOne: false,\n        markerStyle: {\n            initial: {\n                fill: '#008800',\n                'fill-opacity': 0.2,\n                stroke: 'none',\n                'stroke-width': 0,\n                'stroke-opacity': 0.2,\n                'r': 1\n            },\n            hover: {\n                cursor: 'pointer',\n                stroke: '#ffff44',\n                'stroke-width': 1,\n                'stroke-opacity': 1\n            },\n            selected: {\n                fill: '#008800',\n                'fill-opacity': 1\n            },\n            selectedHover: {}\n        },\n        regionStyle: {\n            initial: {\n                fill: '#bbbbbb',\n                'fill-opacity': 1,\n                stroke: 'none',\n                'stroke-width': 0,\n                'stroke-opacity': 1\n            },\n            hover: {\n                cursor: 'pointer',\n                stroke: '#ffff44',\n                'stroke-width': 3,\n                'stroke-opacity': 1\n            },\n            selected: {\n                fill: '#dd8844',\n                'fill-opacity': 1\n            },\n            selectedHover: {}\n        },\n        markers: this._marker.get(vr),\n        series: {\n            markers: [{\n                values: {},\n                scale: [0, 20],\n                normalizeFunction: 'linear',\n                attribute: 'r',\n                min: 0,\n                max: 100\n            }],\n            regions: [{\n                scale: {\n                    'outdariah': '#ffffff',\n                    'indariah': '#ffddbb'\n                },\n                attribute: 'fill',\n                values: this._setvalues.get(vr)\n            }]\n        },\n        onRegionTipShow: function (e, el, related_value) {\n            var rvs = this._statistics.get(vr);\n            el.html(related_value + ': ' + (rvs.has(related_value) ? rvs.get(related_value) : 'not in DARIAH'));\n        }.bind(this),\n        onMarkerTipShow: function (e, el, related_value) {\n            var rvs = this._statistics.get(vr);\n            el.html(related_value + ': ' + (rvs.has(related_value) ? rvs.get(related_value) : 'not in DARIAH'));\n        }.bind(this),\n        onRegionClick: function (e, related_value) {\n            if (!this._related_values_index.get(vr).has(related_value)) {\n                e.preventDefault();\n            }\n        }.bind(this),\n        onMarkerClick: function (e, related_value) {\n            if (!this._related_values_index.get(vr).has(related_value)) {\n                e.preventDefault();\n            }\n        }.bind(this),\n        onRegionSelected: function (e, related_value, i, selected) {\n            if (this.change_state) {\n                this.component.state.setState('rel_' + this._type + '_' + vr, g.a_to_str(selected) + this._unmapped_selected(vr));\n            }\n        }.bind(this),\n        onMarkerSelected: function (e, related_value, i, selected) {\n            if (this.change_state) {\n                this.component.state.setState('rel_' + this._type + '_' + vr, g.a_to_str(selected) + this._unmapped_selected(vr));\n            }\n        }.bind(this)\n    });\n    var zoom_p = cc.find('p.zoom');\n    zoom_p.css('top', height - 20 + 'px');\n    zoom_p.css('left', '10px');\n    var zoom_control = cc.find('p.zoom a');\n    zoom_control.click(function (e) {\n        e.preventDefault();\n        _this._map_object.get(vr).setFocus({ regions: ['GB', 'GR'] });\n    });\n    this._map_object.set(vr, mapc.vectorMap('get', 'mapObject'));\n    this._map_object.get(vr).setFocus({ regions: ['GB', 'GR'] });\n};\nEUmap.prototype._unmapped_selected = function (vr) {\n    var result = [];\n    var this_state = g.from_str(vr, this.component.state.getState('rel_' + this._type + '_' + vr));\n    var empty = true;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = this._not_mapped[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var related_value = _step.value;\n\n            if (this_state.has(related_value)) {\n                result.push(related_value);\n                empty = false;\n            }\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    return empty ? '' : ',' + result.join(',');\n};\nEUmap.prototype._mySetFacet = function (vr) {\n    this.change_state = false;\n    /* some countries are not on the map, we do show those countries in the list but not on the map.\n     * Same for -, the key that denotes ALL countries\n     */\n    var map_regions = {};\n    var map_markers = {};\n    var related_values = this._related_state.get(vr);\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n        for (var _iterator2 = this.component.related_values.get(vr)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _step2$value = _slicedToArray(_step2.value, 2);\n\n            var i = _step2$value[0];\n            var related_value = _step2$value[1];\n\n            if (!this._not_mapped.has(i) && i != this._no_values.value) {\n                map_regions[i] = related_values.has(i);\n                if (related_value[1]) {\n                    map_markers[i] = related_values.has(i);\n                }\n            }\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally {\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n\n    var mapo = this._map_object.get(vr);\n    mapo.setSelectedRegions(map_regions);\n    mapo.setSelectedMarkers(map_markers);\n    this.change_state = true;\n};\nEUmap.prototype._myStats = function (vr) {\n    var total = this.distilled.get(vr).length;\n    if (total == 0) {\n        total = 1;\n    }\n    var weighted_statistics = {};\n    var rvs = this._statistics.get(vr);\n    var _iteratorNormalCompletion3 = true;\n    var _didIteratorError3 = false;\n    var _iteratorError3 = undefined;\n\n    try {\n        for (var _iterator3 = rvs[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n            var _step3$value = _slicedToArray(_step3.value, 2);\n\n            var related_value = _step3$value[0];\n            var stat = _step3$value[1];\n\n            if (related_value != this._no_values.value) {\n                var pr = 100 * stat / total;\n                weighted_statistics[related_value] = total < 10 ? pr : 10 * Math.sqrt(pr);\n            }\n        }\n    } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n            }\n        } finally {\n            if (_didIteratorError3) {\n                throw _iteratorError3;\n            }\n        }\n    }\n\n    this._map_object.get(vr).series.markers[0].setValues(weighted_statistics);\n};\nEUmap.prototype._plainWeld = function (vr) {};\nEUmap.prototype._myWeld = function (vr) {\n    this._marker.set(vr, {});\n    this._setvalues.set(vr, {});\n    var related_values = this.component.related_values.get(vr);\n    var marker = this._marker.get(vr);\n    var setv = this._setvalues.get(vr);\n    var _iteratorNormalCompletion4 = true;\n    var _didIteratorError4 = false;\n    var _iteratorError4 = undefined;\n\n    try {\n        for (var _iterator4 = related_values[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n            var _step4$value = _slicedToArray(_step4.value, 2);\n\n            var i = _step4$value[0];\n            var related_value = _step4$value[1];\n\n            if (related_value[1]) {\n                this._related_values_all.get(vr).add(i);\n                this._related_values_list.get(vr).push(i);\n                this._related_values_index.get(vr).set(i, related_value[0]);\n                marker[i] = { latLng: [related_value[2], related_value[3]], name: related_value[0] };\n                setv[i] = 'indariah';\n            } else {\n                setv[i] = 'outdariah';\n            }\n        }\n    } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                _iterator4.return();\n            }\n        } finally {\n            if (_didIteratorError4) {\n                throw _iteratorError4;\n            }\n        }\n    }\n\n    this._related_values_list.get(vr).sort(function (a, b) {\n        return related_values.get(a) < related_values.get(b) ? -1 : related_values.get(a)[0] > related_values.get(b)[0] ? 1 : 0;\n    });\n};\n\nmodule.exports = EUmap;\n\n},{\"./generic.js\":7,\"./relative.js\":13}],5:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/* INDIVIDUAL COMPONENT: Facets\n * This sets up a list of facets for the lists of records to be displayed in the middle column\n * It will host individual facets\n */\n\nvar g = require('./generic.js');\n\nfunction Facet(component) {\n    this.component = component;\n    this._stats = new Map();\n    this._enabled_facets = new Map();\n    this.table = new Map();\n    this.distilled = new Map();\n};\n\nFacet.prototype = {\n    _html: function _html(vr) {\n        var h = '<p><span fct=\"all\"></span>Filtering <span id=\"fstats_' + vr + '\"></span></p>';\n        this.component.container.get(vr).html(h);\n    },\n    show: function show(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    weld: function weld(vr) {\n        var children = this.component.children;\n        this._enabled_facets.set(vr, new Map());\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var _step$value = _slicedToArray(_step.value, 2);\n\n                var facet_name = _step$value[0];\n                var facet_component = _step$value[1];\n\n                if (facet_component.hasVariant(vr)) {\n                    this._enabled_facets.get(vr).set(facet_name, facet_component);\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        this._html(vr);\n    },\n    _display: function _display(expand_control, mode) {\n        var that = this;\n        var dt = expand_control.closest('p');\n        var hidec = dt.find('.hidec');\n        var morec = dt.find('.morec');\n        var showc = dt.find('.showc');\n        var expanded_material = expand_control.closest('div').find('table,.flt');\n        var condensed_material = expand_control.closest('div').find('.value_list2,.flt_compact');\n        var not_expanded_material = expand_control.closest('div').find('.flt_not_expanded');\n        var key = 'fctx_' + expand_control.closest('span').attr('fct');\n        var mode_undef = mode == undefined;\n        if (mode_undef) {\n            if (g.localstorage_vars.isSet(key)) {\n                mode = g.localstorage_vars.get(key);\n            } else {\n                mode = 1;\n            }\n        }\n        var all_facets = key == 'fctx_all';\n        if (all_facets && !mode_undef) {\n            expand_control.closest('div').find('div.component span[fct]').each(function () {\n                that._display($(this), mode);\n            });\n        }\n        g.localstorage_vars.set(key, mode);\n        if (mode == 0) {\n            hidec.show();\n            morec.hide();\n            showc.hide();\n            if (!all_facets) {\n                not_expanded_material.show();\n                expanded_material.hide();\n                condensed_material.hide();\n            }\n        } else if (mode == 1) {\n            hidec.hide();\n            morec.show();\n            showc.hide();\n            if (!all_facets) {\n                not_expanded_material.show();\n                expanded_material.hide();\n                condensed_material.show();\n            }\n        } else {\n            hidec.hide();\n            morec.hide();\n            showc.show();\n            if (!all_facets) {\n                not_expanded_material.hide();\n                expanded_material.show();\n                condensed_material.hide();\n            }\n        }\n    },\n    wire: function wire(vr) {\n        var that = this;\n        var cc = this.component.container.get(vr);\n        var lc = this.component.page.getComponent('list').container.get(vr);\n        this._stats.set(vr, cc.find('#fstats_' + vr));\n        this.table.set(vr, lc.find('#table_' + vr));\n        var info = ' details; click to change level of details';\n        var detailcontrols = '<a class=\"showc fa fa-fw fa-list-ul\" href=\"#\" title=\"full' + info + '\"></a><a class=\"morec fa fa-fw fa-align-left\" href=\"#\" title=\"condensed' + info + '\"></a><a class=\"hidec fa fa-fw fa-minus\" href=\"#\" title=\"hidden' + info + '\"></a>';\n        cc.addClass('facet');\n        cc.find('span[fct]').each(function () {\n            $(this).html(detailcontrols + '&nbsp');\n            that._display($(this));\n        });\n        cc.find('.hidec').click(function (e) {\n            e.preventDefault();\n            that._display($(this), 1);\n        });\n        cc.find('.morec').click(function (e) {\n            e.preventDefault();\n            that._display($(this), 2);\n        });\n        cc.find('.showc').click(function (e) {\n            e.preventDefault();\n            that._display($(this), 0);\n        });\n    },\n    work: function work(vr) {\n        this.table.get(vr).find('tr[rid],tr[iid]').hide();\n        var mother_list = this.component.page.getComponent('list');\n        var data = mother_list.data.get(vr);\n        var facets = this._enabled_facets.get(vr);\n        this.distilled.set(vr, []);\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n            for (var _iterator2 = facets[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var _step2$value = _slicedToArray(_step2.value, 2);\n\n                var facet_name = _step2$value[0];\n                var facet_comp = _step2$value[1];\n\n                var facet = facet_comp.implementation;\n                facet.distilled.set(vr, []);\n            }\n        } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                    _iterator2.return();\n                }\n            } finally {\n                if (_didIteratorError2) {\n                    throw _iteratorError2;\n                }\n            }\n        }\n\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n            for (var _iterator3 = data[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var d = _step3.value;\n\n                var v = true; // will hold whether this row passes all facets\n                /* We collect in the distilled member of this facet object the collective results of all individual facets,\n                 * Moreover, for each facet, we collect in its distilled member the results when all facets are applied except the facet in question\n                 * so: \n                 * 1. rows with a failure for 2 or more facets are discarded\n                 * 2. rows with a failure for exactly one facet are added to the data for that facet\n                 * 3. rows which pass all facets are added to all facets, and also to the final filtered set\n                 */\n                var the_false = null; // which facet has yielded false (if there are more than one we'll discard the row\n                var discard = false; // becomes true when we have encounterd 2 facets that yield false\n                var _iteratorNormalCompletion5 = true;\n                var _didIteratorError5 = false;\n                var _iteratorError5 = undefined;\n\n                try {\n                    for (var _iterator5 = facets[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                        var _step5$value = _slicedToArray(_step5.value, 2);\n\n                        var facet_name = _step5$value[0];\n                        var facet_comp = _step5$value[1];\n\n                        if (!discard) {\n                            var _facet2 = facet_comp.implementation;\n                            var this_v = _facet2.v(vr, d[0]); // this_v: whether the row passes this facet\n                            if (!this_v) {\n                                v = false;\n                                if (the_false == null) {\n                                    // this is the first failure, we store the facet number in the_false\n                                    the_false = _facet2;\n                                } // else we discard the row altogether\n                                else {\n                                        discard = true;\n                                    }\n                            }\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError5 = true;\n                    _iteratorError5 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                            _iterator5.return();\n                        }\n                    } finally {\n                        if (_didIteratorError5) {\n                            throw _iteratorError5;\n                        }\n                    }\n                }\n\n                if (!discard) {\n                    if (v) {\n                        this.distilled.get(vr).push(d[0]);\n                        this.table.get(vr).find('tr[rid=\"' + d[0] + '\"],tr[iid=\"' + d[0] + '\"]').show();\n                    }\n                    if (the_false != null) {\n                        the_false.distilled.get(vr).push(d[0]);\n                    } else {\n                        var _iteratorNormalCompletion6 = true;\n                        var _didIteratorError6 = false;\n                        var _iteratorError6 = undefined;\n\n                        try {\n                            for (var _iterator6 = facets[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                                var _step6$value = _slicedToArray(_step6.value, 2);\n\n                                var facet_name = _step6$value[0];\n                                var facet_comp = _step6$value[1];\n\n                                var _facet = facet_comp.implementation;\n                                _facet.distilled.get(vr).push(d[0]);\n                            }\n                        } catch (err) {\n                            _didIteratorError6 = true;\n                            _iteratorError6 = err;\n                        } finally {\n                            try {\n                                if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                                    _iterator6.return();\n                                }\n                            } finally {\n                                if (_didIteratorError6) {\n                                    throw _iteratorError6;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                }\n            } finally {\n                if (_didIteratorError3) {\n                    throw _iteratorError3;\n                }\n            }\n        }\n\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n            for (var _iterator4 = facets[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var _step4$value = _slicedToArray(_step4.value, 2);\n\n                var facet_name = _step4$value[0];\n                var facet_comp = _step4$value[1];\n\n                var _facet3 = facet_comp.implementation;\n                _facet3.stats(vr);\n            }\n        } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                }\n            } finally {\n                if (_didIteratorError4) {\n                    throw _iteratorError4;\n                }\n            }\n        }\n\n        this._stats.get(vr).html(this.distilled.get(vr).length + ' of ' + data.length);\n    }\n};\n\nmodule.exports = Facet;\n\n},{\"./generic.js\":7}],6:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: Filters\n * This is a list of filter controls corresponding to lists of records to be displayed in the middle column\n * Setting a filter control filters the associated list.\n */\n\nfunction Filter(component) {\n    this.component = component;\n    this._tags = new Map();\n    this._filter_control = new Map();\n    this._filter_control2 = new Map();\n    this._box = new Map();\n    this._completions_dst = new Map();\n    this._stats_dst = new Map();\n    this._clear_filter_control = new Map();\n    this._wire_mode = new Map();\n    this._distilled = new Map();\n    this.distilled = new Map();\n};\n\nFilter.prototype = {\n    _html: function _html(vr) {\n        var h = '\\n<div>\\n    <p class=\"dctrl\"><span fct=\"' + this.component.name + '-' + vr + '\"></span> By full text search\\n        <a href=\"#\" title=\"modify full text filter\" id=\"flt2_' + vr + '\" class=\"flt_not_expanded facet_single ison flt_pat\"></a>\\n        <a href=\"#\" class=\"control_med fa fa-close filtc\" id=\"clearf_' + vr + '\"></a>\\n    </p>\\n    <div id=\"fltw_' + vr + '\">\\n        <p id=\"fbox_' + vr + '\" class=\"flt control_med fbox ui-widget\">\\n            <input id=\"flt_' + vr + '\" class=\"flt flt_pat\"/>\\n            <span fbox class=\"stats\" id=\"stats_' + vr + '\"></span>\\n        </p>\\n        <div id=\"autoc_' + vr + '\" style=\"display: none;\">here ' + vr + '</div>\\n    </div>\\n</div>';\n        this.component.container.get(vr).html(h);\n    },\n    _setFilter: function _setFilter(vr) {\n        var textf = this.component.state.getState('flt_' + vr);\n        var filterc = this._filter_control.get(vr);\n        this._filter_control2.get(vr).html(textf);\n        filterc.val(textf);\n        filterc.autocomplete('search', textf);\n    },\n    _response: function _response(vr) {\n        return function (event, ui) {\n            this._distilled.set(vr, {});\n            var dstl = this._distilled.get(vr);\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = ui.content[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var u = _step.value;\n\n                    dstl[u.value] = 1;\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            if (!this._wire_mode.get(vr)) {\n                var textf = this._filter_control.get(vr).val();\n                this.component.state.setState('flt_' + vr, textf);\n            }\n        }.bind(this);\n    },\n    _setClear: function _setClear(vr) {\n        var _this = this;\n\n        this._clear_filter_control.get(vr).click(function (e) {\n            e.preventDefault();\n            var filterc = _this._filter_control.get(vr);\n            filterc.val('');\n            filterc.autocomplete('search', '');\n        });\n    },\n    stats: function stats(vr) {\n        var stat_prefix = void 0;\n        var statd = this._stats_dst.get(vr);\n        if (this._filter_control.get(vr).val() == '') {\n            stat_prefix = '';\n            statd.removeClass('ison');\n        } else {\n            stat_prefix = this.facet.distilled.get(vr).length + ' of ';\n            statd.addClass('ison');\n        }\n        statd.html('' + stat_prefix + this.distilled.get(vr).length);\n    },\n    v: function v(vr, i) {\n        return i in this._distilled.get(vr);\n    },\n    show: function show(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    weld: function weld(vr) {\n        this._html(vr);\n    },\n    wire: function wire(vr) {\n        if (!this.facet) {\n            this.facet = this.component.page.getComponent('facet').implementation;\n        }\n        var data = this.component.page.getComponent('list').data.get(vr);\n        this._tags.set(vr, []);\n        var tgs = this._tags.get(vr);\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n            for (var _iterator2 = data[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var d = _step2.value;\n\n                tgs.push({ label: d[1], value: '' + d[0] });\n            }\n        } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                    _iterator2.return();\n                }\n            } finally {\n                if (_didIteratorError2) {\n                    throw _iteratorError2;\n                }\n            }\n        }\n\n        this._distilled.set(vr, {});\n        this.distilled.set(vr, []);\n        var cc = this.component.container.get(vr);\n        var cf = cc.find('#fltw_' + vr);\n        var flt = $('#flt_' + vr);\n        this._filter_control.set(vr, flt);\n        var flt2 = $('#flt2_' + vr);\n        this._filter_control2.set(vr, flt2);\n        this._box.set(vr, cf.find('#fbox_' + vr));\n        this._completions_dst.set(vr, cf.find('#autoc_' + vr));\n        this._stats_dst.set(vr, cf.find('#stats_' + vr));\n        this._clear_filter_control.set(vr, cc.find('#clearf_' + vr));\n        this._filter_control.get(vr).autocomplete({\n            appendTo: this._completions_dst.get(vr),\n            source: this._tags.get(vr),\n            response: this._response(vr),\n            minLength: 0\n        });\n        flt2.click(function (e) {\n            e.preventDefault();\n            $(this).closest('div').find('.morec').click();\n            flt[0].focus();\n        });\n        this._wire_mode.set(vr, true);\n        this._setClear(vr);\n        this._setFilter(vr);\n        this._wire_mode.set(vr, false);\n    },\n    work: function work(vr) {\n        var textf = this.component.state.getState('flt_' + vr);\n        var clearfc = this._clear_filter_control.get(vr);\n        if (textf == '') {\n            this._box.get(vr).removeClass('ison');\n            clearfc.hide();\n        } else {\n            this._box.get(vr).addClass('ison');\n            clearfc.show();\n        }\n        this._filter_control2.get(vr).html(textf);\n    }\n};\n\nmodule.exports = Filter;\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/* GENERIC\n * Some function for very generic purposes\n */\n\nvar chr = new Map([['&', '&amp;'], ['<', '&lt;'], ['>', '&gt;']]);\n\nfunction escapeHTML(text) {\n    return text.replace(/[&<>]/g, function (a) {\n        return chr.get(a) || a;\n    });\n};\n\nvar _Request = {\n    parameter: function parameter(name) {\n        return this.parameters().get(name);\n    },\n    parameters: function parameters() {\n        var result = new Map();\n        var uri = window.location.search;\n        if (uri.indexOf(\"?\") === -1) {\n            return result;\n        }\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = uri.slice(1).split(\"&\")[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var paramval = _step.value;\n\n                result.set.apply(result, _toConsumableArray(paramval.split(\"=\")));\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        return result;\n    }\n};\n\nvar request_vars = _Request.parameters();\nvar _localstorage = $.initNamespaceStorage('req');\nvar localstorage_vars = _localstorage.localStorage;\n\nfunction deselectText() {\n    if (document.selection) {\n        document.selection.empty();\n    } else if (window.getSelection) {\n        window.getSelection().removeAllRanges();\n    }\n};\n\nfunction selectText(containerid) {\n    deselectText();\n    if (document.selection) {\n        var range = document.body.createTextRange();\n        range.moveToElementText(document.getElementById(containerid));\n        range.select();\n    } else if (window.getSelection) {\n        var _range = document.createRange();\n        _range.selectNode(document.getElementById(containerid));\n        window.getSelection().addRange(_range);\n    }\n};\n\nfunction toggleDetail(widget, detail, extra) {\n    var thedetail = detail == undefined ? widget.closest('div').find('.detail') : detail;\n    thedetail.toggle();\n    if (extra != undefined) {\n        extra(widget);\n    }\n    var thiscl = void 0,\n        othercl = void 0;\n    if (widget.hasClass('fa-chevron-right')) {\n        thiscl = 'fa-chevron-right';\n        othercl = 'fa-chevron-down';\n    } else {\n        thiscl = 'fa-chevron-down';\n        othercl = 'fa-chevron-right';\n    }\n    widget.removeClass(thiscl);\n    widget.addClass(othercl);\n};\n\nfunction compact(cutoff, size, text) {\n    return text.length > cutoff ? text.replace(/[^ -]+/g, function (x) {\n        return x.substr(0, size);\n    }) : text;\n};\n\nfunction from_str(st) {\n    return st !== null && st != undefined && st != '' ? new Set(st.split(',')) : new Set();\n};\nfunction a_to_str(ar) {\n    return ar.join(',');\n};\nfunction to_str(set) {\n    return Array.from(set).join(',');\n};\n\nmodule.exports.escapeHTML = escapeHTML;\nmodule.exports.request_vars = request_vars;\nmodule.exports.localstorage_vars = localstorage_vars;\nmodule.exports.selectText = selectText;\nmodule.exports.deselectText = deselectText;\nmodule.exports.toggleDetail = toggleDetail;\nmodule.exports.compact = compact;\nmodule.exports.from_str = from_str;\nmodule.exports.to_str = to_str;\nmodule.exports.a_to_str = a_to_str;\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: Item\n * This manages the actual records to be displayed inside the list in the middle column.\n * The subcomponents corresponds to the individual lists, such as country, countribution\n * There is an extra argument that specifies the ids of the items that should be displayed.\n * All functionality (except show) is delegated to specific functions\n */\n\nfunction Item(component) {\n    this.component = component;\n};\n\nItem.prototype = {\n    _html: function _html(vr, it) {\n        var destination = this.component.dst.get(vr);\n        var dest_row = destination.find('tr[rid=\"' + it[0] + '\"]');\n        var h = '<tr iid=\"' + it[0] + '\">';\n\n        if (vr == 'contrib') {\n            var types = [];\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = it[5][Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var tp = _step.value;\n\n                    types.push('<a href=\"#\" tid=\"' + tp[0] + '\">' + tp[1] + '</a>');\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n\n            h += '\\n<td colspan=\"2\">\\n<b>Contact person:</b> ' + it[2] + '<br/>\\n<b>Country:</b> ' + it[3] + ' = ' + it[4] + '<br/>\\n<b>Types:</b> ' + types.join(', ') + '</br>\\n</td>\\n';\n        } else if (vr == 'country') {\n            var _iteratorNormalCompletion2 = true;\n            var _didIteratorError2 = false;\n            var _iteratorError2 = undefined;\n\n            try {\n                for (var _iterator2 = this.component.data.get(vr)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                    var r = _step2.value;\n\n                    in_dariah = r[3] == 1 ? 'dariah' : '';\n                    h += '<td class=\"country_code\">' + r[1] + '<td><td class=\"country_name\">' + r[2] + '<td><td class=\"in_dariah\">' + in_dariah + '</td><td class=\"latlng\">' + r[4] + '</td><td class=\"latlng\">' + r[5] + '</td>';\n                }\n            } catch (err) {\n                _didIteratorError2 = true;\n                _iteratorError2 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                        _iterator2.return();\n                    }\n                } finally {\n                    if (_didIteratorError2) {\n                        throw _iteratorError2;\n                    }\n                }\n            }\n        } else if (vr == 'type' || vr == 'tadiraha' || vr == 'tadiraho' || vr == 'tadiraht') {\n            var _iteratorNormalCompletion3 = true;\n            var _didIteratorError3 = false;\n            var _iteratorError3 = undefined;\n\n            try {\n                for (var _iterator3 = this.component.data.get(vr)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                    var _r = _step3.value;\n\n                    h += '<td class=\"value\">' + _r[1] + '<td>';\n                }\n            } catch (err) {\n                _didIteratorError3 = true;\n                _iteratorError3 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                        _iterator3.return();\n                    }\n                } finally {\n                    if (_didIteratorError3) {\n                        throw _iteratorError3;\n                    }\n                }\n            }\n        }\n        h += '</tr>';\n        dest_row.after(h);\n    },\n    show: function show(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    weld: function weld(vr) {\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n            for (var _iterator4 = this.component.data.get(vr)[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var it = _step4.value;\n\n                this._html(vr, it);\n            }\n        } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                }\n            } finally {\n                if (_didIteratorError4) {\n                    throw _iteratorError4;\n                }\n            }\n        }\n    },\n    wire: function wire(vr) {},\n    work: function work(vr) {}\n};\n\nmodule.exports = Item;\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: List\n * This manages the actual lists of records to be displayed in the middle column.\n * The subcomponents corresponds to the individual lists, such as country, countribution\n * All functionality (except show) is delegated to specific functions\n */\n\nvar g = require('./generic.js');\n\nfunction List(component) {\n    this.component = component;\n};\n\nList.prototype = {\n    _html: function _html(vr) {\n        var h = '';\n        h += '<table id=\"table_' + vr + '\">';\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = this.component.data.get(vr)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var r = _step.value;\n\n                var rowstart = '<tr rid=\"' + r[0] + '\"><td><a class=\"showc fa fa-fw fa-list-ul\" href=\"#\" title=\"hide fields\"></a><a class=\"hidec fa fa-fw fa-minus\" href=\"#\" title=\"show fields\"></a></td>';\n                var rowend = '</tr>';\n                if (vr == 'contrib') {\n                    h += rowstart + '<td><a href=\"#\" class=\"fa fa-fw fa-minus\"></a>' + r[1] + '</td>' + rowend;\n                } else if (vr == 'country') {\n                    var in_dariah = r[3] == 1 ? 'dariah' : '';\n                    h += rowstart + '<td class=\"country_code\">' + r[1] + '<td><td class=\"country_name\">' + r[2] + '<td><td class=\"in_dariah\">' + in_dariah + '</td><td class=\"latlng\">' + r[4] + '</td><td class=\"latlng\">' + r[5] + '</td>' + rowend;\n                } else if (vr == 'type' || vr == 'tadiraha' || vr == 'tadiraho' || vr == 'tadiraht') {\n                    h += rowstart + '<td class=\"value\">' + r[1] + '<td>' + rowend;\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        h += '</table>';\n        this.component.container.get(vr).html(h);\n    },\n    _display: function _display(row, vr, open_ids) {\n        var that = this;\n        var hidec = row.find('.hidec');\n        var showc = row.find('.showc');\n        var rid = row.attr('rid');\n        var detail = this.component.container.get(vr).find('tr[iid=\"' + rid + '\"]');\n        if (open_ids.has(rid)) {\n            hidec.show();\n            showc.hide();\n            if (detail.length) {\n                detail.show();\n            }\n        } else {\n            hidec.hide();\n            showc.hide();\n            if (detail.length) {\n                detail.hide();\n            }\n        }\n    },\n    _set_it: function _set_it(control, vr, state) {\n        var open_ids = g.from_str(this.state.getState(key));\n        var rid = control.closest('tr').attr('rid');\n        if (state) {\n            open_ids.add(rid);\n        } else {\n            open_ids.delete(rid);\n        }\n        this.state.setState(key, g.to_str(open_ids));\n    },\n    show: function show(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    weld: function weld(vr) {\n        this._html(vr);\n    },\n    wire: function wire(vr) {\n        var that = this;\n        var cc = this.component.container.get(vr);\n        var key = this.component.name + '_' + vr;\n        cc.find('.hidec').click(function (e) {\n            e.preventDefault();\n            that._set_it($(this), vr, true);\n        });\n        cc.find('.showc').click(function (e) {\n            e.preventDefault();\n            that._set_it($(this), vr, false);\n        });\n    },\n    work: function work(vr) {\n        var that = this;\n        var key = this.component.name + '_' + vr;\n        var cc = this.component.container.get(vr);\n        var open_ids = g.from_str(this.component.state.getState(this.component.name + '_' + vr));\n        cc.find('tr[rid]').each(function () {\n            that._display($(this), vr, open_ids);\n        });\n    }\n};\n\nmodule.exports = List;\n\n},{\"./generic.js\":7}],10:[function(require,module,exports){\n'use strict';\n\n/* START PROCESSING\n * The dynamic construction of the page starts here\n */\n\nvar Page = require('./page.js');\n\n$(function () {\n  new Page().work();\n});\n\n},{\"./page.js\":12}],11:[function(require,module,exports){\n'use strict';\n\n/* MESSAGES\n * Msg is a function that issues messages to a specified element.\n * It has also controls for clearing and hiding the messages.\n */\n\nfunction Msg(destination, on_clear) {\n    var _this = this;\n\n    this._destination = $('#' + destination);\n    this._trash_control = $('#trash_' + destination);\n    this._trash_control_para = this._trash_control.closest('p');\n    this._trash_control.click(function (e) {\n        e.preventDefault();\n        _this.clear();\n    });\n    this._hide();\n    this._on_clear = on_clear;\n};\n\nMsg.prototype = {\n    _hide: function _hide() {\n        this._destination.hide();\n        this._trash_control_para.hide();\n    },\n    _show: function _show() {\n        this._destination.show();\n        if (this._destination.html() != '') {\n            this._trash_control_para.show();\n        }\n    },\n    clear: function clear() {\n        this._destination.html('');\n        if (this._on_clear != undefined) {\n            this._on_clear();\n        }\n        this._hide();\n    },\n    msg: function msg(text, kind) {\n        if (kind == undefined) {\n            kind = 'info';\n        }\n        var message_text = this._destination.html();\n        this._destination.html(message_text + '<p class=\"' + kind + '\">' + text + '</p>');\n        this._show();\n    }\n};\n\nmodule.exports = Msg;\n\n},{}],12:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/* TOP LEVEL: PAGE\n * This is the page function. \n * It creates a ViewState function, which contains the current state.\n * The state is created on the basis of request variables, and from then it\n * reflects the user actions.\n * The page specifies all components and initializes them.\n * A component is specfied by the following fields\n * - destination: left => left sidebar; right => right sidebar; middle => middle column\n * - name: a string that can be used to refer to the component later on, via method getComponent\n * - subcomponents: a list of names for which a subcomponent will be made. The html will be generated per subcomponent.\n * - fetch: boolean which says whether this component needs data from the server\n * - work first: boolean which says that child components can only be wired after work of the parent component.\n * - specific: an object that holds the specific functionality of this component.\n * The control component has work first = true, because only after choosing a list, the list control can fetch the specific list and wire itself.\n * All other components have work first = false, because it is desirable that child components start wiring as soon as possible.\n * For example: the facet component is parent of the individual facets.\n * When facet starts working, the individual controls should already be wired.\n * Because work first = false, wiring of the individual facets will be triggered after wiring of the generic facet component.\n * N.B. Individual facets can only be wired after the list component (their grandfather) has been wired.\n * This will go OK, because after wiring the list, the facet will be wired and then the individual facets.\n * The _routing dictionary specifies when the work methods of components should be triggered.\n * Its keys are the labels of components, and for every component a list of other component keys is given.\n * These are the components that will be applied (in that order) after the key component. \n * \n *  work from page: if true, this component's work method will be called directly by the page's work method;\n *   if false, the page will skip this component when working. It is assumed that this component will be applied by another component.\n *   This practice must be followed, if the application of state to a component should come after a fetch of another component.\n *   If the page would work the viewstate directly to this component, it would happen before the other's components data had been loaded.\n *   Example: a filter component F, that filters a big list fetched by another component L. L's work should call F's work.\n * After every user action, the state is changed, and a call to the Page's work() method is issued.\n * The page will issue the work call forth to all components.\n */\n\nvar g = require('./generic.js');\nvar ViewState = require('./viewstate.js');\nvar Share = require('./share.js');\nvar CType = require('./ctype.js');\nvar TadirahO = require('./tadiraho.js');\nvar TadirahA = require('./tadiraha.js');\nvar TadirahT = require('./tadiraht.js');\nvar EUmap = require('./eumap.js');\nvar Filter = require('./filter.js');\nvar Facet = require('./facet.js');\nvar List = require('./list.js');\nvar Item = require('./item.js');\nvar Control = require('./control.js');\nvar Component = require('./components.js');\n\nfunction Page() {\n    // the one and only page object\n    this.name = 'page';\n    this.state = new ViewState(this);\n    var main_lists = this.state.getValues('list');\n    var contrib_list = new Set(['contrib']);\n    var empty_list = new Set(['']);\n    this._component_specs = new Map([['share', { dest: 'body', variants: empty_list, fetch_url: null, specific: Share }], ['control', { dest: 'left', variants: main_lists, fetch_url: null, specific: Control }], ['list', { dest: 'middle', variants: main_lists, fetch_url: 'list', specific: List }], ['item', { dest: 'list', variants: main_lists, fetch_url: 'item', specific: Item }], ['facet', { dest: 'control', variants: main_lists, fetch_url: null, specific: Facet }], ['filter', { dest: 'facet', variants: main_lists, fetch_url: null, specific: Filter }], ['eumap', { dest: 'facet', variants: contrib_list, fetch_url: 'country', specific: EUmap }], ['ctype', { dest: 'facet', variants: contrib_list, fetch_url: 'type', specific: CType }], ['tadiraha', { dest: 'facet', variants: contrib_list, fetch_url: 'tadiraha', specific: TadirahA }], ['tadiraho', { dest: 'facet', variants: contrib_list, fetch_url: 'tadiraho', specific: TadirahO }], ['tadiraht', { dest: 'facet', variants: contrib_list, fetch_url: 'tadiraht', specific: TadirahT }]]),\n    /* some components are being dealt with on the basis of additional identifiers, such as item\n     * Those components are specified below, and the specs of all components will get an extra attribute\n     * by_id, which is true if the component needs an id.\n     * The actual ids come from a request variable name_xxx, where name is the name of the component and xxx is the name of a list.\n     */\n    this._by_id = new Set(['item']), this.stages = new Map([['weld', true], ['wire', true], ['work', false]]); // true means: once only, false means: my be repeated\n    this.stages_prev = new Map([['wire', 'weld'], ['work', 'wire']]);\n    this._before = new Map([['weld', new Map([['item', new Set(['list'])], ['facet', new Set(['control', 'list'])], ['filter', new Set(['facet'])], ['eumap', new Set(['facet', 'filter'])], ['ctype', new Set(['facet', 'eumap'])], ['tadiraha', new Set(['facet', 'ctype'])], ['tadiraho', new Set(['facet', 'tadiraha'])], ['tadiraht', new Set(['facet', 'tadiraho'])], ['share', new Set(['facet', 'list'])]])], ['wire', new Map([['item', new Set(['list'])], ['facet', new Set(['filter', 'eumap', 'ctype', 'tadiraha', 'tadiraho', 'tadiraht'])], ['filter', new Set(['list'])], ['eumap', new Set(['list'])], ['ctype', new Set(['list'])], ['tadiraha', new Set(['list'])], ['tadiraho', new Set(['list'])], ['tadiraht', new Set(['list'])]])], ['work', new Map([['facet', new Set(['filter', 'eumap', 'ctype', 'tadiraha', 'tadiraho', 'tadiraht'])]])]]);\n    this._ignore = new Set([\n        //'ctype',\n        //'tadiraha',\n        //'tadiraht',\n        //'tadiraho',\n        //'eumap',\n        //'filter',\n    ]), this.components = new Map();\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n        for (var _iterator = this._component_specs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _step$value = _slicedToArray(_step.value, 2);\n\n            var name = _step$value[0];\n            var spec = _step$value[1];\n\n            if (this._ignore.has(name)) {\n                continue;\n            }\n            spec.by_id = this._by_id.has(name);\n            var component = new Component(name, spec, this);\n            component.children = new Map();\n            this.components.set(name, component);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n            }\n        } finally {\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n\n    var _iteratorNormalCompletion2 = true;\n    var _didIteratorError2 = false;\n    var _iteratorError2 = undefined;\n\n    try {\n        for (var _iterator2 = this.components[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _step2$value = _slicedToArray(_step2.value, 2);\n\n            var name = _step2$value[0];\n            var child_component = _step2$value[1];\n\n            var dest_name = this._component_specs.get(name).dest;\n            if (this.components.has(dest_name)) {\n                var parent_component = this.components.get(dest_name);\n                parent_component.children.set(name, child_component);\n            }\n        }\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally {\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n            }\n        } finally {\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n\n    this._resolveTiming();\n    this._setHeight(80);\n    History.Adapter.bind(window, 'statechange', this.state.work());\n};\n\nPage.prototype = {\n    _setHeight: function _setHeight(subtract) {\n        // the heights of the sidebars are set, depending on the height of the window\n        var wh = window.innerHeight - subtract + 'px';\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n            for (var _iterator3 = new Set(['middle', 'left', 'right'])[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var w = _step3.value;\n\n                $('#' + w).css('height', wh);\n            }\n        } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                }\n            } finally {\n                if (_didIteratorError3) {\n                    throw _iteratorError3;\n                }\n            }\n        }\n    },\n    _resolveTiming: function _resolveTiming() {\n        /* the time constraints must form a directed acyclic graph.\n         * If that is the case, we need a linear order in which we can make the promises\n         * This function will calculate that order (of course, several orders are possible)\n         * Algorithm:\n         *\n         * A: make a graph of all tasks, a task is the combination of a component with a stage.\n         *\n         * B: compute sets of nodes that have a longest predecessor path of fixed length n\n         *\n         * 1. determine all tasks without predecessors, this is S0                                                (max length of predecessor chain = 0)\n         * 2. determine all tasks with all predecessors in S0, this is S1                                             (max length of predecessor chain = 1)\n         * 3. determine all tasks with: all predecessors in S0 or S1, at least one predecessor in S1, this is S2  (max length of predecessor chain = 2)\n         * ...\n         * n+1. determine all tasks with: all predecessors in S0, S1, ..., Sn, at least ione predecessor in Sn\n         *\n         * C: \n         * Prove theorem 1: Sn = {all nodes with longest chain of predecessors has length n}.\n         * Prove theorem 2: all nodes outside union of all Sn: they are part of a cycle.\n         *\n         * D: \n         * The required order is: first the nodes of S0 (in any order), then those of S1, then those of S2, and so on.\n         */\n        var timing_nodes = [];\n        var timing_edges = new Map(); // keys are nodes that must come before other nodes\n        var timing_edges_inv = new Map(); // keys are nodes that must come after other nodes\n        // A: collect the nodes: pairs of component name and stage\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n            for (var _iterator4 = this.components.keys()[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var name = _step4.value;\n                var _iteratorNormalCompletion15 = true;\n                var _didIteratorError15 = false;\n                var _iteratorError15 = undefined;\n\n                try {\n                    for (var _iterator15 = this.stages.keys()[Symbol.iterator](), _step15; !(_iteratorNormalCompletion15 = (_step15 = _iterator15.next()).done); _iteratorNormalCompletion15 = true) {\n                        var stage = _step15.value;\n\n                        timing_nodes.push(name + '-' + stage);\n                    }\n                } catch (err) {\n                    _didIteratorError15 = true;\n                    _iteratorError15 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion15 && _iterator15.return) {\n                            _iterator15.return();\n                        }\n                    } finally {\n                        if (_didIteratorError15) {\n                            throw _iteratorError15;\n                        }\n                    }\n                }\n            }\n            // collect the edges (we need to store every edge both ways)\n        } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                }\n            } finally {\n                if (_didIteratorError4) {\n                    throw _iteratorError4;\n                }\n            }\n        }\n\n        function addEdge(prev_node, next_node) {\n            if (!timing_edges.has(prev_node)) {\n                timing_edges.set(prev_node, new Set());\n            }\n            if (!timing_edges_inv.has(next_node)) {\n                timing_edges_inv.set(next_node, new Set());\n            }\n            timing_edges.get(prev_node).add(next_node);\n            timing_edges_inv.get(next_node).add(prev_node);\n        }\n        // 1. per component, the stages are ordered\n        var _iteratorNormalCompletion5 = true;\n        var _didIteratorError5 = false;\n        var _iteratorError5 = undefined;\n\n        try {\n            for (var _iterator5 = this.stages_prev[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                var _step5$value = _slicedToArray(_step5.value, 2);\n\n                var next_stage = _step5$value[0];\n                var prev_stage = _step5$value[1];\n                var _iteratorNormalCompletion16 = true;\n                var _didIteratorError16 = false;\n                var _iteratorError16 = undefined;\n\n                try {\n                    for (var _iterator16 = this.components.keys()[Symbol.iterator](), _step16; !(_iteratorNormalCompletion16 = (_step16 = _iterator16.next()).done); _iteratorNormalCompletion16 = true) {\n                        var _name = _step16.value;\n\n                        addEdge(_name + '-' + prev_stage, _name + '-' + next_stage);\n                    }\n                } catch (err) {\n                    _didIteratorError16 = true;\n                    _iteratorError16 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion16 && _iterator16.return) {\n                            _iterator16.return();\n                        }\n                    } finally {\n                        if (_didIteratorError16) {\n                            throw _iteratorError16;\n                        }\n                    }\n                }\n            }\n            // 2. add the specific time constraints\n        } catch (err) {\n            _didIteratorError5 = true;\n            _iteratorError5 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                    _iterator5.return();\n                }\n            } finally {\n                if (_didIteratorError5) {\n                    throw _iteratorError5;\n                }\n            }\n        }\n\n        var _iteratorNormalCompletion6 = true;\n        var _didIteratorError6 = false;\n        var _iteratorError6 = undefined;\n\n        try {\n            for (var _iterator6 = this._before[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                var _step6$value = _slicedToArray(_step6.value, 2);\n\n                var _stage = _step6$value[0];\n                var nexts = _step6$value[1];\n                var _iteratorNormalCompletion17 = true;\n                var _didIteratorError17 = false;\n                var _iteratorError17 = undefined;\n\n                try {\n                    for (var _iterator17 = nexts[Symbol.iterator](), _step17; !(_iteratorNormalCompletion17 = (_step17 = _iterator17.next()).done); _iteratorNormalCompletion17 = true) {\n                        var _step17$value = _slicedToArray(_step17.value, 2);\n\n                        var next_name = _step17$value[0];\n                        var prevs = _step17$value[1];\n\n                        if (this._ignore.has(next_name)) {\n                            continue;\n                        }\n                        var _iteratorNormalCompletion18 = true;\n                        var _didIteratorError18 = false;\n                        var _iteratorError18 = undefined;\n\n                        try {\n                            for (var _iterator18 = prevs.keys()[Symbol.iterator](), _step18; !(_iteratorNormalCompletion18 = (_step18 = _iterator18.next()).done); _iteratorNormalCompletion18 = true) {\n                                var prev_name = _step18.value;\n\n                                if (this._ignore.has(prev_name)) {\n                                    continue;\n                                }\n                                addEdge(prev_name + '-' + _stage, next_name + '-' + _stage);\n                            }\n                        } catch (err) {\n                            _didIteratorError18 = true;\n                            _iteratorError18 = err;\n                        } finally {\n                            try {\n                                if (!_iteratorNormalCompletion18 && _iterator18.return) {\n                                    _iterator18.return();\n                                }\n                            } finally {\n                                if (_didIteratorError18) {\n                                    throw _iteratorError18;\n                                }\n                            }\n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError17 = true;\n                    _iteratorError17 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion17 && _iterator17.return) {\n                            _iterator17.return();\n                        }\n                    } finally {\n                        if (_didIteratorError17) {\n                            throw _iteratorError17;\n                        }\n                    }\n                }\n            }\n            // B: compute the Sn (in subset)\n        } catch (err) {\n            _didIteratorError6 = true;\n            _iteratorError6 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                    _iterator6.return();\n                }\n            } finally {\n                if (_didIteratorError6) {\n                    throw _iteratorError6;\n                }\n            }\n        }\n\n        var n = 0;\n        var subset = [];\n        var visited = new Set(); // collect all nodes that end up in an Sn\n        while (n <= timing_nodes.length) {\n            subset.push(new Set());\n            if (n == 0) {\n                // first round\n                var _iteratorNormalCompletion7 = true;\n                var _didIteratorError7 = false;\n                var _iteratorError7 = undefined;\n\n                try {\n                    for (var _iterator7 = timing_nodes[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                        var node = _step7.value;\n                        // select all nodes without prev_nodes\n                        if (!timing_edges_inv.has(node)) {\n                            subset[n].add(node); // and store them in subset[0]            \n                        }\n                    }\n                } catch (err) {\n                    _didIteratorError7 = true;\n                    _iteratorError7 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                            _iterator7.return();\n                        }\n                    } finally {\n                        if (_didIteratorError7) {\n                            throw _iteratorError7;\n                        }\n                    }\n                }\n            } else {\n                    var _iteratorNormalCompletion8 = true;\n                    var _didIteratorError8 = false;\n                    var _iteratorError8 = undefined;\n\n                    try {\n                        for (var _iterator8 = visited[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n                            var prev_node = _step8.value;\n                            // start with prev_nodes in visited\n                            if (timing_edges.has(prev_node)) {\n                                // and consider their next_nodes\n                                var _iteratorNormalCompletion9 = true;\n                                var _didIteratorError9 = false;\n                                var _iteratorError9 = undefined;\n\n                                try {\n                                    for (var _iterator9 = timing_edges.get(prev_node)[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n                                        var next_node = _step9.value;\n\n                                        if (!visited.has(next_node)) {\n                                            // but only if the next_node is not yet visited\n                                            var good = true;\n                                            var _iteratorNormalCompletion10 = true;\n                                            var _didIteratorError10 = false;\n                                            var _iteratorError10 = undefined;\n\n                                            try {\n                                                for (var _iterator10 = timing_edges_inv.get(next_node)[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n                                                    var other_prev_node = _step10.value;\n                                                    // consider the other prev nodes of the next nodes\n                                                    if (!visited.has(other_prev_node)) {\n                                                        // and require that they have been visited already\n                                                        good = false;\n                                                        break;\n                                                    }\n                                                }\n                                            } catch (err) {\n                                                _didIteratorError10 = true;\n                                                _iteratorError10 = err;\n                                            } finally {\n                                                try {\n                                                    if (!_iteratorNormalCompletion10 && _iterator10.return) {\n                                                        _iterator10.return();\n                                                    }\n                                                } finally {\n                                                    if (_didIteratorError10) {\n                                                        throw _iteratorError10;\n                                                    }\n                                                }\n                                            }\n\n                                            if (good) {\n                                                subset[n].add(next_node); // if all is well, we add next_node to subset[n]\n                                            }\n                                        }\n                                    }\n                                } catch (err) {\n                                    _didIteratorError9 = true;\n                                    _iteratorError9 = err;\n                                } finally {\n                                    try {\n                                        if (!_iteratorNormalCompletion9 && _iterator9.return) {\n                                            _iterator9.return();\n                                        }\n                                    } finally {\n                                        if (_didIteratorError9) {\n                                            throw _iteratorError9;\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError8 = true;\n                        _iteratorError8 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion8 && _iterator8.return) {\n                                _iterator8.return();\n                            }\n                        } finally {\n                            if (_didIteratorError8) {\n                                throw _iteratorError8;\n                            }\n                        }\n                    }\n                }\n            if (subset[n].size == 0) {\n                // if there are no new nodes, the next rounds will also not yield new nodes,\n                break; //  so we are done\n            }\n            var _iteratorNormalCompletion11 = true;\n            var _didIteratorError11 = false;\n            var _iteratorError11 = undefined;\n\n            try {\n                for (var _iterator11 = subset[n][Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n                    var _node = _step11.value;\n                    // after each round we add the saved next_nodes to the visited nodes\n                    visited.add(_node);\n                }\n            } catch (err) {\n                _didIteratorError11 = true;\n                _iteratorError11 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion11 && _iterator11.return) {\n                        _iterator11.return();\n                    }\n                } finally {\n                    if (_didIteratorError11) {\n                        throw _iteratorError11;\n                    }\n                }\n            }\n\n            n++;\n        }\n        this._tasks = [];\n        this._timing = new Map();\n        if (visited.size != timing_nodes.length) {\n            var cycle = [];\n            var _iteratorNormalCompletion12 = true;\n            var _didIteratorError12 = false;\n            var _iteratorError12 = undefined;\n\n            try {\n                for (var _iterator12 = timing_nodes[Symbol.iterator](), _step12; !(_iteratorNormalCompletion12 = (_step12 = _iterator12.next()).done); _iteratorNormalCompletion12 = true) {\n                    var _node2 = _step12.value;\n\n                    if (!visited.has(_node2)) {\n                        cycle.push(_node2);\n                    }\n                }\n            } catch (err) {\n                _didIteratorError12 = true;\n                _iteratorError12 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion12 && _iterator12.return) {\n                        _iterator12.return();\n                    }\n                } finally {\n                    if (_didIteratorError12) {\n                        throw _iteratorError12;\n                    }\n                }\n            }\n\n            console.log('Circular timing constraints detected', cycle);\n        } else {\n            var _iteratorNormalCompletion13 = true;\n            var _didIteratorError13 = false;\n            var _iteratorError13 = undefined;\n\n            try {\n                for (var _iterator13 = subset[Symbol.iterator](), _step13; !(_iteratorNormalCompletion13 = (_step13 = _iterator13.next()).done); _iteratorNormalCompletion13 = true) {\n                    var nodes = _step13.value;\n                    var _iteratorNormalCompletion14 = true;\n                    var _didIteratorError14 = false;\n                    var _iteratorError14 = undefined;\n\n                    try {\n                        for (var _iterator14 = nodes[Symbol.iterator](), _step14; !(_iteratorNormalCompletion14 = (_step14 = _iterator14.next()).done); _iteratorNormalCompletion14 = true) {\n                            var _node3 = _step14.value;\n\n                            this._tasks.push(_node3);\n                        }\n                    } catch (err) {\n                        _didIteratorError14 = true;\n                        _iteratorError14 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion14 && _iterator14.return) {\n                                _iterator14.return();\n                            }\n                        } finally {\n                            if (_didIteratorError14) {\n                                throw _iteratorError14;\n                            }\n                        }\n                    }\n                }\n            } catch (err) {\n                _didIteratorError13 = true;\n                _iteratorError13 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion13 && _iterator13.return) {\n                        _iterator13.return();\n                    }\n                } finally {\n                    if (_didIteratorError13) {\n                        throw _iteratorError13;\n                    }\n                }\n            }\n\n            this._timing = timing_edges_inv;\n            console.log('Timing resolved', this._tasks);\n        }\n    },\n\n    getComponent: function getComponent(name) {\n        return this.components.get(name);\n    },\n    getContainer: function getContainer(name, variants) {\n        if (this.components.has(name)) {\n            return this.components.get(name).container;\n        } else {\n            var container = new Map();\n            var addto = name == 'body' ? $('body') : $('#' + name);\n            var _iteratorNormalCompletion19 = true;\n            var _didIteratorError19 = false;\n            var _iteratorError19 = undefined;\n\n            try {\n                for (var _iterator19 = variants[Symbol.iterator](), _step19; !(_iteratorNormalCompletion19 = (_step19 = _iterator19.next()).done); _iteratorNormalCompletion19 = true) {\n                    var vr = _step19.value;\n\n                    container.set(vr, addto);\n                }\n            } catch (err) {\n                _didIteratorError19 = true;\n                _iteratorError19 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion19 && _iterator19.return) {\n                        _iterator19.return();\n                    }\n                } finally {\n                    if (_didIteratorError19) {\n                        throw _iteratorError19;\n                    }\n                }\n            }\n\n            return container;\n        }\n    },\n    getBefore: function getBefore(name, stage) {\n        var prev_nodes = [];\n        var next_node = name + '-' + stage;\n        var _iteratorNormalCompletion20 = true;\n        var _didIteratorError20 = false;\n        var _iteratorError20 = undefined;\n\n        try {\n            for (var _iterator20 = (this._timing.get(next_node) || new Set())[Symbol.iterator](), _step20; !(_iteratorNormalCompletion20 = (_step20 = _iterator20.next()).done); _iteratorNormalCompletion20 = true) {\n                var prev_node = _step20.value;\n\n                prev_nodes.push(prev_node.split('-'));\n            }\n        } catch (err) {\n            _didIteratorError20 = true;\n            _iteratorError20 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion20 && _iterator20.return) {\n                    _iterator20.return();\n                }\n            } finally {\n                if (_didIteratorError20) {\n                    throw _iteratorError20;\n                }\n            }\n        }\n\n        return prev_nodes;\n    },\n    work: function work() {\n        var _iteratorNormalCompletion21 = true;\n        var _didIteratorError21 = false;\n        var _iteratorError21 = undefined;\n\n        try {\n            for (var _iterator21 = this._tasks[Symbol.iterator](), _step21; !(_iteratorNormalCompletion21 = (_step21 = _iterator21.next()).done); _iteratorNormalCompletion21 = true) {\n                var task = _step21.value;\n\n                var _task$split = task.split('-');\n\n                var _task$split2 = _slicedToArray(_task$split, 2);\n\n                var name = _task$split2[0];\n                var stage = _task$split2[1];\n\n                var component = this.getComponent(name);\n                var _iteratorNormalCompletion22 = true;\n                var _didIteratorError22 = false;\n                var _iteratorError22 = undefined;\n\n                try {\n                    for (var _iterator22 = component.variants[Symbol.iterator](), _step22; !(_iteratorNormalCompletion22 = (_step22 = _iterator22.next()).done); _iteratorNormalCompletion22 = true) {\n                        var vr = _step22.value;\n\n                        component[stage](vr);\n                    }\n                } catch (err) {\n                    _didIteratorError22 = true;\n                    _iteratorError22 = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion22 && _iterator22.return) {\n                            _iterator22.return();\n                        }\n                    } finally {\n                        if (_didIteratorError22) {\n                            throw _iteratorError22;\n                        }\n                    }\n                }\n            }\n        } catch (err) {\n            _didIteratorError21 = true;\n            _iteratorError21 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion21 && _iterator21.return) {\n                    _iterator21.return();\n                }\n            } finally {\n                if (_didIteratorError21) {\n                    throw _iteratorError21;\n                }\n            }\n        }\n    }\n};\n\nmodule.exports = Page;\n\n},{\"./components.js\":1,\"./control.js\":2,\"./ctype.js\":3,\"./eumap.js\":4,\"./facet.js\":5,\"./filter.js\":6,\"./generic.js\":7,\"./item.js\":8,\"./list.js\":9,\"./share.js\":14,\"./tadiraha.js\":15,\"./tadiraho.js\":16,\"./tadiraht.js\":17,\"./viewstate.js\":18}],13:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/* INDIVIDUAL COMPONENT: generic facet based on related values\n * CType, Tadiraho and EUmap inherit from this.\n */\n\nvar g = require('./generic.js');\n\nfunction Relative(component, rtype, cols, cutoff, shortsize) {\n    this.component = component;\n    this.distilled = new Map();\n    this._list = new Map();\n    this._list2 = new Map();\n    this._related_state = new Map();\n    this._all_values_control = new Map();\n    this._statistics = new Map();\n    this._related_values_list = new Map();\n    this._related_values_index = new Map();\n    this._related_values_all = new Map();\n    this._no_values = { value: '-', name: '-none' };\n    this._type = rtype;\n    this._cols = cols || 2;\n    this._cutoff = cutoff || 14;\n    this._shortsize = shortsize || 6;\n};\n\nRelative.prototype = {\n    _html: function _html(vr) {\n        var _this = this;\n\n        var type_sg = this.component.state.showState('list', this._type, 'sg');\n        var type_pl = this.component.state.showState('list', this._type, 'pl');\n        var h = '';\n        h += this._preHtml(vr);\n        h += '\\n<div>\\n    <p class=\"dctrl\"><span fct=\"' + this.component.name + '-' + vr + '\"></span> By ' + type_sg + '</p>\\n    <p class=\"all\"><span rv=\"_all\" class=\"stats\"></span> <a rv=\"_all\" href=\"#\" class=\"facet_single_all\">all ' + type_pl + '</a></p>\\n    <table class=\"value_list\" id=\"list-' + this._type + '-vals_' + vr + '\">\\n        <tr>\\n';\n        this._related_values_list.get(vr).forEach(function (related_value, i, ar) {\n            if (i % _this._cols == 0 && i > 0 && i < ar.length) {\n                h += '</tr><tr>';\n            }\n            var raw_value = _this._related_values_index.get(vr).get(related_value);\n            h += '\\n            <td><span rv=\"' + related_value + '\" class=\"stats\"></span></td>\\n            <td><a rv=\"' + related_value + '\" href=\"#\" class=\"facet_single\">' + g.escapeHTML(raw_value) + '</a></td>\\n            ';\n        });\n        h += '\\n        </tr>\\n    </table>\\n    <p class=\"value_list2\" id=\"list2-' + this._type + '-vals_' + vr + '\">\\n';\n        this._related_values_list.get(vr).forEach(function (related_value, i, ar) {\n            var raw_value = _this._related_values_index.get(vr).get(related_value);\n            var compact_value = g.escapeHTML(g.compact(_this._cutoff, _this._shortsize, raw_value));\n            h += '<a href=\"#\" rv=\"' + related_value + '\" class=\"passive_small\" title=\"' + g.escapeHTML(raw_value) + '\">' + compact_value + '</a> ';\n        });\n        h += '\\n    </p>\\n</div>';\n        this.component.container.get(vr).html(h);\n    },\n    _dressup: function _dressup(vr) {\n        var cc = this.component.container.get(vr);\n        this._list.set(vr, cc.find('#list-' + this._type + '-vals_' + vr));\n        this._list2.set(vr, cc.find('#list2-' + this._type + '-vals_' + vr));\n        var that = this;\n        this._list.get(vr).find('.facet_single').click(function (e) {\n            e.preventDefault();\n            var related_value = $(this).attr('rv');\n            var selected = g.from_str(that.component.state.getState('rel_' + that._type + '_' + vr));\n            if (selected.has(related_value)) {\n                selected.delete(related_value);\n            } else {\n                selected.add(related_value);\n            }\n            that.component.state.setState('rel_' + that._type + '_' + vr, g.to_str(selected));\n            cc.find('.last_handled').removeClass('last_handled');\n            $(this).addClass('last_handled');\n        });\n        this._list2.get(vr).find('.passive_small').click(function (e) {\n            e.preventDefault();\n            var related_value = $(this).attr('rv');\n            var selected = g.from_str(that.component.state.getState('rel_' + that._type + '_' + vr));\n            if (selected.has(related_value)) {\n                selected.delete(related_value);\n            } else {\n                selected.add(related_value);\n            }\n            that.component.state.setState('rel_' + that._type + '_' + vr, g.to_str(selected));\n            $(this).closest('div').find('.morec').click();\n            var last_handled = that._list.get(vr).find('a[rv=\"' + related_value + '\"]');\n            cc.find('.last_handled').removeClass('last_handled');\n            last_handled.addClass('last_handled');\n            $('#left')[0].scrollTop = 50;\n            last_handled[0].scrollIntoView({\n                behavior: 'smooth',\n                alignToTop: 'true'\n            });\n        });\n        this._all_values_control.set(vr, this.component.container.get(vr).find('[rv=\"_all\"]'));\n        this._all_values_control.get(vr).click(function (e) {\n            e.preventDefault();\n            var ison = $(this).hasClass('ison');\n            if (ison) {\n                that.component.state.setState('rel_' + that._type + '_' + vr, '');\n            } else {\n                that.component.state.setState('rel_' + that._type + '_' + vr, g.to_str(that._related_values_all.get(vr)));\n            }\n        });\n    },\n    _setFacet: function _setFacet(vr) {\n        var all_selected = true;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = this._related_values_index.get(vr).keys()[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var related_value = _step.value;\n\n                var facet_cell = this._list.get(vr).find('[rv=\"' + related_value + '\"]');\n                var facet_cell2 = this._list2.get(vr).find('[rv=\"' + related_value + '\"]');\n                if (this._related_state.get(vr).has(related_value + '')) {\n                    facet_cell.addClass('ison');\n                    facet_cell2.addClass('ison');\n                } else {\n                    facet_cell.removeClass('ison');\n                    facet_cell2.removeClass('ison');\n                    all_selected = false;\n                }\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n\n        if (all_selected) {\n            this._all_values_control.get(vr).addClass('ison');\n        } else {\n            this._all_values_control.get(vr).removeClass('ison');\n        }\n    },\n    stats: function stats(vr) {\n        this._statistics.set(vr, new Map());\n        var rvs = this._statistics.get(vr);\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n            for (var _iterator2 = this._related_values_index.get(vr).keys()[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                var related_value = _step2.value;\n\n                rvs.set(related_value, 0);\n            }\n        } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                    _iterator2.return();\n                }\n            } finally {\n                if (_didIteratorError2) {\n                    throw _iteratorError2;\n                }\n            }\n        }\n\n        var related_info = this.component.related_info.get(vr);\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n            for (var _iterator3 = this.distilled.get(vr)[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var i = _step3.value;\n\n                var has_related_value = false;\n                if (related_info.has(i)) {\n                    var _iteratorNormalCompletion5 = true;\n                    var _didIteratorError5 = false;\n                    var _iteratorError5 = undefined;\n\n                    try {\n                        for (var _iterator5 = related_info.get(i)[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                            var _related_value = _step5.value;\n\n                            rvs.set(_related_value, rvs.get(_related_value) + 1);\n                            has_related_value = true;\n                        }\n                    } catch (err) {\n                        _didIteratorError5 = true;\n                        _iteratorError5 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                                _iterator5.return();\n                            }\n                        } finally {\n                            if (_didIteratorError5) {\n                                throw _iteratorError5;\n                            }\n                        }\n                    }\n                }\n                if (!has_related_value) {\n                    var nv = this._no_values.value;\n                    rvs.set(nv, rvs.get(nv) + 1);\n                }\n            }\n        } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                }\n            } finally {\n                if (_didIteratorError3) {\n                    throw _iteratorError3;\n                }\n            }\n        }\n\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n            for (var _iterator4 = rvs[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var _step4$value = _slicedToArray(_step4.value, 2);\n\n                var _related_value2 = _step4$value[0];\n                var stat = _step4$value[1];\n\n                this.component.container.get(vr).find('span[rv=\"' + _related_value2 + '\"].stats').html(stat);\n            }\n        } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                }\n            } finally {\n                if (_didIteratorError4) {\n                    throw _iteratorError4;\n                }\n            }\n        }\n\n        this.component.container.get(vr).find('span[rv=\"_all\"].stats').html(this.distilled.get(vr).length);\n        this._myStats(vr);\n    },\n    v: function v(vr, i) {\n        var related_info = this.component.related_info.get(vr);\n        var related_state = this._related_state.get(vr);\n        if (related_info.has(i)) {\n            var _iteratorNormalCompletion6 = true;\n            var _didIteratorError6 = false;\n            var _iteratorError6 = undefined;\n\n            try {\n                for (var _iterator6 = related_info.get(i)[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n                    var related_value = _step6.value;\n\n                    if (related_state.has(related_value + '')) {\n                        return true;\n                    }\n                }\n            } catch (err) {\n                _didIteratorError6 = true;\n                _iteratorError6 = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                        _iterator6.return();\n                    }\n                } finally {\n                    if (_didIteratorError6) {\n                        throw _iteratorError6;\n                    }\n                }\n            }\n        } else {\n            if (related_state.has(this._no_values.value)) {\n                return true;\n            }\n        }\n        return false;\n    },\n    show: function show(vr) {\n        return this.component.state.getState('list') == vr;\n    },\n    weld: function weld(vr) {\n        this._related_values_list.set(vr, []);\n        this._related_values_index.set(vr, new Map());\n        this._related_values_all.set(vr, new Set());\n        this._plainWeld(vr);\n        this._myWeld(vr);\n        this._related_values_list.get(vr).push(this._no_values.value);\n        this._related_values_index.get(vr).set(this._no_values.value, this._no_values.name);\n        this._related_values_all.get(vr).add(this._no_values.value);\n        this._html(vr);\n    },\n    wire: function wire(vr) {\n        this._myDressup(vr);\n        this._dressup(vr);\n    },\n    work: function work(vr) {\n        this._related_state.set(vr, g.from_str(this.component.state.getState('rel_' + this._type + '_' + vr)));\n        this._mySetFacet(vr);\n        this._setFacet(vr);\n    },\n    _plainWeld: function _plainWeld(vr) {\n        var related_values = this.component.related_values.get(vr);\n        var _iteratorNormalCompletion7 = true;\n        var _didIteratorError7 = false;\n        var _iteratorError7 = undefined;\n\n        try {\n            for (var _iterator7 = related_values[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n                var _step7$value = _slicedToArray(_step7.value, 2);\n\n                var i = _step7$value[0];\n                var related_value = _step7$value[1];\n\n                this._related_values_list.get(vr).push(i);\n                this._related_values_index.get(vr).set(i, related_value);\n                this._related_values_all.get(vr).add(i);\n            }\n        } catch (err) {\n            _didIteratorError7 = true;\n            _iteratorError7 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion7 && _iterator7.return) {\n                    _iterator7.return();\n                }\n            } finally {\n                if (_didIteratorError7) {\n                    throw _iteratorError7;\n                }\n            }\n        }\n\n        this._related_values_list.get(vr).sort(function (a, b) {\n            return related_values.get(a) < related_values.get(b) ? -1 : related_values.get(a) > related_values.get(b) ? 1 : 0;\n        });\n    },\n    _myWeld: function _myWeld(vr) {},\n    _preHtml: function _preHtml(vr) {\n        return '';\n    },\n    _myDressup: function _myDressup(vr) {},\n    _mySetFacet: function _mySetFacet(vr) {},\n    _myStats: function _myStats(vr) {}\n};\n\nmodule.exports = Relative;\n\n},{\"./generic.js\":7}],14:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: Control\n * Manages the sharing drawer for generating hyperlinks to the current page.\n */\n\nvar g = require('./generic.js');\n\nfunction Share(component) {\n    // the SHARE component\n    this.component = component;\n};\n\nShare.prototype = {\n    show: function show(vr) {\n        return true;\n    },\n    weld: function weld(vr) {\n        var h = '\\n<p id=\"citeh\">Cite</p>\\n<table align=\"center\">\\n    <tr>\\n        <td class=\"clip_pv clr\">\\n            <a lnk=\"\" href=\"#\" id=\"clip_pv_md\" title=\"link to page content and appearance (markdown)\" class=\"ctrl fa fa-level-down fa-lg fa-fw\"></a>\\n            <a lnk=\"\" href=\"#\" id=\"clip_pv_ht\" title=\"link to page content and appearance (html)\" class=\"ctrl fa fa-external-link-square fa-lg fa-fw\"></a>\\n            <a lnk=\"\" href=\"#\" id=\"clip_pv_htc\" title=\"link to page content (html)\" class=\"ctrl fa fa-external-link fa-lg fa-fw\"></a>\\n            <a lnk=\"\" href=\"#\" id=\"clip_pv_cn\" title=\"copy page content\" class=\"ctrl fa fa-file-text-o fa-lg fa-fw\"></a>\\n        </td>\\n    </tr>\\n    <tr>\\n        <th class=\"clip_pv\" width=\"60px\">page view</th>\\n    </tr>\\n    <tr class=\"citexpl\">\\n        <td class=\"clip_pv\"><span id=\"xc_pv\" class=\"ctrl fa fa-chevron-right fa-fw\"></span><span id=\"x_pv\" class=\"detail\">share link to this page with or without view settings.</span></td>\\n    </tr>\\n</table>\\n<p id=\"cdiagpub\"></p>\\n<p id=\"cdiagsts\"></p>\\n';\n        this.component.container.get(vr).html(h);\n    },\n    wire: function wire(vr) {\n        var that = this;\n        var cc = this.component.container.get(vr);\n        var slink = $('#self_link');\n        slink.hide();\n        cc.addClass('socialdrawer');\n        cc.find('.detail').hide();\n        cc.find('#clip_pv_md,#clip_pv_ht,#clip_pv_htc,#clip_pv_nl').click(function (e) {\n            e.preventDefault();\n            window.prompt('Press <Cmd-C> and then <Enter> to copy link on clipboard', $(this).attr('lnk'));\n        });\n        cc.find('#clip_pv_cn').click(function (e) {\n            e.preventDefault();\n            var containerid = 'middle';\n            var app_url_raw = app_url_cite + that.component.state.getVars(true);\n            slink.show();\n            slink.attr('href', app_url_raw);\n            g.selectText(containerid);\n        });\n        cc.find('#xc_pv').click(function (e) {\n            e.preventDefault();g.toggleDetail($(this), $('#x_pv'));\n        });\n        cc.click(function (e) {\n            e.preventDefault();\n            var app_url_raw = app_url_cite + that.component.state.getVars(true);\n            var app_url_rawc = app_url_cite + that.component.state.getVars(false);\n            $('#citeh').hide();\n            $('#cdiagpub').html('');\n            $('#cdiagsts').html('');\n            $('.clip_pv.clr,#cdiagpub,#cdiagsts').removeClass('error warning good special');\n            var pvtitle = g.escapeHTML($('title').text());\n            $('#clip_pv_md').attr('lnk', '[${pvtitle}](${app_url_raw})');\n            $('#clip_pv_ht').attr('lnk', app_url_raw);\n            $('#clip_pv_htc').attr('lnk', app_url_rawc);\n            $('#clip_pv_cn').attr('lnk', app_url_raw);\n            $('#clip_pv_cn').attr('tit', pvtitle);\n            $(this).animate({ height: '100px', width: '200px', opacity: 0.95 }, 300);\n        });\n        cc.mouseleave(function () {\n            slink.hide();\n            //g.deselectText();\n            $('#citeh').show();\n            cc.animate({ height: '20px', width: '40px', opacity: .7 }, 300);\n            return false;\n        });\n    },\n    work: function work(vr) {}\n};\n\nmodule.exports = Share;\n\n},{\"./generic.js\":7}],15:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: ctype\n * This manages the facet \"contribution type\"\n */\n\nvar Relative = require('./relative.js');\n\nfunction TadirahA(component) {\n  Relative.call(this, component, 'tadiraha');\n};\n\nTadirahA.prototype = Object.create(Relative.prototype);\nTadirahA.prototype.constructor = TadirahA;\n\nmodule.exports = TadirahA;\n\n},{\"./relative.js\":13}],16:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: ctype\n * This manages the facet \"contribution type\"\n */\n\nvar Relative = require('./relative.js');\n\nfunction TadirahO(component) {\n  Relative.call(this, component, 'tadiraho');\n};\n\nTadirahO.prototype = Object.create(Relative.prototype);\nTadirahO.prototype.constructor = TadirahO;\n\nmodule.exports = TadirahO;\n\n},{\"./relative.js\":13}],17:[function(require,module,exports){\n'use strict';\n\n/* INDIVIDUAL COMPONENT: ctype\n * This manages the facet \"contribution type\"\n */\n\nvar Relative = require('./relative.js');\n\nfunction TadirahT(component) {\n  Relative.call(this, component, 'tadiraht', 1, 30);\n};\n\nTadirahT.prototype = Object.create(Relative.prototype);\nTadirahT.prototype.constructor = TadirahT;\n\nmodule.exports = TadirahT;\n\n},{\"./relative.js\":13}],18:[function(require,module,exports){\n'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\n/* VIEW STATE\n * Contains the current state, based on request variables and local storage.\n * Request variables have precedence over local storage.\n * Request variables are checked and validated and translated, translated values go to local storage.\n * There is a list of recognized request variables, with their types and allowable values.\n */\n\nvar g = require('./generic.js');\nvar Msg = require('./message.js');\n\nfunction ViewState(page) {\n    this._data = {}; // this should be an object and not a collection such as Map. Otherwise it does not function well with popstate.\n    this._specs = new Map();\n    this.page = page;\n    this._msg = new Msg('msg_page');\n    this._compile_specs();\n    this._getInitstate();\n    this._addHistory();\n};\n\nViewState.prototype = {\n    _spec_info: {\n        vars: new Set(['list', 'flt_contrib', 'flt_country', 'flt_type', 'flt_tadiraha', 'flt_tadiraho', 'flt_tadiraht', 'rel_country_contrib', 'rel_type_contrib', 'rel_tadiraha_contrib', 'rel_tadiraho_contrib', 'rel_tadiraht_contrib', 'item_contrib', 'item_country', 'sort']),\n        vals: new Map([['list', new Set(['contrib', 'country', 'type', 'tadiraha', 'tadiraho', 'tadiraht'])], ['sort', new Map([['v', true], ['x', false]])]]),\n        default_value: new Map([['list', 'contrib'], ['sort', true]]),\n        typ: new Map([['sort', 'boolean']]),\n        url: new Set(['list', 'item_contrib', 'item_country']),\n        showas: new Map([['list', new Map([['contrib', { sg: 'contribution', pl: 'contributions' }], ['country', { sg: 'country', pl: 'countries' }], ['type', { sg: 'type', pl: 'types' }], ['tadiraha', { sg: 'tadirah activity', pl: 'tadirah activities' }], ['tadiraho', { sg: 'tadirah object', pl: 'tadirah objects' }], ['tadiraht', { sg: 'tadirah technique', pl: 'tadirah techniques' }]])]])\n    },\n    _compile_specs: function _compile_specs() {\n        var info = this._spec_info;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n            for (var _iterator = info.vars[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var v = _step.value;\n\n                var spec = {};\n                spec.vals = info.vals.get(v) || null;\n                spec.default_value = info.default_value.get(v) || '';\n                spec.typ = info.typ.get(v) || 'string';\n                spec.url = info.url.has(v);\n                spec.showas = info.showas.get(v) || {};\n                this._specs.set(v, spec);\n            }\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return) {\n                    _iterator.return();\n                }\n            } finally {\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    },\n    _validate: function _validate(v, val) {\n        var newval = void 0,\n            message = void 0;\n        if (this._specs.has(v)) {\n            var spec = this._specs.get(v);\n            if (spec.typ == 'string') {\n                if (spec.vals) {\n                    if (spec.vals.has(val)) {\n                        newval = val;\n                    } else {\n                        newval = spec.default_value;\n                        this._msg.msg('illegal string value for ' + v + ': \"' + val + '\" is replaced by \"' + spec.default_value + '\"', 'warning');\n                    }\n                } else {\n                    newval = val;\n                }\n            } else if (spec.typ == 'integer') {\n                if (/^(\\-|\\+)?[0-9]+$/.test(val)) {\n                    newval = Number(val);\n                } else {\n                    newval = spec.default_value;\n                    this._msg.msg('not a number value for ' + v + ': \"' + val + '\" is replaced by \"' + spec.default_value + '\"', 'warning');\n                }\n                if (newval < spec.limits.min) {\n                    this._msg.msg('number to small for ' + v + ': \"' + newval + '\" is replaced by \"' + spec.limits.min + '\"', 'warning');\n                }\n                if (newval > spec.limits.max) {\n                    this._msg.msg('number to big for ' + v + ': \"' + newval + '\" is replaced by \"' + spec.limits.max + '\"', 'warning');\n                }\n            } else if (spec.typ == 'boolean') {\n                if (spec.vals.has(val)) {\n                    newval = spec.vals.get(val);\n                } else {\n                    newval = spec.default_value;\n                    this._msg.msg('illegal boolean value for ' + v + ': \"' + val + '\" is replaced by \"' + spec.default_value + '\"', 'warning');\n                }\n            }\n        } else {\n            newval = null;\n            this._msg.msg('unknown parameter: ' + v + '=' + val, 'warning');\n        }\n        return newval;\n    },\n    getVars: function getVars(comprehensive) {\n        var vars = [];\n        for (var v in this._data) {\n            var val = this._data[v];\n            var spec = this._specs.get(v);\n            if (comprehensive || spec.url) {\n                if (spec.typ == 'string' || spec.typ == 'integer') {\n                    vars.push(v + '=' + val);\n                } else if (spec.typ == 'boolean') {\n                    var _iteratorNormalCompletion2 = true;\n                    var _didIteratorError2 = false;\n                    var _iteratorError2 = undefined;\n\n                    try {\n                        for (var _iterator2 = spec.vals[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n                            var _step2$value = _slicedToArray(_step2.value, 2);\n\n                            var valid_val = _step2$value[0];\n                            var trans_val = _step2$value[1];\n\n                            if (trans_val == val) {\n                                vars.push(v + '=' + valid_val);\n                            }\n                        }\n                    } catch (err) {\n                        _didIteratorError2 = true;\n                        _iteratorError2 = err;\n                    } finally {\n                        try {\n                            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                                _iterator2.return();\n                            }\n                        } finally {\n                            if (_didIteratorError2) {\n                                throw _iteratorError2;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return vars.join('&');\n    },\n    _getInitstate: function _getInitstate() {\n        var _iteratorNormalCompletion3 = true;\n        var _didIteratorError3 = false;\n        var _iteratorError3 = undefined;\n\n        try {\n            for (var _iterator3 = g.request_vars[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n                var _step3$value = _slicedToArray(_step3.value, 2);\n\n                var v = _step3$value[0];\n                var val = _step3$value[1];\n\n                if (!this._specs.has(v)) {\n                    this._msg.msg('unknown parameter: ' + v + '=' + val, 'warning');\n                }\n            }\n        } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                    _iterator3.return();\n                }\n            } finally {\n                if (_didIteratorError3) {\n                    throw _iteratorError3;\n                }\n            }\n        }\n\n        var _iteratorNormalCompletion4 = true;\n        var _didIteratorError4 = false;\n        var _iteratorError4 = undefined;\n\n        try {\n            for (var _iterator4 = this._specs[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n                var _step4$value = _slicedToArray(_step4.value, 2);\n\n                var v = _step4$value[0];\n                var spec = _step4$value[1];\n\n                var val = null;\n                if (g.request_vars.has(v)) {\n                    var raw_val = g.request_vars.get(v);\n                    val = this._validate(v, raw_val);\n                    g.localstorage_vars.set(v, val);\n                } else if (g.localstorage_vars.isSet(v)) {\n                    val = g.localstorage_vars.get(v);\n                } else {\n                    val = spec.default_value;\n                    g.localstorage_vars.set(v, val);\n                }\n                this._data[v] = val;\n            }\n        } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n        } finally {\n            try {\n                if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                    _iterator4.return();\n                }\n            } finally {\n                if (_didIteratorError4) {\n                    throw _iteratorError4;\n                }\n            }\n        }\n    },\n    _addHistory: function _addHistory(title, view_url) {\n        var tit = 'DARIAH contribution tool';\n        var this_url = app_url + '?' + this.getVars(false);\n        History.pushState(this._data, tit, this_url);\n    },\n    setState: function setState(v, val) {\n        this._data[v] = val;\n        g.localstorage_vars.set(v, val);\n        this._addHistory();\n    },\n    getState: function getState(v) {\n        return this._data[v];\n    },\n    getValues: function getValues(v) {\n        return this._specs.get(v).vals;\n    },\n    showState: function showState(v, val, mode) {\n        var result = val;\n        var md = mode == undefined ? 'sg' : mode;\n        var showas = this._specs.get(v).showas;\n        if (showas.has(val)) {\n            result = showas.get(val)[mode];\n        }\n        return result;\n    },\n    work: function work() {\n        return function () {\n            var state = History.getState();\n            if (state && state.data) {\n                this._data = state.data;\n                this.page.work();\n            }\n        }.bind(this);\n    }\n};\n\nmodule.exports = ViewState;\n\n},{\"./generic.js\":7,\"./message.js\":11}]},{},[10])\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n"],"sourceRoot":"/source/"}